{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/modules/helper.js","webpack:///./src/modules/optionsUtils.js","webpack:///./src/modules/optionsAjax.js","webpack:///./src/modules/options.js","webpack:///./src/modules/validationRules.js","webpack:///./src/modules/ajaxCall.js","webpack:///./src/modules/submit.js","webpack:///./src/modules/listenerCallbacks.js","webpack:///./src/modules/formStartup.js","webpack:///./src/modules/constructor.js","webpack:///./src/modules/destroy.js","webpack:///./src/modules/getFormData.js","webpack:///./src/modules/init.js","webpack:///./src/modules/checkDirtyField.js","webpack:///./src/modules/isValid.js","webpack:///./src/modules/isValidField.js","webpack:///./src/modules/validateField.js","webpack:///./src/modules/isValidForm.js","webpack:///./src/modules/validateForm.js","webpack:///./src/index.js","webpack:///./src/modules/validationErrors.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","fieldsStringSelector","addClass","element","cssClasses","split","forEach","className","classList","add","checkFormEl","formEl","isString","isFormSelector","isDOMNode","document","querySelector","tagName","toLowerCase","result","executeCallback","callbackOption","callbackData","tempOptions","self","this","options","mergeObjects","callbackFnList","push","Array","isArray","cbFn","getSplitChar","string","splitChar","indexOf","node","Element","isPrototypeOf","isFieldForChangeEvent","fieldEl","matches","isNodeList","nodeList","NodeList","out","arguments","length","obj","toString","isObject","concat","slice","removeClass","remove","serializeObject","constructor","keys","reduce","a","k","encodeURIComponent","join","toCamelCase","replace","all","letter","toUpperCase","validateFieldObjDefault","validateFormObjDefault","fields","defaultCallbacksInOptions","fieldOptions","onValidation","fieldsArray","containerEl","closest","isReqFrom","reqMoreEl","getAttribute","skipUIfeedback","checked","errorClasses","error","errorEmpty","errorRule","valid","extraErrorClass","isChecks","checkedElLength","querySelectorAll","errors","empty","errorClassToRemove","formOptions","getFormData","filteredFields","formData","isCheckbox","type","isRadio","isSelect","checkboxes","from","filter","field","checkedRadio","selectedOpts","option","selected","ajaxOptions","cache","credentials","headers","method","redirect","timeout","url","location","href","dirty","focusOnRelated","handleFileUpload","handleValidation","maxFileSize","onPastePrevented","preventPasteFields","strictHtmlValidation","validateOnEvents","ajaxSubmit","beforeSend","handleSubmit","onSubmitComplete","onSubmitError","onSubmitSuccess","validationRulesAttributes","checkbox","data","dataChecksEl","checks","attrValue","JSON","parse","isMinOk","isMaxOk","minChecks","maxChecks","e","Error","equalTo","checkFromEl","exactLength","valueLength","minlength","maxlength","file","MIMEtype","accept","RegExp","filesList","files","exceedMaxFileSize","size","isAcceptedFileType","test","acceptedFileType","valueL","isMinlengthOk","isMaxlengthOk","stringLength","max","isDate","maxVal","reverse","min","minVal","pattern","fieldPattern","radio","fieldChecked","trim","requiredFrom","isValidValue","required","ajaxCall","formDataObj","timeoutTimer","btnEl","isMultipart","body","formDataMultipart","FormData","append","idx","stringify","Headers","controller","AbortController","signal","window","setTimeout","abort","fetch","then","response","ok","Promise","reject","fetchMethod","contentType","methodName","getFetchMethod","clearTimeout","disabled","submit","event","isAjaxForm","eventPreventDefault","enableBtn","preventDefault","validateForm","resolve","formValidation","beforeSendData","stopExecution","callbacksBeforeSend","acc","res","beforeSendDataNew","dataList","callbackFns","dataTypeNumber","target","fieldValue","stopImmediatePropagation","valueReplaced","keypressMaxlength","maxLength","keyPressed","which","keyCode","pastePrevent","validation","eventName","isFieldForChangeEventBoolean","isReqMore","findReqMoreEl","findReqFromEl","id","focus","validateField","realtedFieldEqualTo","formStartup","addEventListener","listenerCallbacks","useCapturing","constructorFn","optionsObj","argsL","checkFormElem","formjs","Form","freeze","destroy","validationListenerNames","removeEventListener","formFieldsEl","elem","init","formFields","currentFieldName","currentFieldType","isCheckboxOrRadio","fakeEventObj","isInitialized","checkDirtyField","isValid","fieldType","fieldAttributes","attributes","sort","b","attrValidations","attrValidationsResult","attr","attrName","isAttrValueWithFn","isAttrNameWithFn","extraValObj","unshift","item","extraVal","validationRules","fieldErrors","validationErrors","rule","isValidField","fieldElem","fieldOptionsObj","isRequired","isValidateIfFilled","isValidForm","fieldsList","map","list","areAllFieldsValid","fieldObj","errorsObj","rulesObj","email","missingAtChar","splitAt_at","missingUserName","missingDomain","missingExtensionDot","missingExtension","extLength","minlengthExtension","date","number","version","FormJS"],"mappings":"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","file":"formjs.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\nexport const\n\nfieldsStringSelector = 'input:not([type=\"reset\"]):not([type=\"submit\"]):not([type=button]):not([type=hidden]), select, textarea',\n\naddClass = function( element, cssClasses ){\n    cssClasses.split(' ').forEach(function(className){\n        element.classList.add( className );\n    });\n},\n\ncheckFormEl = function( formEl ){\n    let isString = typeof formEl,\n        isValidNodeSelector = isString === 'string' && isDOMNode(document.querySelector(formEl)),\n        isFormSelector = isValidNodeSelector && document.querySelector(formEl).tagName.toLowerCase() === 'form',\n        obj = {\n            result: isDOMNode(formEl) || isFormSelector,\n            element: (isString === 'string' ? document.querySelector(formEl) : formEl)\n        };\n\n    return obj;\n},\n\nexecuteCallback = function( callbackOption, callbackData = {}, tempOptions = {} ){\n    let self = this,\n        options = mergeObjects({}, self.options, tempOptions),\n        callbackFnList = [];\n\n    if( typeof callbackOption === 'function' ){\n        callbackFnList.push( callbackOption );\n    } else if( Array.isArray(callbackOption) ) {\n        callbackFnList = callbackOption;\n    }\n\n    callbackFnList.forEach(function(cbFn){\n        cbFn.call( self, callbackData, options );\n    });\n},\n\ngetSplitChar = function( string ){\n    let splitChar = '.';\n\n    if( string.indexOf(splitChar) === -1 ){\n        if( string.indexOf('-') >= 0 ){\n            splitChar = '-';\n        } else if( string.indexOf('/') >= 0 ){\n            splitChar = '/';\n        }\n    }\n\n    return splitChar;\n},\n\nisDOMNode = function( node ){\n    return Element.prototype.isPrototypeOf( node );\n},\n\nisFieldForChangeEvent = function ( fieldEl ) {\n    return fieldEl.matches('select, [type=\"radio\"], [type=\"checkbox\"], [type=\"file\"]');\n},\n\nisNodeList = function( nodeList ){\n    return NodeList.prototype.isPrototypeOf( nodeList );\n},\n\nisPlainObject = function( object ){\n    return Object.prototype.toString.call( object ) === '[object Object]';\n},\n\nmergeObjects = function( out = {} ){\n    for(let i=1; i<arguments.length; i++){\n        let obj = arguments[i];\n\n        if(!obj){ continue; }\n\n        for(let key in obj){\n            let isArray = Object.prototype.toString.call(obj[key]) === \"[object Array]\";\n            let isObject = Object.prototype.toString.call(obj[key]) === \"[object Object]\";\n\n            // COPY ONLY ENUMERABLE PROPERTIES\n            if( obj.hasOwnProperty(key) ){\n                if( isArray ){\n\n                    if( typeof out[key] === 'undefined' ){\n                        out[key] = [];\n                    }\n                    out[key] = out[key].concat( obj[key].slice(0) );\n\n                } else if( isObject ){\n\n                    out[key] = mergeObjects(out[key], obj[key]);\n\n                } else {\n\n                    // * STRING | NUMBER | BOOLEAN | FUNCTION\n                    if( Array.isArray(out[key]) ){\n                        // IF THIS IS ONE OF ABOVE (*) AND THE DESTINATION OBJECT IS AN ARRAY\n                        out[key].push(obj[key]);\n                    } else {\n                        out[key] = obj[key];\n                    }\n\n                }\n            }\n        }\n    }\n\n    return out;\n},\n\nremoveClass = function( element, cssClasses ){\n    cssClasses.split(' ').forEach(function(className){\n        element.classList.remove( className );\n    });\n},\n\nserializeObject = function( obj ){\n    var objToString = (\n            (obj && typeof obj === 'object' && obj.constructor === Object) ? \n            Object.keys(obj)\n                .reduce(function(a,k){\n                    a.push(k+'='+encodeURIComponent(obj[k]));\n                    return a\n                },[]).join('&') : \n            obj\n    );\n    return objToString;\n},\n\ntoCamelCase = function( string ){\n    return string.replace(/-([a-z])/ig, function(all, letter){ return letter.toUpperCase(); });\n},\n\nvalidateFieldObjDefault = { result: false, fieldEl: null },\n\nvalidateFormObjDefault = { result: true, fields: [] }\n","\nimport { addClass, mergeObjects, removeClass } from './helper';\n\nexport const defaultCallbacksInOptions = {\n    fieldOptions: {\n\n        onValidation: function onValidationDefault ( fieldsArray, tempOptions = {} ) {\n\n            let self = this,\n                options = mergeObjects( {}, self.options.fieldOptions, tempOptions.fieldOptions );\n\n            fieldsArray.forEach(function( obj ){\n                let fieldEl = obj.fieldEl,\n                    containerEl = fieldEl.closest('[data-formjs-question]'),\n                    isReqFrom = fieldEl.matches('[data-required-from]'),\n                    reqMoreEl = self.formEl.querySelector( fieldEl.getAttribute('data-required-from') );\n                \n                if( containerEl !== null && !options.skipUIfeedback ){\n                    if( obj.result ){\n\n                        if( !isReqFrom || (isReqFrom && reqMoreEl.checked) ){\n                            // IF FIELD IS VALID\n                            let errorClasses = options.cssClasses.error + ' ' + options.cssClasses.errorEmpty + ' ' + options.cssClasses.errorRule;\n                            removeClass( containerEl, errorClasses );\n                            addClass( containerEl, options.cssClasses.valid );\n                        }\n\n                    } else {\n\n                        // IF FIELD IS NOT VALID\n                        let extraErrorClass = options.cssClasses.errorRule;\n\n                        // HANDLE CASE OF FIELD data-checks\n                        let isChecks = fieldEl.matches('[data-checks]'),\n                            checkedElLength = (isChecks ? containerEl.querySelectorAll('[name=\"' + fieldEl.name + '\"]:checked').length : 0);\n\n                        if( (!isChecks && (obj.errors && obj.errors.empty)) || (isChecks && checkedElLength === 0) ){\n                            extraErrorClass = options.cssClasses.errorEmpty;\n                        }\n\n                        let errorClasses = options.cssClasses.error + ' ' + extraErrorClass,\n                            errorClassToRemove = options.cssClasses.errorEmpty + ' ' + options.cssClasses.errorRule;\n                        removeClass( containerEl, options.cssClasses.valid + ' ' + errorClassToRemove );\n                        addClass( containerEl, errorClasses );\n\n                    }\n                }\n            });\n            \n        }\n\n    },\n    formOptions: {\n\n        getFormData: function getFormDataDefault ( filteredFields ) {\n\n            let formData = {},\n                self = this,\n                formEl = self.formEl;\n\n            filteredFields.forEach(function( fieldEl ){\n                let isCheckbox = fieldEl.type === 'checkbox',\n                    isRadio = fieldEl.type === 'radio',\n                    isSelect = fieldEl.matches('select'),\n                    name = fieldEl.name,\n                    value = fieldEl.value;\n                                \n                if( isCheckbox ) {\n                    \n                    value = fieldEl.checked;\n                    let checkboxes = Array.from( formEl.querySelectorAll('[name=\"'+ name +'\"]') );\n                    if( checkboxes.length > 1 ){\n\n                        value = [];\n                        let checkedElems = checkboxes.filter(field => field.checked);\n                        checkedElems.forEach(fieldEl => {\n                            value.push( fieldEl.value );\n                        });\n\n                    }\n                        \n                } else if( isRadio ){\n                    \n                    let checkedRadio = formEl.querySelector('[name=\"'+ name +'\"]:checked');\n                    value = (checkedRadio === null ? null : checkedRadio.value);\n                    \n                } else if( isSelect ){\n\n                    let selectedOpts = Array.from( fieldEl.options ).filter(option => option.selected);\n                    if( selectedOpts.length > 1 ){\n\n                        value = [];\n                        selectedOpts.forEach(fieldEl => {\n                            value.push( fieldEl.value );\n                        });\n\n                    }\n                }\n\n                formData[ name ] = value;\n            });\n\n            return formData;\n\n        }\n\n    }\n}\n","\nexport let ajaxOptions = {\n    cache:              'no-store',\n    credentials:        'same-origin',\n    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept':       'application/json'\n    },\n    method:             'POST',\n    mode:               'same-origin',\n    redirect:           'follow',\n    timeout:            0,\n    url:                location.href\n}\n","\nimport { defaultCallbacksInOptions } from './optionsUtils';\nimport { ajaxOptions } from './optionsAjax';\n//import { ajaxOptions } from './optionsAjaxXhr';\n\nexport const options = {\n\n    fieldOptions: {\n        cssClasses: {\n            dirty:              'is-dirty',\n            error:              'has-error',\n            errorEmpty:         'has-error-empty',\n            errorRule:          'has-error-rule',\n            valid:              'is-valid'\n        },\n        focusOnRelated:         true,\n        handleFileUpload:       true,\n        handleValidation:       true,\n        maxFileSize:            10,\n        onPastePrevented:       [],\n        onValidation:           [defaultCallbacksInOptions.fieldOptions.onValidation],\n        preventPasteFields:     '[type=\"password\"], [data-equal-to]',\n        skipUIfeedback:         false,\n        strictHtmlValidation:   true,\n        validateOnEvents:       'input change'\n    },\n\n    formOptions: {\n        ajaxOptions:            ajaxOptions,\n        ajaxSubmit:             true,\n        beforeSend:             [],\n        getFormData:            defaultCallbacksInOptions.formOptions.getFormData,\n        handleSubmit:           true,\n        onSubmitComplete:       [],\n        onSubmitError:          [],\n        onSubmitSuccess:        []\n    }\n    \n}\n","\nimport { getSplitChar } from './helper';\n\nexport const validationRules = {\n            \n    date: function( string ){\n        // DATE AS ISO 8601 DATE FORMAT     YYYY MM DD | YYYY/MM/DD | YYYY.MM.DD | YYYY-MM-DD\n\n        let date = /^(((19|[2-9]\\d)\\d{2})[ \\/\\-.](0[13578]|1[02])[ \\/\\-.](0[1-9]|[12]\\d|3[01]))|(((19|[2-9]\\d)\\d{2})[ \\/\\-.](0[13456789]|1[012])[ \\/\\-.](0[1-9]|[12]\\d|30))|(((19|[2-9]\\d)\\d{2})[ \\/\\-.]02[ \\/\\-.](0[1-9]|1\\d|2[0-8]))|(((1[6-9]|[2-9]\\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))[ \\/\\-.]02[ \\/\\-.]29)$/g.test( string ),\n            obj = {\n                result: date\n            };\n\n        return obj;\n    },\n    \n    email: function( string ){\n        // FROM https://emailregex.com\n        // AS FOR RFC 5322 Official Standard EMAIL MUST BE AT LEAST:\n        // a@a.aa\n        let obj = {\n            result: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test( string )\n        };\n\n        return obj;\n    },\n    \n    number: function( string ){\n        // ALL NUMBERS ( INTEGERS AND FLOATING )\n        // VALID NUMBERS: 123 | 123.456 | .123\n        let obj = {\n            result: /[+-]?([0-9]*[.])?[0-9]+/.test( string )\n        };\n\n        return obj;\n    }\n    \n}\n\nexport const validationRulesAttributes = {\n\n    checkbox: function( data ){\n        let formEl = data.fieldEl.closest('form'),\n            dataChecksEl = formEl.querySelector('[name=\"' + data.fieldEl.name + '\"][data-checks]'),\n            obj = { result: data.fieldEl.checked };\n\n        if( dataChecksEl !== null ){\n            obj = this.checks({ attrValue: dataChecksEl.getAttribute('data-checks'), fieldEl: dataChecksEl});\n        }\n\n        return obj;\n    },\n\n    checks: function( data ){\n        try {\n            let attrValue = JSON.parse(data.attrValue),\n                fieldEl = data.fieldEl,\n                formEl = fieldEl.closest('form'),\n                checkedElLength = formEl.querySelectorAll('[name=\"' + fieldEl.name + '\"]:checked').length,\n                isMinOk = checkedElLength >= attrValue[0],\n                isMaxOk = checkedElLength <= attrValue[1],\n                obj = {\n                    result: isMinOk && isMaxOk\n                };\n\n            if( !obj.result ){\n\n                obj.errors = { checks: true };\n                if( !isMinOk ){ obj.errors.minChecks = true; }\n                if( !isMaxOk ){ obj.errors.maxChecks = true; }\n\n            }\n\n            return obj;\n        } catch(e){\n            throw new Error('\"data-checks\" attribute is not a valid array!');\n        }\n    },\n\n    equalTo: function( data ){\n        let fieldEl = data.fieldEl,\n            formEl = fieldEl.closest('form'),\n            checkFromEl = formEl.querySelector( '[name=\"' + fieldEl.getAttribute('data-equal-to') + '\"]' ),\n            obj = {\n                result: fieldEl.value === checkFromEl.value\n            };\n\n        if( !obj.result ){\n            \n            obj.errors = { equalTo: true };\n        }\n\n        return obj;\n    },\n    \n    exactLength: function( data ){\n        let valueLength = data.fieldEl.value.length,\n            exactLength = (data.attrValue * 1),\n            obj = {\n                result: valueLength === exactLength\n            };\n\n        if( !obj.result ){\n\n            obj.errors = { exactLength: true };\n            if( valueLength < exactLength ){ obj.errors.minlength = true; }\n            else { obj.errors.maxlength = true; }\n\n        }\n\n        return obj;\n    },\n\n    file: function( data ){\n        let fieldEl = data.fieldEl,\n            maxFileSize = (fieldEl.getAttribute('data-max-file-size') || data.fieldOptions.maxFileSize) * 1,\n            MIMEtype = (fieldEl.accept ? new RegExp(fieldEl.accept.replace( '*', '[^\\\\/,]+' )) : null),\n            filesList = Array.from(fieldEl.files),\n            obj = { result: true };\n\n        filesList.forEach(function( file ){\n            let exceedMaxFileSize = maxFileSize > 0 && (file.size/1024/1024) > maxFileSize,\n                isAcceptedFileType = (MIMEtype !== null ? MIMEtype.test(file.type) : true);\n\n            if( exceedMaxFileSize || !isAcceptedFileType ){\n                obj.result = false;\n                if( typeof obj.errors === 'undefined' ){\n                    obj.errors = {};\n                }\n                obj.errors.file = true;\n                if( exceedMaxFileSize ){ obj.errors.maxFileSize = true; }\n                if( !isAcceptedFileType ){ obj.errors.acceptedFileType = true; }\n\n            }\n        });\n\n        return obj;\n    },\n\n    length: function( data ){\n        try {\n            let valueL = data.fieldEl.value.length,\n                attrValue = JSON.parse(data.attrValue),\n                isMinlengthOk = valueL >= attrValue[0],\n                isMaxlengthOk = valueL <= attrValue[1],\n                obj = { result: isMinlengthOk && isMaxlengthOk };\n\n            if( !obj.result ){\n\n                obj.errors = { stringLength: true };\n                if( !isMinlengthOk ){ obj.errors.minlength = true; }\n                if( !isMaxlengthOk ){ obj.errors.maxlength = true; }\n\n            }\n\n            return obj;\n        } catch(e){\n            throw new Error('\"data-length\" attribute is not a valid array!');\n        }\n    },\n    \n    max: function( data ){\n        let fieldEl = data.fieldEl,\n            isDate = (fieldEl.matches('[type=\"date\"]') || fieldEl.matches('[data-subtype=\"date\"]') || fieldEl.matches('[data-subtype=\"dateDDMMYYYY\"]')),\n            value = data.fieldEl.value,\n            maxVal = data.attrValue;\n        \n        if( isDate ){\n\n            let splitChar = getSplitChar( value );\n\n            if( value.indexOf(splitChar) === 2 ){\n                // DD MM YYYY\n                value = value.split( splitChar ).reverse();\n            } else {\n                // YYYY MM DD\n                value = value.split( splitChar );\n            }\n\n            value = value.join('');\n            maxVal = maxVal.split('-').join('');\n\n        }\n\n        value = value * 1;\n        maxVal = maxVal * 1;\n\n        let obj = {\n                result: value <= maxVal\n            };\n\n        if( !obj.result ){\n            \n            obj.errors = { max: true };\n        }\n        \n        return obj;\n    },\n    \n    maxlength: function( data ){\n        const obj = {\n            result: data.fieldEl.value.length <= (data.attrValue * 1)\n        };\n\n        if( !obj.result ){\n\n            obj.errors = { maxlength: true };\n        }\n\n        return obj;\n    },\n    \n    min: function( data ){\n        let fieldEl = data.fieldEl,\n            isDate = (fieldEl.matches('[type=\"date\"]') || fieldEl.matches('[data-subtype=\"date\"]') || fieldEl.matches('[data-subtype=\"dateDDMMYYYY\"]')),\n            value = data.fieldEl.value,\n            minVal = data.attrValue;\n        \n        if( isDate ){\n\n            let splitChar = getSplitChar( value );\n\n            if( value.indexOf(splitChar) === 2 ){\n                // DD MM YYYY\n                value = value.split( splitChar ).reverse();\n            } else {\n                // YYYY MM DD\n                value = value.split( splitChar );\n            }\n\n            value = value.join('');\n            minVal = minVal.split('-').join('');\n\n        }\n\n        value = value * 1;\n        minVal = minVal * 1;\n\n        let obj = {\n                result: value >= minVal\n            };\n\n        if( !obj.result ){\n            \n            obj.errors = { min: true };\n        }\n        \n        return obj;\n    },\n\n    minlength: function( data ){\n        const obj = {\n            result: data.fieldEl.value.length >= (data.attrValue * 1)\n        };\n\n        if( !obj.result ){\n\n            obj.errors = { minlength: true };\n        }\n\n        return obj;\n    },\n\n    pattern: function( data ){\n        let fieldEl = data.fieldEl,\n            fieldPattern = fieldEl.pattern,\n            fieldRegex = new RegExp( fieldPattern ),\n            obj = {\n                result: fieldRegex.test( fieldEl.value )\n            };\n\n        if( !obj.result ){\n\n            obj.errors = { pattern: true };\n        }\n\n        return obj;\n    },\n\n    radio: function( data ){\n        let fieldEl = data.fieldEl,\n            fieldChecked = fieldEl.closest('form').querySelector( '[name=\"'+ fieldEl.name +'\"]:checked' ),\n            isValid = fieldChecked !== null && fieldChecked.value.trim().length > 0,\n            obj = { result: isValid };\n\n        return obj;\n    },\n\n    requiredFrom: function( data ){\n        let fieldEl = data.fieldEl,\n            formEl = fieldEl.closest('form'),\n            isValidValue = fieldEl.value.trim().length > 0,\n            reqMoreEl = formEl.querySelector( fieldEl.getAttribute('data-required-from') ),\n            checkedEl = formEl.querySelector( '[name=\"'+ reqMoreEl.name +'\"]:checked' ),\n            obj = { result: checkedEl !== null };\n\n        if( reqMoreEl.checked && reqMoreEl.required ){\n            obj.result = isValidValue;\n        }\n\n        if( !obj.result ){\n            obj.errors = { requiredFrom: true };\n        }\n        \n        return obj;\n    }\n    \n}\n","\nimport { executeCallback, mergeObjects, serializeObject } from './helper';\n\n// AJAX CALL USING fetch API\nexport function ajaxCall( formDataObj ){\n\n    let self = this,\n        formEl = self.formEl,\n        fieldOptions = self.options.fieldOptions,\n        formOptions = self.options.formOptions,\n        btnEl = formEl.querySelector('[type=\"submit\"]'),\n        timeoutTimer,\n        ajaxOptions = mergeObjects( {}, formOptions.ajaxOptions ),\n        isMultipart = ajaxOptions.headers['Content-Type'] === 'multipart/form-data';\n\n    ajaxOptions.body = formDataObj;\n    \n    // POST A FormData OBJECT ( multipart )\n    if( isMultipart && fieldOptions.handleFileUpload ){\n        let formDataMultipart = new FormData();\n        \n        for(let key in ajaxOptions.body){\n            formDataMultipart.append( key, ajaxOptions.body[key] );\n        }\n        \n        Array.from( formEl.querySelectorAll('[type=\"file\"]') ).forEach(function( field ){\n            Array.from(field.files).forEach(function( file, idx ){\n                let name = field.name+'['+ idx +']';\n                formDataMultipart.append( name, file, file.name );\n            });\n        });\n        \n        ajaxOptions.body = formDataMultipart;\n    }\n\n    if( ajaxOptions.method === 'GET' ){\n\n        // FETCH WITH \"GET\" METHOD CAN'T HAVE \"body\". SO IT IS APPENDED TO THE URL\n        ajaxOptions.url += ( /\\?/.test(ajaxOptions.url) ? '&' : '?' ) + serializeObject( ajaxOptions.body );\n        delete ajaxOptions.body;\n\n    } else {\n\n        if( ajaxOptions.headers['Content-Type'].indexOf('application/x-www-form-urlencoded') > -1 ){\n            // POST A NORMAL FORM\n            ajaxOptions.body = serializeObject( ajaxOptions.body );\n        } else if( !isMultipart ){\n            // POST A JSON STRING\n            ajaxOptions.body = JSON.stringify(ajaxOptions.body);\n        }\n\n    }\n\n    ajaxOptions.headers = new Headers( ajaxOptions.headers );\n\n    if ( ajaxOptions.timeout > 0 ) {\n        const controller = new AbortController();\n        const signal = controller.signal;\n\n        ajaxOptions.signal = signal;\n\n        timeoutTimer = window.setTimeout(function() {\n            controller.abort();\n        }, ajaxOptions.timeout);\n    }\n\n    fetch(ajaxOptions.url, ajaxOptions)\n        .then(function( response ){\n\n            if( !response.ok ){\n                return Promise.reject(response);\n            }\n\n            let getFetchMethod = function( response ){\n                let contentType = response.headers.get('Content-Type'),\n                    methodName = 'blob';\n\n                if( contentType.indexOf('application/json') > -1 ){\n                    methodName = 'json';\n                } else if( contentType.indexOf('text/') > -1 ){\n                    methodName = 'text';\n                }\n                \n                return methodName;\n            };\n            let fetchMethod = getFetchMethod( response );\n\n            return response[fetchMethod]();\n\n        })\n        .then(function( data ){\n            executeCallback.call( self, formOptions.onSubmitSuccess, data );\n        })\n        .catch(function( error ){\n            executeCallback.call( self, formOptions.onSubmitError, error );\n        })\n        .finally(function(){\n\n            if( timeoutTimer ){\n                window.clearTimeout( timeoutTimer );\n            }\n            btnEl.disabled = false;\n            executeCallback.call( self, formOptions.onSubmitComplete );\n\n        });\n    \n}\n","\nimport { mergeObjects, validateFormObjDefault } from './helper';\nimport { ajaxCall } from './ajaxCall';\n//import { ajaxCall } from './ajaxCallXhr';\n\nexport function submit( event ){\n\n    const self = this,\n          options = self.options,\n          isAjaxForm = options.formOptions.ajaxSubmit,\n          formEl = self.formEl,\n          btnEl = formEl.querySelector('[type=\"submit\"]'),\n          eventPreventDefault = ( enableBtn = true ) => {\n              if( btnEl && enableBtn ){ btnEl.disabled = false; }\n              if( event ){ event.preventDefault(); }\n          };\n\n    if( isAjaxForm ){\n        eventPreventDefault(false);\n    }\n\n    if( btnEl ){\n        if( btnEl.disabled ){\n            eventPreventDefault(false);\n            return false;\n        }\n        btnEl.disabled = true;\n    }\n    \n    const handleValidation = options.fieldOptions.handleValidation,\n          formValidationPromise = (handleValidation ? self.validateForm() : Promise.resolve(validateFormObjDefault));\n\n    formValidationPromise.then(formValidation => {\n\n        let beforeSendData = { stopExecution: false, formData: {} };\n\n        if( !formValidation.result ){\n            eventPreventDefault();\n            beforeSendData.stopExecution = true;\n            return [beforeSendData];\n        }\n        \n        let formDataObj = (isAjaxForm ? self.getFormData() : null),\n            callbacksBeforeSend = options.formOptions.beforeSend;\n\n        if( formDataObj ){\n            beforeSendData.formData = formDataObj;\n        }\n\n        return callbacksBeforeSend.reduce(function(acc, cbFn){\n            return acc.then(function (res) {\n                let beforeSendDataNew = mergeObjects({}, res[res.length - 1]);\n                if( beforeSendDataNew.stopExecution ){\n                    return Promise.resolve(res);\n                }\n                return cbFn.call(self, beforeSendDataNew, options).then(function (result) {\n                    res.push(result);\n                    return res;\n                });\n            });\n        }, Promise.resolve([beforeSendData]));\n\n    }).then(dataList => {\n\n        if( dataList.filter(data => data.stopExecution).length > 0 ){\n            eventPreventDefault();\n            return false;\n        }\n        \n        if( isAjaxForm ){\n            const formData = dataList[dataList.length - 1].formData;\n            ajaxCall.call(self, formData);\n        }\n\n    });\n    \n}\n","\nimport { executeCallback, fieldsStringSelector, isFieldForChangeEvent } from './helper';\nimport { submit } from './submit';\n\nexport const callbackFns = {\n\n    dataTypeNumber: function( event ){\n\n        const fieldEl = event.target;\n        \n        if( fieldEl.matches('[data-type=\"number\"]') ){\n            let fieldValue = fieldEl.value,\n                hasInvalidChars = /[^\\d.,+\\-]/.test(fieldValue);\n            \n            if( hasInvalidChars ){\n                event.stopImmediatePropagation();\n                let valueReplaced = fieldValue.replace(/[^\\d.,+\\-]/g, '');\n                fieldEl.value = valueReplaced;\n            }\n        }\n\n    },\n\n    keypressMaxlength: function( event ){\n\n        const fieldEl = event.target;\n        \n        if( fieldEl.matches( '[maxlength]' ) ){\n            const maxLength = fieldEl.maxLength * 1,\n                keyPressed = event.which || event.keyCode,\n                allowedKeys = [8, 37, 38, 39, 46];\n\n            if( fieldEl.value.length >= maxLength && allowedKeys.indexOf(keyPressed) === -1 ){\n                return false;\n            }\n        }\n\n    },\n\n    pastePrevent: function( event ){\n\n        const self = this,\n              fieldEl = event.target;\n        let fieldOptions = self.options.fieldOptions;\n\n        if( fieldEl.matches( fieldOptions.preventPasteFields ) ){     \n            event.preventDefault();\n            executeCallback.call( self, fieldOptions.onPastePrevented, fieldEl );\n        }\n\n    },\n\n    submit: function( event ){\n        submit.call( this, event );\n    },\n\n    validation: function( event ){\n\n        const self = this,\n            eventName = event.type,\n            fieldEl = event.target;\n\n        if( fieldEl.matches( fieldsStringSelector ) ){\n            const isFieldForChangeEventBoolean = isFieldForChangeEvent(fieldEl),\n                isRadio = fieldEl.type === 'radio',\n                isReqFrom = fieldEl.matches('[data-required-from]'),\n                isReqMore = fieldEl.matches('[data-require-more]'),\n                isValidValue = fieldEl.value.trim().length > 0;\n\n            // HANDLE data-require-more FIELDS\n            if( isRadio && eventName === 'change' ){\n                let findReqMoreEl = (isReqMore ? fieldEl : self.formEl.querySelector('[name=\"'+ fieldEl.name +'\"][data-require-more]')),\n                    findReqFromEl = (findReqMoreEl !== null ? self.formEl.querySelector('[data-required-from=\"#'+ findReqMoreEl.id +'\"]') : null);\n\n                if( isReqMore ){\n\n                    if( findReqFromEl !== null ){\n                        findReqFromEl.required = fieldEl.required;\n                        if( self.options.fieldOptions.focusOnRelated ){\n                            findReqFromEl.focus();\n                        }\n                    }\n\n                } else if( findReqMoreEl !== null ){\n\n                    if( findReqFromEl !== null ){\n                        findReqFromEl.required = findReqMoreEl.required && findReqMoreEl.checked;\n                        findReqFromEl.value = '';\n                    }\n\n                }\n            }\n\n            // HANDLE data-required-from FIELDS\n            if( isReqFrom ){\n                if( isValidValue ){\n\n                    let reqMoreEl = self.formEl.querySelector( fieldEl.getAttribute('data-required-from') );\n                    reqMoreEl.checked = true;\n                    fieldEl.required = reqMoreEl.required;\n                }\n            }\n            \n            if(\n                (isFieldForChangeEventBoolean && eventName === 'change') ||\n                (!isFieldForChangeEventBoolean && eventName !== 'change')\n            ){\n                \n                self.validateField( fieldEl ).then(obj => {\n                    const type = obj.fieldEl.type,\n                          realtedFieldEqualTo = obj.fieldEl.closest('form').querySelector('[data-equal-to=\"'+ obj.fieldEl.name +'\"]');\n\n                    if(\n                        // FIELD IS required OR data-validate-if-filled AND ITS data-equal-to FIELD HAS A VALUE\n                        (obj.fieldEl.required || obj.fieldEl.matches('[data-validate-if-filled]')) && \n                        !(type === 'checkbox' || type === 'radio') && \n                        realtedFieldEqualTo && realtedFieldEqualTo.value.trim() !== ''\n                    ){\n                        self.validateField( realtedFieldEqualTo );\n                    }\n                });\n\n            }\n        }\n        \n    }\n\n}\n","\nexport function formStartup(){\n\n    const self = this,\n          formEl = self.formEl;\n\n    if( !formEl.matches('[novalidate]') ){ return null; }\n\n    let fieldOptions = self.options.fieldOptions,\n        formOptions = self.options.formOptions;\n\n    // HANDLE FIELD VALIDATION\n    if( fieldOptions.handleValidation ){\n        \n        // VALIDATION WITH ATTRIBUTES LIKE HTML ONES ( ALSO FOR BUG FIXING, EG: maxlength IN ANDROID )\n        if( fieldOptions.strictHtmlValidation ){\n            \n            // maxlength\n            // MAXLENGTH IS BUGGY IN ANDROID BROWSERS\n            formEl.addEventListener('keypress', self.listenerCallbacks.keypressMaxlength, false);\n\n            // data-type=\"number\"\n            // SINCE VALIDATING type=\"number\" WITH NON NUMERIC CHARS WILL RETURN EMPTY STRING IN SOME BROWSERS ( EG: FIREFOX )\n            formEl.addEventListener('input', self.listenerCallbacks.dataTypeNumber, false);\n            \n        }\n        \n        if( fieldOptions.preventPasteFields && formEl.querySelectorAll( fieldOptions.preventPasteFields ).length ){\n            // INIT EVENT LISTENER FOR \"PASTE\" EVENT TO PREVENT IT ON SPECIFIED FIELDS\n            formEl.addEventListener('paste', self.listenerCallbacks.pastePrevent, false);\n        }\n\n        // INIT EVENTS LISTENER ( AS IN fieldOptions )\n        fieldOptions.validateOnEvents.split(' ').forEach(function( eventName ){\n            let useCapturing = (eventName === 'blur' ? true : false);\n            formEl.addEventListener(eventName, self.listenerCallbacks.validation, useCapturing);\n        });\n\n    }\n    \n    // HANDLE FORM SUBMIT\n    if( formOptions.handleSubmit ){\n        // INIT FORM SUBMIT ( DEFAULT AND AJAX )\n        formEl.addEventListener('submit', self.listenerCallbacks.submit);\n\n        if( formOptions.ajaxSubmit ){\n            if( formEl.getAttribute('enctype') ){\n\n                // FOR XMLHttpRequest API\n                formOptions.ajaxOptions.contentType = formEl.getAttribute('enctype');\n\n                // FOR fetch API\n                formOptions.ajaxOptions.headers['Content-Type'] = formEl.getAttribute('enctype');\n                \n            }\n\n            if( formEl.getAttribute('method') ){\n                formOptions.ajaxOptions.method = formEl.getAttribute('method').toUpperCase();\n            }\n\n            if( formEl.getAttribute('action') ){\n                formOptions.ajaxOptions.url = formEl.getAttribute('action');\n            }\n        }\n    }\n\n}\n","\nimport { checkFormEl, isNodeList, mergeObjects }   from './helper';\nimport { callbackFns }                             from './listenerCallbacks';\nimport { formStartup }                             from './formStartup';\n\nexport function constructorFn( formEl, optionsObj = {} ){\n\n    let self = this,\n        argsL = arguments.length,\n        checkFormElem = checkFormEl(formEl);\n\n    if( argsL === 0 || (argsL > 0 && !formEl) ){\n        throw new Error('First argument \"formEl\" is missing or falsy!');\n    }\n    if( isNodeList(formEl) ){\n        throw new Error('First argument \"formEl\" must be a single DOM node or a form CSS selector, not a NodeList!');\n    }\n    if( !checkFormElem.result ){\n        throw new Error('First argument \"formEl\" is not a DOM node nor a form CSS selector!');\n    }\n\n    self.formEl = checkFormElem.element;\n    self.formEl.formjs = self;\n    self.options = mergeObjects({}, Form.prototype.options, optionsObj);\n    self.listenerCallbacks = {\n        dataTypeNumber:     callbackFns.dataTypeNumber,\n        keypressMaxlength:  callbackFns.keypressMaxlength,\n        pastePrevent:       callbackFns.pastePrevent.bind(self),\n        submit:             callbackFns.submit.bind(self),\n        validation:         callbackFns.validation.bind(self)\n    };\n    Object.freeze(self.listenerCallbacks);\n\n    formStartup.call( self );\n    \n}\n","\nexport function destroy(){\n\n    const self = this,\n          formEl = self.formEl,\n          validationListenerNames = self.options.fieldOptions.validateOnEvents;\n\n    if( self.options.fieldOptions.strictHtmlValidation ){\n        formEl.removeEventListener('keypress', self.listenerCallbacks.keypressMaxlength, false);\n        formEl.removeEventListener('input', self.listenerCallbacks.dataTypeNumber, false);\n    }\n\n    if( self.options.fieldOptions.preventPasteFields ){\n        formEl.removeEventListener('paste', self.listenerCallbacks.pastePrevent, false);\n    }\n\n    if( self.options.formOptions.handleSubmit ){\n        formEl.removeEventListener('submit', self.listenerCallbacks.submit);\n    }\n\n    validationListenerNames.split(' ').forEach(function( eventName ){\n        let useCapturing = (eventName === 'blur' ? true : false);\n        formEl.removeEventListener(eventName, self.listenerCallbacks.validation, useCapturing);\n    });\n\n    delete self.formEl.formjs;\n    \n}\n","\nexport function getFormData(){\n\n    let self = this,\n        formEl = self.formEl,\n        formFieldsEl = formEl.querySelectorAll('input, select, textarea'),\n        excludeSelectors = ':not([type=\"reset\"]):not([type=\"submit\"]):not([type=\"button\"]):not([type=\"file\"]):not([data-exclude-data])',\n        filteredFields = Array.from(formFieldsEl).filter(elem => elem.matches(excludeSelectors) );\n    \n    return self.options.formOptions.getFormData.call( self, filteredFields );\n    \n}\n","\nimport { fieldsStringSelector, isFieldForChangeEvent } from './helper';\n\nexport const init = function(){\n\n    const self = this,\n          formEl = self.formEl,\n          formFields = formEl.querySelectorAll( fieldsStringSelector );\n\n    let currentFieldName = '',\n        currentFieldType = '';\n\n    Array.from( formFields ).forEach(function( fieldEl ){\n        const   name = fieldEl.name,\n                type = fieldEl.type;\n        \n        // AVOID REPEATING VALIDATION IF THE FIELD HAS THE SAME NAME OF THE PREVIOUS ONE\n        if( (name === currentFieldName && type === currentFieldType) ){ return true; }\n\n        const isCheckboxOrRadio = (fieldEl.type === 'checkbox' || fieldEl.type === 'radio'),\n              isFieldForChangeEventBoolean = isFieldForChangeEvent(fieldEl),\n              fieldChecked = formEl.querySelector('[name=\"' + fieldEl.name + '\"]:checked'),\n              isReqFrom = fieldEl.matches('[data-required-from]'),\n              reqMoreEl = (isReqFrom ? formEl.querySelector(fieldEl.getAttribute('data-required-from')) : null);\n\n        if( !isReqFrom ){\n            currentFieldName = name;\n            currentFieldType = type;\n        }\n\n        if( fieldChecked ){\n            fieldEl = fieldChecked;\n        }\n        \n        // VALIDATE FIELD ( BY TRIGGERING THE validation CALLBACK ) IF IT ALREADY HAS A VALUE\n        if(\n            (!isCheckboxOrRadio && fieldEl.value) || \n            (isCheckboxOrRadio && fieldChecked !== null) ||\n            (isReqFrom && reqMoreEl.checked)\n        ){\n\n            let fakeEventObj = { target: fieldEl, type: (isFieldForChangeEventBoolean ? 'change': '') };\n            self.listenerCallbacks.validation.call( self, fakeEventObj );\n\n        }\n    });\n\n    self.isInitialized = true;\n\n    return self;\n\n}\n","\nimport { addClass, isNodeList, removeClass } from './helper';\n\nexport function checkDirtyField( fields, cssClasses = this.options.fieldOptions.cssClasses.dirty ){\n\n    var fields = (isNodeList(fields) ? Array.from( fields ) : [fields]);\n    \n    fields.forEach(function(fieldEl){\n        if( fieldEl.type !== 'checkbox' && fieldEl.type !== 'radio' ){\n            let containerEl = fieldEl.closest('[data-formjs-question]') || fieldEl;\n\n            if( fieldEl.value ){\n                \n                addClass( containerEl, cssClasses );\n                \n            } else {\n                \n                removeClass( containerEl, cssClasses );\n                \n            }\n        }\n    });\n    \n}\n","\nimport { mergeObjects, toCamelCase } from './helper';\nimport { validationRulesAttributes } from './validationRules';\n\nexport function isValid( fieldEl, fieldOptions = {} ){\n\n    const self = this,\n          fieldType = ( fieldEl.matches('[data-subtype]') ? toCamelCase( fieldEl.getAttribute('data-subtype') ) : fieldEl.type ),\n          fieldValue = fieldEl.value,\n          isValidValue = fieldValue.trim().length > 0,\n          // ALPHABETICAL REVERSE ORDER\n          fieldAttributes = Array.from(fieldEl.attributes).sort(function(a,b){ return a.name < b.name });\n\n    let attrValidations = [],\n        attrValidationsResult = isValidValue,\n        obj = { result: isValidValue };\n\n    if( !obj.result ){\n        obj.errors = { empty: true };\n        return Promise.resolve(obj);\n    }\n\n    // COLLECT SPECIFIC VALIDATIONS FOR validationRulesAttributes\n    fieldAttributes.forEach(function(attr){\n        // FOR data-* ATTRIBUTES -> REMOVE \"data-\" AND TRANSFORM TO CAMELCASE\n        let attrName = toCamelCase( attr.name.replace('data-', '') ),\n            attrValue = attr.value,\n            isAttrValueWithFn = attrName === 'type' && typeof validationRulesAttributes[attrValue] === 'function',\n            isAttrNameWithFn = typeof validationRulesAttributes[attrName] === 'function';\n\n        if( isAttrValueWithFn || isAttrNameWithFn ){\n\n            let extraValObj = {\n                    attrName: (isAttrValueWithFn ? attrValue : attrName),\n                    attrValue: attrValue,\n                    fieldEl,\n                    fieldOptions\n                };\n\n            if( isAttrValueWithFn || attrName === 'requiredFrom' ){\n                // THESE VALIDATIONS MUST RUN BEFORE ALL OTHERS\n                attrValidations.unshift( extraValObj );\n            } else {\n                attrValidations.push( extraValObj );\n            }\n\n        }\n    });\n\n    // RUN SPECIFIC VALIDATIONS FOR validationRulesAttributes\n    attrValidations.forEach(function(item){\n        let extraVal = validationRulesAttributes[item.attrName]( item );\n        if( !extraVal.result ){\n            obj = mergeObjects({}, obj, extraVal);\n            attrValidationsResult = false;\n        }\n    });\n\n    return new Promise(function(resolve){\n\n        // RUN VALIDATIONS FOR validationRules\n        if( typeof self.validationRules[fieldType] === 'function' ){\n            resolve( self.validationRules[fieldType](fieldValue, fieldEl) );\n        } else {\n            resolve( obj );\n        }\n\n    }).then(data => {\n\n        obj = mergeObjects( {}, obj, data );\n        obj.result = obj.result && attrValidationsResult;\n        if( !obj.result ){\n            let fieldErrors = (typeof self.validationErrors[fieldType] === 'function' ? self.validationErrors[fieldType](fieldValue, fieldEl) : {});\n            if( typeof obj.errors === 'undefined' ){\n                obj.errors = {};\n            }\n            obj.errors.rule = true;\n            obj.errors = mergeObjects({}, obj.errors, fieldErrors);\n        }\n        return obj;\n\n    });\n\n}\n","\nimport { isDOMNode, mergeObjects, validateFieldObjDefault } from './helper';\nimport { checkDirtyField } from './checkDirtyField';\nimport { isValid } from './isValid';\n\nexport function isValidField( fieldElem, fieldOptionsObj = {} ){\n\n    const self = this,\n          fieldEl = (typeof fieldElem === 'string' ? self.formEl.querySelector(fieldElem) : fieldElem);\n\n    let obj = mergeObjects({}, validateFieldObjDefault);\n\n    if( !isDOMNode(fieldEl) ){ return Promise.resolve(obj); }\n\n    let options =           mergeObjects( {}, self.options.fieldOptions, fieldOptionsObj ),\n        isValidValue =      fieldEl.value.trim().length > 0,\n        isRequired =        fieldEl.required,\n        isReqFrom =         fieldEl.matches('[data-required-from]'),\n        isValidateIfFilled =fieldEl.matches('[data-validate-if-filled]');\n\n    checkDirtyField.call( self, fieldEl );\n\n    return new Promise(function(resolve){\n        if(\n            (!isRequired && !isValidateIfFilled && !isReqFrom) ||   // IT IS A NORMAL FORM FIELD\n            (isValidateIfFilled && !isValidValue) ||                // IT IS data-validate-if-filled AND EMPTY\n            (isReqFrom && !isRequired )                             // IT IS data-required-from AND NOT required\n        ){\n\n            obj.result = true;\n            resolve( obj );\n        \n        } else {\n\n            resolve( isValid.call(self, fieldEl, options) );\n            \n        }\n\n    }).then(obj => {\n\n        obj.fieldEl = fieldEl;\n        return obj;\n\n    });\n\n}\n","\nimport { executeCallback, mergeObjects } from './helper';\nimport { isValidField } from './isValidField';\n\nexport function validateField( fieldElem, fieldOptionsObj = {} ){\n\n    const self = this,\n          fieldEl = (typeof fieldElem === 'string' ? self.formEl.querySelector(fieldElem) : fieldElem),\n          fieldOptions = mergeObjects({}, self.options.fieldOptions, fieldOptionsObj);\n\n    return new Promise(function(resolve){\n\n        const prom = isValidField.call( self, fieldEl, fieldOptionsObj );\n        resolve( prom );\n\n    }).then(obj => {\n\n        if( obj.fieldEl ){\n            executeCallback.call( self, fieldOptions.onValidation, [obj], {fieldOptions: fieldOptionsObj} );\n        }\n        return obj;\n        \n    });\n    \n}\n","\nimport { fieldsStringSelector, mergeObjects, validateFormObjDefault } from './helper';\nimport { isValidField } from './isValidField';\n\nexport function isValidForm( fieldOptionsObj = {} ){\n\n    const self = this,\n          formEl = self.formEl,\n          obj = mergeObjects({}, validateFormObjDefault),\n          fieldOptions = mergeObjects( {}, fieldOptionsObj, {focusOnRelated: false} );\n\n    let currentFieldName = '',\n        currentFieldType = '';\n\n    const fieldsList = Array.from( formEl.querySelectorAll(fieldsStringSelector) ).filter(fieldEl => {\n        let name = fieldEl.name,\n            type = fieldEl.type;\n\n        if( name === currentFieldName && type === currentFieldType ){\n            return false;\n        }\n\n        if( !fieldEl.matches('[data-required-from]') ){\n            currentFieldName = name;\n            currentFieldType = type;\n        }\n\n        return true;\n    });\n\n    return Promise.all( fieldsList.map(function( fieldEl ){\n        \n        return isValidField.call( self, fieldEl, fieldOptions );\n\n    }) ).then(list => {\n\n        let areAllFieldsValid = list.filter(fieldObj => !fieldObj.result).length === 0;\n        obj.result = areAllFieldsValid;\n        obj.fields = list;\n\n        return obj;\n\n    });\n\n}\n","\nimport { executeCallback, mergeObjects } from './helper';\nimport { isValidForm } from './isValidForm';\n\nexport function validateForm( fieldOptionsObj = {} ){\n\n    const self = this,\n          fieldOptions = mergeObjects({}, self.options.fieldOptions, fieldOptionsObj);\n\n    return new Promise(function(resolve){\n\n        const prom = isValidForm.call( self, fieldOptionsObj );\n        resolve(prom);\n\n    }).then(obj => {\n\n        executeCallback.call( self, fieldOptions.onValidation, obj.fields, {fieldOptions: fieldOptionsObj} );\n        return obj;\n\n    });\n    \n}\n","\nimport { mergeObjects }         from './modules/helper';\nimport { options }              from './modules/options';\nimport { validationRules }      from './modules/validationRules';\nimport { validationErrors }     from './modules/validationErrors';\n\n// CONSTRUCTOR FUNCTION & PUBLIC METHODS\nimport { constructorFn }        from './modules/constructor';\nimport { destroy }              from './modules/destroy';\nimport { getFormData }          from './modules/getFormData';\nimport { init }                 from './modules/init';\nimport { validateField }        from './modules/validateField';\nimport { validateForm }         from './modules/validateForm';\n\nconst version = '3.1.0';\n\nclass Form {\n\n    constructor( formEl, optionsObj ){\n        constructorFn.call(this, formEl, optionsObj);\n    }\n\n    destroy(){\n        destroy.call(this);\n    }\n    \n    getFormData(){\n        return getFormData.call(this);\n    }\n\n    init(){\n        return init.call(this);\n    }\n\n    validateField( fieldEl, fieldOptions ){\n        return validateField.call(this, fieldEl, fieldOptions);\n    }\n\n    validateForm( fieldOptions ){\n        return validateForm.call(this, fieldOptions);\n    }\n    \n    static addValidationErrors( errorsObj ){\n        this.prototype.validationErrors = mergeObjects({}, this.prototype.validationErrors, errorsObj);\n    }\n\n    static addValidationRules( rulesObj ){\n        this.prototype.validationRules = mergeObjects({}, this.prototype.validationRules, rulesObj);\n    }\n    \n    static setOptions( optionsObj ){\n        this.prototype.options = mergeObjects({}, this.prototype.options, optionsObj);\n    }\n\n}\n\nForm.prototype.isInitialized = false;\nForm.prototype.options = options;\nForm.prototype.validationErrors = validationErrors;\nForm.prototype.validationRules = validationRules;\nForm.prototype.version = version;\n\nif( !window.Form ){ window.Form = Form; }\nif( !window.FormJS ) { window.FormJS = Form; }\n","\nexport const validationErrors = {\n\n    email: function ( string ) {\n        const obj = {};\n\n        if( string.indexOf('@') === -1 ){\n\n            // @ IS MISSING\n            obj.missingAtChar = true;\n\n        } else {\n\n            let splitAt_at = string.split('@');\n            if( splitAt_at[0].length === 0 ){\n\n                // USER NAME IS MISSING\n                obj.missingUserName = true;\n\n            }\n\n            if( splitAt_at[1].length === 0 ){\n\n                // IS EMPTY AFTER @\n                obj.missingDomain = true;\n                obj.missingExtensionDot = true;\n                obj.missingExtension = true;\n\n            } else if( splitAt_at[1].indexOf('.') === -1 ) {\n\n                // DOT IS MISSING\n                obj.missingExtensionDot = true;\n                obj.missingExtension = true;\n\n            } else {\n\n                // EXTENSION MISSING OR NOT LONG ENOUGH\n                let splitAt_dot = splitAt_at[1].split('.'),\n                    extLength = splitAt_dot[1].length;\n                if( extLength === 0 ) {\n                    obj.missingExtension = true;\n                } else if( extLength < 2 ){\n                    obj.minlengthExtension = true;\n                }\n\n            }\n        }\n\n        return obj;\n\n    }\n\n}"],"sourceRoot":""}