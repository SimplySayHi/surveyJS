{"version":3,"sources":["webpack://Form/webpack/universalModuleDefinition","webpack://Form/webpack/bootstrap","webpack://Form/./src/modules/helpers.js","webpack://Form/./src/modules/optionsUtils.js","webpack://Form/./src/modules/optionsAjax.js","webpack://Form/./src/modules/options.js","webpack://Form/./src/modules/validationRules.js","webpack://Form/./src/modules/ajaxCall.js","webpack://Form/./src/modules/submit.js","webpack://Form/./src/modules/listenerCallbacks.js","webpack://Form/./src/modules/formStartup.js","webpack://Form/./src/modules/constructor.js","webpack://Form/./src/modules/destroy.js","webpack://Form/./src/modules/getFormData.js","webpack://Form/./src/modules/init.js","webpack://Form/./src/modules/isValid.js","webpack://Form/./src/modules/isValidField.js","webpack://Form/./src/modules/isValidForm.js","webpack://Form/./src/modules/validateField.js","webpack://Form/./src/modules/validateForm.js","webpack://Form/./src/index.js","webpack://Form/./src/modules/validationErrors.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","fieldsStringSelector","addClass","element","cssClasses","split","forEach","className","classList","add","checkDirtyField","fields","options","fieldOptions","dirty","isNodeList","Array","from","fieldEl","type","containerEl","closest","removeClass","checkFormEl","formEl","isString","isFormSelector","isDOMNode","document","querySelector","tagName","toLowerCase","result","executeCallback","fn","data","self","optionsNew","mergeObjects","callbackFnList","push","isArray","promiseFn","getSplitChar","string","splitChar","indexOf","getUniqueFields","nodeList","currentFieldName","currentFieldType","filter","matches","node","Element","isPrototypeOf","isFieldForChangeEvent","NodeList","out","arguments","length","obj","toString","isObject","concat","slice","remove","runFunctionsSequence","functionsList","stopConditionFn","reduce","acc","then","res","dataNew","Promise","resolve","dataList","shift","serializeObject","constructor","keys","a","k","encodeURIComponent","join","toCamelCase","replace","all","letter","toUpperCase","validateFieldObjDefault","validateFormObjDefault","defaultCallbacksInOptions","beforeValidation","fieldObj","skipUIfeedback","pending","onValidation","fieldsArray","tempOptions","isReqFrom","reqMoreEl","getAttribute","checked","errorClasses","error","errorEmpty","errorRule","valid","extraErrorClass","isChecks","checkedElLength","querySelectorAll","errors","empty","errorClassToRemove","formOptions","getFormData","filteredFields","formData","isCheckbox","isRadio","isSelect","checkboxes","field","checkedRadio","selectedOpts","option","selected","ajaxOptions","cache","credentials","headers","method","redirect","timeout","url","location","href","focusOnRelated","handleFileUpload","handleValidation","maxFileSize","onPastePrevented","onValidationCheckAll","preventPasteFields","strictHtmlValidation","validateOnEvents","ajaxSubmit","beforeSend","handleSubmit","onSubmitComplete","onSubmitError","onSubmitSuccess","validationRulesAttributes","checkbox","dataChecksEl","checks","attrValue","JSON","parse","isMinOk","isMaxOk","minChecks","maxChecks","e","Error","equalTo","checkFromEl","exactLength","valueLength","minlength","maxlength","file","MIMEtype","accept","RegExp","filesList","files","exceedMaxFileSize","size","isAcceptedFileType","test","acceptedFileType","valueL","isMinlengthOk","isMaxlengthOk","stringLength","max","isDate","maxVal","reverse","min","minVal","pattern","fieldPattern","radio","fieldChecked","trim","requiredFrom","isValidValue","required","ajaxCall","formDataObj","timeoutTimer","btnEl","isMultipart","body","formDataMultipart","FormData","append","idx","stringify","Headers","controller","AbortController","signal","window","setTimeout","abort","fetch","response","ok","reject","fetchMethod","contentType","methodName","getFetchMethod","clearTimeout","disabled","submit","event","isAjaxForm","eventPreventDefault","enableBtn","preventDefault","validateForm","formValidation","beforeSendData","stopExecution","callbacksBeforeSend","callbackFns","dataTypeNumber","target","fieldValue","stopImmediatePropagation","valueReplaced","keypressMaxlength","maxLength","keyPressed","which","keyCode","pastePrevent","validation","eventName","isFieldForChangeEventBoolean","isReqMore","findReqMoreEl","findReqFromEl","id","focus","validateField","realtedFieldEqualTo","formStartup","noValidate","addEventListener","listenerCallbacks","useCapturing","constructorFn","optionsObj","argsL","checkFormElem","formjs","freeze","destroy","validationListenerNames","removeEventListener","formFieldsEl","elem","init","map","isCheckboxOrRadio","getFilledFields","fakeEventObj","isInitialized","isValid","fieldType","fieldAttributes","attributes","sort","b","attrValidations","attrValidationsResult","attr","attrName","isAttrValueWithFn","isAttrNameWithFn","extraValObj","unshift","item","extraVal","validationRules","fieldErrors","validationErrors","rule","isValidField","fieldElem","fieldOptionsObj","isRequired","isValidateIfFilled","rfsObject","dataObj","pop","isValidForm","fieldsList","list","areAllFieldsValid","runCallback","fieldOptionsNew","dataForm","Form","errorsObj","rulesObj","email","missingAtChar","splitAt_at","missingUserName","missingDomain","missingExtensionDot","missingExtension","extLength","minlengthExtension","date","number","version"],"mappings":"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","file":"formjs.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Form\"] = factory();\n\telse\n\t\troot[\"Form\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\nexport const\n\nfieldsStringSelector = 'input:not([type=\"reset\"]):not([type=\"submit\"]):not([type=\"button\"]):not([type=\"hidden\"]), select, textarea',\n\naddClass = function( element, cssClasses ){\n    cssClasses.split(' ').forEach(function(className){\n        element.classList.add( className );\n    });\n},\n\ncheckDirtyField = function( fields, cssClasses = this.options.fieldOptions.cssClasses.dirty ){\n\n    var fields = (isNodeList(fields) ? Array.from( fields ) : [fields]);\n    \n    fields.forEach(function(fieldEl){\n        if( fieldEl.type !== 'checkbox' && fieldEl.type !== 'radio' ){\n            let containerEl = fieldEl.closest('[data-formjs-question]') || fieldEl;\n\n            if( fieldEl.value ){\n                \n                addClass( containerEl, cssClasses );\n                \n            } else {\n                \n                removeClass( containerEl, cssClasses );\n                \n            }\n        }\n    });\n    \n},\n\ncheckFormEl = function( formEl ){\n    let isString = typeof formEl,\n        isValidNodeSelector = isString === 'string' && isDOMNode(document.querySelector(formEl)),\n        isFormSelector = isValidNodeSelector && document.querySelector(formEl).tagName.toLowerCase() === 'form',\n        obj = {\n            result: isDOMNode(formEl) || isFormSelector,\n            element: (isString === 'string' ? document.querySelector(formEl) : formEl)\n        };\n\n    return obj;\n},\n\nexecuteCallback = function( {fn = null, data = {}, options = {}} = {} ){\n    let self = this,\n        optionsNew = mergeObjects({}, self.options, options),\n        callbackFnList = [];\n\n    if( typeof fn === 'function' ){\n        callbackFnList.push( fn );\n    } else if( Array.isArray(fn) ) {\n        callbackFnList = fn;\n    }\n\n    callbackFnList.forEach(function(promiseFn){\n        promiseFn.call( self, data, optionsNew );\n    });\n},\n\ngetFilledFields = function( formEl ){\n    return getUniqueFields( formEl.querySelectorAll(fieldsStringSelector) )\n    .map(fieldEl => {\n\n        const name = fieldEl.name,\n              type = fieldEl.type,\n              isCheckboxOrRadio = (type === 'checkbox' || type === 'radio'),\n              fieldChecked = formEl.querySelector('[name=\"' + name + '\"]:checked'),\n              isReqFrom = fieldEl.matches('[data-required-from]'),\n              reqMoreEl = (isReqFrom ? formEl.querySelector(fieldEl.getAttribute('data-required-from')) : null);\n\n        return (\n            isCheckboxOrRadio ? (fieldChecked || null) :\n            (isReqFrom && reqMoreEl.checked) || (!isReqFrom && fieldEl.value) ? fieldEl : null\n        );\n\n    })\n    .filter(fieldEl => {\n        return  fieldEl !== null;\n    });\n},\n\ngetSplitChar = function( string ){\n    let splitChar = '.';\n\n    if( string.indexOf(splitChar) === -1 ){\n        if( string.indexOf('-') >= 0 ){\n            splitChar = '-';\n        } else if( string.indexOf('/') >= 0 ){\n            splitChar = '/';\n        }\n    }\n\n    return splitChar;\n},\n\ngetUniqueFields = function( nodeList ){\n\n    let currentFieldName = '',\n        currentFieldType = '';\n\n    return Array.from( nodeList ).filter(fieldEl => {\n        const name = fieldEl.name,\n              type = fieldEl.type;\n\n        if( name === currentFieldName && type === currentFieldType ){\n            return false;\n        }\n        \n        if( !fieldEl.matches('[data-required-from]') ){\n            currentFieldName = name;\n            currentFieldType = type;\n        }\n        return true;\n    });\n    \n},\n\nisDOMNode = function( node ){\n    return Element.prototype.isPrototypeOf( node );\n},\n\nisFieldForChangeEvent = function ( fieldEl ) {\n    return fieldEl.matches('select, [type=\"radio\"], [type=\"checkbox\"], [type=\"file\"]');\n},\n\nisNodeList = function( nodeList ){\n    return NodeList.prototype.isPrototypeOf( nodeList );\n},\n\nisPlainObject = function( object ){\n    return Object.prototype.toString.call( object ) === '[object Object]';\n},\n\nmergeObjects = function( out = {} ){\n    for(let i=1; i<arguments.length; i++){\n        let obj = arguments[i];\n\n        if(!obj){ continue; }\n\n        for(let key in obj){\n            let isArray = Object.prototype.toString.call(obj[key]) === \"[object Array]\";\n            let isObject = Object.prototype.toString.call(obj[key]) === \"[object Object]\";\n\n            // COPY ONLY ENUMERABLE PROPERTIES\n            if( obj.hasOwnProperty(key) ){\n                if( isArray ){\n\n                    if( typeof out[key] === 'undefined' ){\n                        out[key] = [];\n                    }\n                    out[key] = out[key].concat( obj[key].slice(0) );\n\n                } else if( isObject ){\n\n                    out[key] = mergeObjects(out[key], obj[key]);\n\n                } else {\n\n                    // * STRING | NUMBER | BOOLEAN | FUNCTION\n                    if( Array.isArray(out[key]) ){\n                        // IF THIS IS ONE OF ABOVE (*) AND THE DESTINATION OBJECT IS AN ARRAY\n                        out[key].push(obj[key]);\n                    } else {\n                        out[key] = obj[key];\n                    }\n\n                }\n            }\n        }\n    }\n\n    return out;\n},\n\nremoveClass = function( element, cssClasses ){\n    cssClasses.split(' ').forEach(function(className){\n        element.classList.remove( className );\n    });\n},\n\nrunFunctionsSequence = function( { functionsList = [], data = {}, stopConditionFn = function(){return false} } = {} ){\n    const self = this;\n\n    return functionsList.reduce(function(acc, promiseFn){\n        return acc.then(function (res) {\n            let dataNew = mergeObjects({}, res[res.length - 1]);\n            if( stopConditionFn(dataNew) ){\n                return Promise.resolve(res);\n            }\n            return new Promise(resolve => { resolve(promiseFn.call(self, dataNew)) }).then(function (result = dataNew) {\n                res.push(result);\n                return res;\n            });\n        });\n    }, Promise.resolve([data])).then(dataList => {\n        if( dataList.length > 1 ){ dataList.shift(); }\n        return dataList;\n    });\n},\n\nserializeObject = function( obj ){\n    var objToString = (\n            (obj && typeof obj === 'object' && obj.constructor === Object) ? \n            Object.keys(obj)\n                .reduce(function(a,k){\n                    a.push(k+'='+encodeURIComponent(obj[k]));\n                    return a\n                },[]).join('&') : \n            obj\n    );\n    return objToString;\n},\n\ntoCamelCase = function( string ){\n    return string.replace(/-([a-z])/ig, function(all, letter){ return letter.toUpperCase(); });\n},\n\nvalidateFieldObjDefault = { result: false, fieldEl: null },\n\nvalidateFormObjDefault = { result: true, fields: [] }\n","\nimport { addClass, checkDirtyField, mergeObjects, removeClass } from './helpers';\n\nexport const defaultCallbacksInOptions = {\n    fieldOptions: {\n\n        beforeValidation: function beforeValidationDefault ( fieldObj ) {\n\n            checkDirtyField.call( this, fieldObj.fieldEl );\n            if( !this.options.fieldOptions.skipUIfeedback ){\n                addClass( fieldObj.fieldEl.closest('[data-formjs-question]'), this.options.fieldOptions.cssClasses.pending );\n            }\n\n        },\n\n        onValidation: function onValidationDefault ( fieldsArray, tempOptions = {} ) {\n\n            let self = this,\n                options = mergeObjects( {}, self.options.fieldOptions, tempOptions.fieldOptions );\n\n            fieldsArray.forEach(function( obj ){\n                let fieldEl = obj.fieldEl,\n                    containerEl = fieldEl.closest('[data-formjs-question]'),\n                    isReqFrom = fieldEl.matches('[data-required-from]'),\n                    reqMoreEl = self.formEl.querySelector( fieldEl.getAttribute('data-required-from') );\n\n                if( containerEl !== null ){\n                    removeClass( containerEl, options.cssClasses.pending );\n                }\n\n                if( containerEl !== null && !options.skipUIfeedback ){\n\n                    if( obj.result ){\n\n                        if( !isReqFrom || (isReqFrom && reqMoreEl.checked) ){\n                            // IF FIELD IS VALID\n                            let errorClasses = options.cssClasses.error + ' ' + options.cssClasses.errorEmpty + ' ' + options.cssClasses.errorRule;\n                            removeClass( containerEl, errorClasses );\n                            addClass( containerEl, options.cssClasses.valid );\n                        }\n\n                    } else {\n\n                        // IF FIELD IS NOT VALID\n                        let extraErrorClass = options.cssClasses.errorRule;\n\n                        // HANDLE CASE OF FIELD data-checks\n                        let isChecks = fieldEl.matches('[data-checks]'),\n                            checkedElLength = (isChecks ? containerEl.querySelectorAll('[name=\"' + fieldEl.name + '\"]:checked').length : 0);\n\n                        if( (!isChecks && (obj.errors && obj.errors.empty)) || (isChecks && checkedElLength === 0) ){\n                            extraErrorClass = options.cssClasses.errorEmpty;\n                        }\n\n                        let errorClasses = options.cssClasses.error + ' ' + extraErrorClass,\n                            errorClassToRemove = options.cssClasses.errorEmpty + ' ' + options.cssClasses.errorRule;\n                        removeClass( containerEl, options.cssClasses.valid + ' ' + errorClassToRemove );\n                        addClass( containerEl, errorClasses );\n\n                    }\n                }\n            });\n            \n        }\n\n    },\n    formOptions: {\n\n        getFormData: function getFormDataDefault ( filteredFields ) {\n\n            let formData = {},\n                self = this,\n                formEl = self.formEl;\n\n            filteredFields.forEach(function( fieldEl ){\n                let isCheckbox = fieldEl.type === 'checkbox',\n                    isRadio = fieldEl.type === 'radio',\n                    isSelect = fieldEl.matches('select'),\n                    name = fieldEl.name,\n                    value = fieldEl.value;\n                                \n                if( isCheckbox ) {\n                    \n                    value = fieldEl.checked;\n                    let checkboxes = Array.from( formEl.querySelectorAll('[name=\"'+ name +'\"]') );\n                    if( checkboxes.length > 1 ){\n\n                        value = [];\n                        let checkedElems = checkboxes.filter(field => field.checked);\n                        checkedElems.forEach(fieldEl => {\n                            value.push( fieldEl.value );\n                        });\n\n                    }\n                        \n                } else if( isRadio ){\n                    \n                    let checkedRadio = formEl.querySelector('[name=\"'+ name +'\"]:checked');\n                    value = (checkedRadio === null ? null : checkedRadio.value);\n                    \n                } else if( isSelect ){\n\n                    let selectedOpts = Array.from( fieldEl.options ).filter(option => option.selected);\n                    if( selectedOpts.length > 1 ){\n\n                        value = [];\n                        selectedOpts.forEach(fieldEl => {\n                            value.push( fieldEl.value );\n                        });\n\n                    }\n                }\n\n                formData[ name ] = value;\n            });\n\n            return formData;\n\n        }\n\n    }\n}\n","\nexport let ajaxOptions = {\n    cache:              'no-store',\n    credentials:        'same-origin',\n    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept':       'application/json'\n    },\n    method:             'POST',\n    mode:               'same-origin',\n    redirect:           'follow',\n    timeout:            0,\n    url:                location.href\n}\n","\nimport { defaultCallbacksInOptions } from './optionsUtils';\nimport { ajaxOptions } from './optionsAjax';\n//import { ajaxOptions } from './optionsAjaxXhr';\n\nexport const options = {\n\n    fieldOptions: {\n        beforeValidation:       [defaultCallbacksInOptions.fieldOptions.beforeValidation],\n        cssClasses: {\n            dirty:              'is-dirty',\n            error:              'has-error',\n            errorEmpty:         'has-error-empty',\n            errorRule:          'has-error-rule',\n            pending:            'is-pending',\n            valid:              'is-valid'\n        },\n        focusOnRelated:         true,\n        handleFileUpload:       true,\n        handleValidation:       true,\n        maxFileSize:            10,\n        onPastePrevented:       [],\n        onValidation:           [defaultCallbacksInOptions.fieldOptions.onValidation],\n        onValidationCheckAll:   true,\n        preventPasteFields:     '[type=\"password\"], [data-equal-to]',\n        skipUIfeedback:         false,\n        strictHtmlValidation:   true,\n        validateOnEvents:       'input change'\n    },\n\n    formOptions: {\n        ajaxOptions:            ajaxOptions,\n        ajaxSubmit:             true,\n        beforeSend:             [],\n        getFormData:            defaultCallbacksInOptions.formOptions.getFormData,\n        handleSubmit:           true,\n        onSubmitComplete:       [],\n        onSubmitError:          [],\n        onSubmitSuccess:        []\n    }\n    \n}\n","\nimport { getSplitChar } from './helpers';\n\nexport const validationRules = {\n            \n    date: function( string ){\n        // DATE AS ISO 8601 DATE FORMAT     YYYY MM DD | YYYY/MM/DD | YYYY.MM.DD | YYYY-MM-DD\n\n        let date = /^(((19|[2-9]\\d)\\d{2})[ \\/\\-.](0[13578]|1[02])[ \\/\\-.](0[1-9]|[12]\\d|3[01]))|(((19|[2-9]\\d)\\d{2})[ \\/\\-.](0[13456789]|1[012])[ \\/\\-.](0[1-9]|[12]\\d|30))|(((19|[2-9]\\d)\\d{2})[ \\/\\-.]02[ \\/\\-.](0[1-9]|1\\d|2[0-8]))|(((1[6-9]|[2-9]\\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))[ \\/\\-.]02[ \\/\\-.]29)$/g.test( string ),\n            obj = {\n                result: date\n            };\n\n        return obj;\n    },\n    \n    email: function( string ){\n        // FROM https://emailregex.com\n        // AS FOR RFC 5322 Official Standard EMAIL MUST BE AT LEAST:\n        // a@a.aa\n        let obj = {\n            result: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test( string )\n        };\n\n        return obj;\n    },\n    \n    number: function( string ){\n        // ALL NUMBERS ( INTEGERS AND FLOATING )\n        // VALID NUMBERS: 123 | 123.456 | .123\n        let obj = {\n            result: /[+-]?([0-9]*[.])?[0-9]+/.test( string )\n        };\n\n        return obj;\n    }\n    \n}\n\nexport const validationRulesAttributes = {\n\n    checkbox: function( data ){\n        let formEl = data.fieldEl.closest('form'),\n            dataChecksEl = formEl.querySelector('[name=\"' + data.fieldEl.name + '\"][data-checks]'),\n            obj = { result: data.fieldEl.checked };\n\n        if( dataChecksEl !== null ){\n            obj = this.checks({ attrValue: dataChecksEl.getAttribute('data-checks'), fieldEl: dataChecksEl});\n        }\n\n        return obj;\n    },\n\n    checks: function( data ){\n        try {\n            let attrValue = JSON.parse(data.attrValue),\n                fieldEl = data.fieldEl,\n                formEl = fieldEl.closest('form'),\n                checkedElLength = formEl.querySelectorAll('[name=\"' + fieldEl.name + '\"]:checked').length,\n                isMinOk = checkedElLength >= attrValue[0],\n                isMaxOk = checkedElLength <= attrValue[1],\n                obj = {\n                    result: isMinOk && isMaxOk\n                };\n\n            if( !obj.result ){\n\n                obj.errors = { checks: true };\n                if( !isMinOk ){ obj.errors.minChecks = true; }\n                if( !isMaxOk ){ obj.errors.maxChecks = true; }\n\n            }\n\n            return obj;\n        } catch(e){\n            throw new Error('\"data-checks\" attribute is not a valid array!');\n        }\n    },\n\n    equalTo: function( data ){\n        let fieldEl = data.fieldEl,\n            formEl = fieldEl.closest('form'),\n            checkFromEl = formEl.querySelector( '[name=\"' + fieldEl.getAttribute('data-equal-to') + '\"]' ),\n            obj = {\n                result: fieldEl.value === checkFromEl.value\n            };\n\n        if( !obj.result ){\n            \n            obj.errors = { equalTo: true };\n        }\n\n        return obj;\n    },\n    \n    exactLength: function( data ){\n        let valueLength = data.fieldEl.value.length,\n            exactLength = (data.attrValue * 1),\n            obj = {\n                result: valueLength === exactLength\n            };\n\n        if( !obj.result ){\n\n            obj.errors = { exactLength: true };\n            if( valueLength < exactLength ){ obj.errors.minlength = true; }\n            else { obj.errors.maxlength = true; }\n\n        }\n\n        return obj;\n    },\n\n    file: function( data ){\n        let fieldEl = data.fieldEl,\n            maxFileSize = (fieldEl.getAttribute('data-max-file-size') || data.fieldOptions.maxFileSize) * 1,\n            MIMEtype = (fieldEl.accept ? new RegExp(fieldEl.accept.replace( '*', '[^\\\\/,]+' )) : null),\n            filesList = Array.from(fieldEl.files),\n            obj = { result: true };\n\n        filesList.forEach(function( file ){\n            let exceedMaxFileSize = maxFileSize > 0 && (file.size/1024/1024) > maxFileSize,\n                isAcceptedFileType = (MIMEtype !== null ? MIMEtype.test(file.type) : true);\n\n            if( exceedMaxFileSize || !isAcceptedFileType ){\n                obj.result = false;\n                if( typeof obj.errors === 'undefined' ){\n                    obj.errors = {};\n                }\n                obj.errors.file = true;\n                if( exceedMaxFileSize ){ obj.errors.maxFileSize = true; }\n                if( !isAcceptedFileType ){ obj.errors.acceptedFileType = true; }\n\n            }\n        });\n\n        return obj;\n    },\n\n    length: function( data ){\n        try {\n            let valueL = data.fieldEl.value.length,\n                attrValue = JSON.parse(data.attrValue),\n                isMinlengthOk = valueL >= attrValue[0],\n                isMaxlengthOk = valueL <= attrValue[1],\n                obj = { result: isMinlengthOk && isMaxlengthOk };\n\n            if( !obj.result ){\n\n                obj.errors = { stringLength: true };\n                if( !isMinlengthOk ){ obj.errors.minlength = true; }\n                if( !isMaxlengthOk ){ obj.errors.maxlength = true; }\n\n            }\n\n            return obj;\n        } catch(e){\n            throw new Error('\"data-length\" attribute is not a valid array!');\n        }\n    },\n    \n    max: function( data ){\n        let fieldEl = data.fieldEl,\n            isDate = (fieldEl.matches('[type=\"date\"]') || fieldEl.matches('[data-subtype=\"date\"]') || fieldEl.matches('[data-subtype=\"dateDDMMYYYY\"]')),\n            value = data.fieldEl.value,\n            maxVal = data.attrValue;\n        \n        if( isDate ){\n\n            let splitChar = getSplitChar( value );\n\n            if( value.indexOf(splitChar) === 2 ){\n                // DD MM YYYY\n                value = value.split( splitChar ).reverse();\n            } else {\n                // YYYY MM DD\n                value = value.split( splitChar );\n            }\n\n            value = value.join('');\n            maxVal = maxVal.split('-').join('');\n\n        }\n\n        value = value * 1;\n        maxVal = maxVal * 1;\n\n        let obj = {\n                result: value <= maxVal\n            };\n\n        if( !obj.result ){\n            \n            obj.errors = { max: true };\n        }\n        \n        return obj;\n    },\n    \n    maxlength: function( data ){\n        const obj = {\n            result: data.fieldEl.value.length <= (data.attrValue * 1)\n        };\n\n        if( !obj.result ){\n\n            obj.errors = { maxlength: true };\n        }\n\n        return obj;\n    },\n    \n    min: function( data ){\n        let fieldEl = data.fieldEl,\n            isDate = (fieldEl.matches('[type=\"date\"]') || fieldEl.matches('[data-subtype=\"date\"]') || fieldEl.matches('[data-subtype=\"dateDDMMYYYY\"]')),\n            value = data.fieldEl.value,\n            minVal = data.attrValue;\n        \n        if( isDate ){\n\n            let splitChar = getSplitChar( value );\n\n            if( value.indexOf(splitChar) === 2 ){\n                // DD MM YYYY\n                value = value.split( splitChar ).reverse();\n            } else {\n                // YYYY MM DD\n                value = value.split( splitChar );\n            }\n\n            value = value.join('');\n            minVal = minVal.split('-').join('');\n\n        }\n\n        value = value * 1;\n        minVal = minVal * 1;\n\n        let obj = {\n                result: value >= minVal\n            };\n\n        if( !obj.result ){\n            \n            obj.errors = { min: true };\n        }\n        \n        return obj;\n    },\n\n    minlength: function( data ){\n        const obj = {\n            result: data.fieldEl.value.length >= (data.attrValue * 1)\n        };\n\n        if( !obj.result ){\n\n            obj.errors = { minlength: true };\n        }\n\n        return obj;\n    },\n\n    pattern: function( data ){\n        let fieldEl = data.fieldEl,\n            fieldPattern = fieldEl.pattern,\n            fieldRegex = new RegExp( fieldPattern ),\n            obj = {\n                result: fieldRegex.test( fieldEl.value )\n            };\n\n        if( !obj.result ){\n\n            obj.errors = { pattern: true };\n        }\n\n        return obj;\n    },\n\n    radio: function( data ){\n        let fieldEl = data.fieldEl,\n            fieldChecked = fieldEl.closest('form').querySelector( '[name=\"'+ fieldEl.name +'\"]:checked' ),\n            isValid = fieldChecked !== null && fieldChecked.value.trim().length > 0,\n            obj = { result: isValid };\n\n        return obj;\n    },\n\n    requiredFrom: function( data ){\n        let fieldEl = data.fieldEl,\n            formEl = fieldEl.closest('form'),\n            isValidValue = fieldEl.value.trim().length > 0,\n            reqMoreEl = formEl.querySelector( fieldEl.getAttribute('data-required-from') ),\n            checkedEl = formEl.querySelector( '[name=\"'+ reqMoreEl.name +'\"]:checked' ),\n            obj = { result: checkedEl !== null };\n\n        if( reqMoreEl.checked && reqMoreEl.required ){\n            obj.result = isValidValue;\n        }\n\n        if( !obj.result ){\n            obj.errors = { requiredFrom: true };\n        }\n        \n        return obj;\n    }\n    \n}\n","\nimport { executeCallback, mergeObjects, serializeObject } from './helpers';\n\n// AJAX CALL USING fetch API\nexport function ajaxCall( formDataObj ){\n\n    let self = this,\n        formEl = self.formEl,\n        fieldOptions = self.options.fieldOptions,\n        formOptions = self.options.formOptions,\n        btnEl = formEl.querySelector('[type=\"submit\"]'),\n        timeoutTimer,\n        ajaxOptions = mergeObjects( {}, formOptions.ajaxOptions ),\n        isMultipart = ajaxOptions.headers['Content-Type'] === 'multipart/form-data';\n\n    ajaxOptions.body = formDataObj;\n    \n    // POST A FormData OBJECT ( multipart )\n    if( isMultipart && fieldOptions.handleFileUpload ){\n        let formDataMultipart = new FormData();\n        \n        for(let key in ajaxOptions.body){\n            formDataMultipart.append( key, ajaxOptions.body[key] );\n        }\n        \n        Array.from( formEl.querySelectorAll('[type=\"file\"]') ).forEach(function( field ){\n            Array.from(field.files).forEach(function( file, idx ){\n                let name = field.name+'['+ idx +']';\n                formDataMultipart.append( name, file, file.name );\n            });\n        });\n        \n        ajaxOptions.body = formDataMultipart;\n    }\n\n    if( ajaxOptions.method === 'GET' ){\n\n        // FETCH WITH \"GET\" METHOD CAN'T HAVE \"body\". SO IT IS APPENDED TO THE URL\n        ajaxOptions.url += ( /\\?/.test(ajaxOptions.url) ? '&' : '?' ) + serializeObject( ajaxOptions.body );\n        delete ajaxOptions.body;\n\n    } else {\n\n        if( ajaxOptions.headers['Content-Type'].indexOf('application/x-www-form-urlencoded') > -1 ){\n            // POST A NORMAL FORM\n            ajaxOptions.body = serializeObject( ajaxOptions.body );\n        } else if( !isMultipart ){\n            // POST A JSON STRING\n            ajaxOptions.body = JSON.stringify(ajaxOptions.body);\n        }\n\n    }\n\n    ajaxOptions.headers = new Headers( ajaxOptions.headers );\n\n    if ( ajaxOptions.timeout > 0 ) {\n        const controller = new AbortController();\n        const signal = controller.signal;\n\n        ajaxOptions.signal = signal;\n\n        timeoutTimer = window.setTimeout(function() {\n            controller.abort();\n        }, ajaxOptions.timeout);\n    }\n\n    fetch(ajaxOptions.url, ajaxOptions)\n        .then(function( response ){\n\n            if( !response.ok ){\n                return Promise.reject(response);\n            }\n\n            let getFetchMethod = function( response ){\n                let contentType = response.headers.get('Content-Type'),\n                    methodName = 'blob';\n\n                if( contentType.indexOf('application/json') > -1 ){\n                    methodName = 'json';\n                } else if( contentType.indexOf('text/') > -1 ){\n                    methodName = 'text';\n                }\n                \n                return methodName;\n            };\n            let fetchMethod = getFetchMethod( response );\n\n            return response[fetchMethod]();\n\n        })\n        .then(function( data ){\n            executeCallback.call( self, {fn: formOptions.onSubmitSuccess, data} );\n        })\n        .catch(function( error ){\n            executeCallback.call( self, {fn: formOptions.onSubmitError, data: error} );\n        })\n        .finally(function(){\n\n            if( timeoutTimer ){\n                window.clearTimeout( timeoutTimer );\n            }\n            btnEl.disabled = false;\n            executeCallback.call( self, {fn: formOptions.onSubmitComplete} );\n\n        });\n    \n}\n","\nimport { runFunctionsSequence, validateFormObjDefault } from './helpers';\nimport { ajaxCall } from './ajaxCall';\n//import { ajaxCall } from './ajaxCallXhr';\n\nexport function submit( event ){\n\n    const self = this,\n          options = self.options,\n          isAjaxForm = options.formOptions.ajaxSubmit,\n          formEl = self.formEl,\n          btnEl = formEl.querySelector('[type=\"submit\"]'),\n          eventPreventDefault = ( enableBtn = true ) => {\n              if( btnEl && enableBtn ){ btnEl.disabled = false; }\n              if( event ){ event.preventDefault(); }\n          };\n\n    if( isAjaxForm ){\n        eventPreventDefault(false);\n    }\n\n    if( btnEl ){\n        if( btnEl.disabled ){\n            eventPreventDefault(false);\n            return false;\n        }\n        btnEl.disabled = true;\n    }\n    \n    const handleValidation = options.fieldOptions.handleValidation,\n          formValidationPromise = (handleValidation ? self.validateForm() : Promise.resolve(validateFormObjDefault));\n\n    formValidationPromise.then(formValidation => {\n\n        let beforeSendData = { stopExecution: false, formData: {} };\n\n        if( !formValidation.result ){\n            eventPreventDefault();\n            beforeSendData.stopExecution = true;\n            return [beforeSendData];\n        }\n        \n        let formDataObj = (isAjaxForm ? self.getFormData() : null),\n            callbacksBeforeSend = options.formOptions.beforeSend;\n\n        if( formDataObj ){\n            beforeSendData.formData = formDataObj;\n        }\n\n        const rfsObject = {\n            functionsList: callbacksBeforeSend,\n            data: beforeSendData,\n            stopConditionFn: function(data){ return data.stopExecution; }\n        };\n        return runFunctionsSequence.call(self, rfsObject);\n\n    }).then(dataList => {\n\n        if( dataList.filter(data => data.stopExecution).length > 0 ){\n            eventPreventDefault();\n            return false;\n        }\n        \n        if( isAjaxForm ){\n            const formData = dataList[dataList.length - 1].formData;\n            ajaxCall.call(self, formData);\n        }\n\n    });\n    \n}\n","\nimport { executeCallback, fieldsStringSelector, isFieldForChangeEvent } from './helpers';\nimport { submit } from './submit';\n\nexport const callbackFns = {\n\n    dataTypeNumber: function( event ){\n\n        const fieldEl = event.target;\n        \n        if( fieldEl.matches('[data-type=\"number\"]') ){\n            let fieldValue = fieldEl.value,\n                hasInvalidChars = /[^\\d.,+\\-]/.test(fieldValue);\n            \n            if( hasInvalidChars ){\n                event.stopImmediatePropagation();\n                let valueReplaced = fieldValue.replace(/[^\\d.,+\\-]/g, '');\n                fieldEl.value = valueReplaced;\n            }\n        }\n\n    },\n\n    keypressMaxlength: function( event ){\n\n        const fieldEl = event.target;\n        \n        if( fieldEl.matches( '[maxlength]' ) ){\n            const maxLength = fieldEl.maxLength * 1,\n                keyPressed = event.which || event.keyCode,\n                allowedKeys = [8, 37, 38, 39, 46];\n\n            if( fieldEl.value.length >= maxLength && allowedKeys.indexOf(keyPressed) === -1 ){\n                return false;\n            }\n        }\n\n    },\n\n    pastePrevent: function( event ){\n\n        const self = this,\n              fieldEl = event.target;\n        let fieldOptions = self.options.fieldOptions;\n\n        if( fieldEl.matches( fieldOptions.preventPasteFields ) ){     \n            event.preventDefault();\n            executeCallback.call( self, {fn: fieldOptions.onPastePrevented, data: fieldEl} );\n        }\n\n    },\n\n    submit: function( event ){\n        submit.call( this, event );\n    },\n\n    validation: function( event ){\n\n        const self = this,\n              eventName = event.type,\n              fieldEl = event.target;\n\n        if( fieldEl.matches( fieldsStringSelector ) ){\n            const isFieldForChangeEventBoolean = isFieldForChangeEvent(fieldEl),\n                isRadio = fieldEl.type === 'radio',\n                isReqFrom = fieldEl.matches('[data-required-from]'),\n                isReqMore = fieldEl.matches('[data-require-more]'),\n                isValidValue = fieldEl.value.trim().length > 0;\n\n            // HANDLE data-require-more FIELDS\n            if( isRadio && eventName === 'change' ){\n                let findReqMoreEl = (isReqMore ? fieldEl : self.formEl.querySelector('[name=\"'+ fieldEl.name +'\"][data-require-more]')),\n                    findReqFromEl = (findReqMoreEl !== null ? self.formEl.querySelector('[data-required-from=\"#'+ findReqMoreEl.id +'\"]') : null);\n\n                if( isReqMore ){\n\n                    if( findReqFromEl !== null ){\n                        findReqFromEl.required = fieldEl.required;\n                        if( self.options.fieldOptions.focusOnRelated ){\n                            findReqFromEl.focus();\n                        }\n                    }\n\n                } else if( findReqMoreEl !== null ){\n\n                    if( findReqFromEl !== null ){\n                        findReqFromEl.required = findReqMoreEl.required && findReqMoreEl.checked;\n                        findReqFromEl.value = '';\n                    }\n\n                }\n            }\n\n            // HANDLE data-required-from FIELDS\n            if( isReqFrom ){\n                if( isValidValue ){\n\n                    let reqMoreEl = self.formEl.querySelector( fieldEl.getAttribute('data-required-from') );\n                    reqMoreEl.checked = true;\n                    fieldEl.required = reqMoreEl.required;\n                }\n            }\n            \n            if(\n                (isFieldForChangeEventBoolean && eventName === 'change') ||\n                (!isFieldForChangeEventBoolean && eventName !== 'change')\n            ){\n                \n                return self.validateField( fieldEl ).then(obj => {\n                    const type = obj.fieldEl.type,\n                          realtedFieldEqualTo = obj.fieldEl.closest('form').querySelector('[data-equal-to=\"'+ obj.fieldEl.name +'\"]');\n\n                    if(\n                        // FIELD IS ( required OR data-validate-if-filled ) AND RELATED FIELD data-equal-to HAS A VALUE\n                        (obj.fieldEl.required || obj.fieldEl.matches('[data-validate-if-filled]')) && \n                        !(type === 'checkbox' || type === 'radio') && \n                        realtedFieldEqualTo && realtedFieldEqualTo.value.trim() !== ''\n                    ){\n                        return self.validateField( realtedFieldEqualTo );\n                    } else {\n                        return obj;\n                    }\n                });\n\n            }\n        }\n        \n    }\n\n}\n","\nexport function formStartup(){\n\n    const self = this,\n          formEl = self.formEl;\n\n    formEl.noValidate = true;\n\n    let fieldOptions = self.options.fieldOptions,\n        formOptions = self.options.formOptions;\n\n    // HANDLE FIELD VALIDATION\n    if( fieldOptions.handleValidation ){\n        \n        // VALIDATION WITH ATTRIBUTES LIKE HTML ONES ( ALSO FOR BUG FIXING, EG: maxlength IN ANDROID )\n        if( fieldOptions.strictHtmlValidation ){\n            \n            // maxlength\n            // MAXLENGTH IS BUGGY IN ANDROID BROWSERS\n            formEl.addEventListener('keypress', self.listenerCallbacks.keypressMaxlength, false);\n\n            // data-type=\"number\"\n            // SINCE VALIDATING type=\"number\" WITH NON NUMERIC CHARS WILL RETURN EMPTY STRING IN SOME BROWSERS ( EG: FIREFOX )\n            formEl.addEventListener('input', self.listenerCallbacks.dataTypeNumber, false);\n            \n        }\n        \n        if( fieldOptions.preventPasteFields && formEl.querySelectorAll( fieldOptions.preventPasteFields ).length ){\n            // INIT EVENT LISTENER FOR \"PASTE\" EVENT TO PREVENT IT ON SPECIFIED FIELDS\n            formEl.addEventListener('paste', self.listenerCallbacks.pastePrevent, false);\n        }\n\n        // INIT EVENTS LISTENER ( AS IN fieldOptions )\n        fieldOptions.validateOnEvents.split(' ').forEach(function( eventName ){\n            let useCapturing = (eventName === 'blur' ? true : false);\n            formEl.addEventListener(eventName, self.listenerCallbacks.validation, useCapturing);\n        });\n\n    }\n    \n    // HANDLE FORM SUBMIT\n    if( formOptions.handleSubmit ){\n        // INIT FORM SUBMIT ( DEFAULT AND AJAX )\n        formEl.addEventListener('submit', self.listenerCallbacks.submit);\n\n        if( formOptions.ajaxSubmit ){\n            if( formEl.getAttribute('enctype') ){\n\n                // FOR XMLHttpRequest API\n                formOptions.ajaxOptions.contentType = formEl.getAttribute('enctype');\n\n                // FOR fetch API\n                formOptions.ajaxOptions.headers['Content-Type'] = formEl.getAttribute('enctype');\n                \n            }\n\n            if( formEl.getAttribute('method') ){\n                formOptions.ajaxOptions.method = formEl.getAttribute('method').toUpperCase();\n            }\n\n            if( formEl.getAttribute('action') ){\n                formOptions.ajaxOptions.url = formEl.getAttribute('action');\n            }\n        }\n    }\n\n}\n","\nimport { checkFormEl, isNodeList, mergeObjects }   from './helpers';\nimport { callbackFns }                             from './listenerCallbacks';\nimport { formStartup }                             from './formStartup';\n\nexport function constructorFn( formEl, optionsObj = {} ){\n\n    let self = this,\n        argsL = arguments.length,\n        checkFormElem = checkFormEl(formEl);\n\n    if( argsL === 0 || (argsL > 0 && !formEl) ){\n        throw new Error('First argument \"formEl\" is missing or falsy!');\n    }\n    if( isNodeList(formEl) ){\n        throw new Error('First argument \"formEl\" must be a single DOM node or a form CSS selector, not a NodeList!');\n    }\n    if( !checkFormElem.result ){\n        throw new Error('First argument \"formEl\" is not a DOM node nor a form CSS selector!');\n    }\n\n    self.formEl = checkFormElem.element;\n    self.formEl.formjs = self;\n    self.options = mergeObjects({}, self.constructor.prototype.options, optionsObj);\n    self.listenerCallbacks = {\n        dataTypeNumber:     callbackFns.dataTypeNumber,\n        keypressMaxlength:  callbackFns.keypressMaxlength,\n        pastePrevent:       callbackFns.pastePrevent.bind(self),\n        submit:             callbackFns.submit.bind(self),\n        validation:         callbackFns.validation.bind(self)\n    };\n    Object.freeze(self.listenerCallbacks);\n\n    formStartup.call( self );\n    \n}\n","\nexport function destroy(){\n\n    const self = this,\n          formEl = self.formEl,\n          validationListenerNames = self.options.fieldOptions.validateOnEvents;\n\n    if( self.options.fieldOptions.strictHtmlValidation ){\n        formEl.removeEventListener('keypress', self.listenerCallbacks.keypressMaxlength, false);\n        formEl.removeEventListener('input', self.listenerCallbacks.dataTypeNumber, false);\n    }\n\n    if( self.options.fieldOptions.preventPasteFields ){\n        formEl.removeEventListener('paste', self.listenerCallbacks.pastePrevent, false);\n    }\n\n    if( self.options.formOptions.handleSubmit ){\n        formEl.removeEventListener('submit', self.listenerCallbacks.submit);\n    }\n\n    validationListenerNames.split(' ').forEach(function( eventName ){\n        let useCapturing = (eventName === 'blur' ? true : false);\n        formEl.removeEventListener(eventName, self.listenerCallbacks.validation, useCapturing);\n    });\n\n    delete self.formEl.formjs;\n    \n}\n","\nexport function getFormData(){\n\n    let self = this,\n        formEl = self.formEl,\n        formFieldsEl = formEl.querySelectorAll('input, select, textarea'),\n        excludeSelectors = ':not([type=\"reset\"]):not([type=\"submit\"]):not([type=\"button\"]):not([type=\"file\"]):not([data-exclude-data])',\n        filteredFields = Array.from(formFieldsEl).filter(elem => elem.matches(excludeSelectors) );\n    \n    return self.options.formOptions.getFormData.call( self, filteredFields );\n    \n}\n","\nimport { getFilledFields, isFieldForChangeEvent } from './helpers';\n\nexport const init = function(){\n\n    const self = this,\n          formEl = self.formEl,\n          formFields = getFilledFields( formEl );\n\n    // VALIDATE ALL FILLED FIELDS\n    formFields.forEach(fieldEl => {\n        const isFieldForChangeEventBoolean = isFieldForChangeEvent(fieldEl);\n        const fakeEventObj = { target: fieldEl, type: (isFieldForChangeEventBoolean ? 'change': '') };\n        self.listenerCallbacks.validation.call( self, fakeEventObj );\n    });\n\n    self.isInitialized = true;\n    return self;\n\n}\n","\nimport { mergeObjects, toCamelCase } from './helpers';\nimport { validationRulesAttributes } from './validationRules';\n\nexport function isValid( fieldEl, fieldOptions = {} ){\n\n    const self = this,\n          fieldType = ( fieldEl.matches('[data-subtype]') ? toCamelCase( fieldEl.getAttribute('data-subtype') ) : fieldEl.type ),\n          fieldValue = fieldEl.value,\n          isValidValue = fieldValue.trim().length > 0,\n          // ALPHABETICAL REVERSE ORDER\n          fieldAttributes = Array.from(fieldEl.attributes).sort(function(a,b){ return a.name < b.name });\n\n    let attrValidations = [],\n        attrValidationsResult = isValidValue,\n        obj = { result: isValidValue, fieldEl };\n\n    if( !obj.result ){\n        obj.errors = { empty: true };\n        return Promise.resolve(obj);\n    }\n\n    // COLLECT SPECIFIC VALIDATIONS FOR validationRulesAttributes\n    fieldAttributes.forEach(function(attr){\n        // FOR data-* ATTRIBUTES -> REMOVE \"data-\" AND TRANSFORM TO CAMELCASE\n        let attrName = toCamelCase( attr.name.replace('data-', '') ),\n            attrValue = attr.value,\n            isAttrValueWithFn = attrName === 'type' && typeof validationRulesAttributes[attrValue] === 'function',\n            isAttrNameWithFn = typeof validationRulesAttributes[attrName] === 'function';\n\n        if( isAttrValueWithFn || isAttrNameWithFn ){\n\n            let extraValObj = {\n                    attrName: (isAttrValueWithFn ? attrValue : attrName),\n                    attrValue: attrValue,\n                    fieldEl,\n                    fieldOptions\n                };\n\n            if( isAttrValueWithFn || attrName === 'requiredFrom' ){\n                // THESE VALIDATIONS MUST RUN BEFORE ALL OTHERS\n                attrValidations.unshift( extraValObj );\n            } else {\n                attrValidations.push( extraValObj );\n            }\n\n        }\n    });\n\n    return new Promise(function(resolve){\n\n        // RUN SPECIFIC VALIDATIONS FOR validationRulesAttributes\n        attrValidations.forEach(function(item){\n            let extraVal = validationRulesAttributes[item.attrName]( item );\n            if( !extraVal.result ){\n                obj = mergeObjects({}, obj, extraVal);\n                attrValidationsResult = false;\n            }\n        });\n\n        // RUN VALIDATIONS FOR validationRules\n        if( typeof self.validationRules[fieldType] === 'function' ){\n            resolve( self.validationRules[fieldType](fieldValue, fieldEl) );\n        } else {\n            resolve( obj );\n        }\n\n    }).then(data => {\n\n        obj = mergeObjects( {}, obj, data, {fieldEl} );\n        obj.result = obj.result && attrValidationsResult;\n\n        if( !obj.result ){\n            let fieldErrors = (typeof self.validationErrors[fieldType] === 'function' ? self.validationErrors[fieldType](fieldValue, fieldEl) : {});\n            if( typeof obj.errors === 'undefined' ){\n                obj.errors = {};\n            }\n            obj.errors.rule = true;\n            obj.errors = mergeObjects({}, obj.errors, fieldErrors);\n        }\n        \n        return obj;\n\n    });\n\n}\n","\nimport { isDOMNode, mergeObjects, runFunctionsSequence, validateFieldObjDefault } from './helpers';\nimport { isValid } from './isValid';\n\nexport function isValidField( fieldElem, fieldOptionsObj = {} ){\n\n    const self = this,\n          fieldEl = (typeof fieldElem === 'string' ? self.formEl.querySelector(fieldElem) : fieldElem);\n\n    let obj = mergeObjects({}, validateFieldObjDefault, {fieldEl});\n\n    if( !isDOMNode(fieldEl) ){ return Promise.resolve(obj); }\n\n    let options =           mergeObjects( {}, self.options.fieldOptions, fieldOptionsObj ),\n        isValidValue =      fieldEl.value.trim().length > 0,\n        isRequired =        fieldEl.required,\n        isReqFrom =         fieldEl.matches('[data-required-from]'),\n        isValidateIfFilled =fieldEl.matches('[data-validate-if-filled]');\n\n    const rfsObject = {\n        functionsList: self.options.fieldOptions.beforeValidation,\n        data: {fieldEl}\n    };\n\n    return runFunctionsSequence.call(self, rfsObject)\n        .then(data => {\n\n            let dataObj = data.pop();\n            return new Promise(function(resolve){\n                if(\n                    (!isRequired && !isValidateIfFilled && !isReqFrom) ||   // IT IS A NORMAL FORM FIELD\n                    (isValidateIfFilled && !isValidValue) ||                // IT IS data-validate-if-filled AND EMPTY\n                    (isReqFrom && !isRequired )                             // IT IS data-required-from AND NOT required\n                ){\n\n                    dataObj.result = true;\n                    resolve( dataObj );\n                \n                } else {\n\n                    resolve( isValid.call(self, fieldEl, options) );\n                    \n                }\n\n            });\n\n        });\n\n}\n","\nimport { fieldsStringSelector, getUniqueFields, mergeObjects, validateFormObjDefault } from './helpers';\nimport { isValidField } from './isValidField';\n\nexport function isValidForm( fieldOptionsObj = {} ){\n\n    const self = this,\n          formEl = self.formEl,\n          obj = mergeObjects({}, validateFormObjDefault),\n          fieldOptions = mergeObjects( {}, fieldOptionsObj, {focusOnRelated: false} ),\n          fieldsList = getUniqueFields( formEl.querySelectorAll(fieldsStringSelector) );\n\n    return Promise.all( fieldsList.map(function( fieldEl ){\n        \n        return isValidField.call( self, fieldEl, fieldOptions );\n\n    }) ).then(list => {\n\n        let areAllFieldsValid = list.filter(fieldObj => !fieldObj.result).length === 0;\n        obj.result = areAllFieldsValid;\n        obj.fields = list;\n\n        return obj;\n\n    });\n\n}\n","\nimport { executeCallback, mergeObjects } from './helpers';\nimport { isValidField } from './isValidField';\nimport { isValidForm } from './isValidForm';\n\nexport function validateField( fieldElem, fieldOptionsObj ){\n\n    const self = this,\n          fieldEl = (typeof fieldElem === 'string' ? self.formEl.querySelector(fieldElem) : fieldElem),\n          skipUIfeedback = self.options.fieldOptions.skipUIfeedback,\n          fieldOptions = mergeObjects({}, self.options.fieldOptions, fieldOptionsObj);\n    \n    return new Promise(function(resolve){\n\n        const prom = isValidField.call( self, fieldEl, fieldOptions );\n        resolve( prom );\n\n    }).then(obj => {\n\n        return new Promise(resolve => {\n            if( obj.fieldEl ){\n            \n                const runCallback = function( data, fieldOptionsNew = {} ){\n                    let options = mergeObjects({}, {fieldOptions}, {fieldOptions:fieldOptionsNew});\n                    executeCallback.call( self, {fn: fieldOptions.onValidation, data, options} );\n                };\n\n                runCallback( [obj] );\n\n                if( fieldOptions.onValidationCheckAll && obj.result ){\n                    // FORCE skipUIfeedback TO true\n                    self.options.fieldOptions.skipUIfeedback = true;\n                    resolve( isValidForm.call( self ).then(dataForm => {\n                        runCallback( dataForm.fields, {skipUIfeedback: true} );\n                        // RESTORE skipUIfeedback TO THE ORIGINAL VALUE\n                        self.options.fieldOptions.skipUIfeedback = skipUIfeedback;\n                        return obj;\n                    }) );\n                }\n            }\n            resolve( obj );\n        });\n        \n    });\n    \n}\n","\nimport { executeCallback, mergeObjects } from './helpers';\nimport { isValidForm } from './isValidForm';\n\nexport function validateForm( fieldOptionsObj = {} ){\n\n    const self = this,\n          fieldOptions = mergeObjects({}, self.options.fieldOptions, fieldOptionsObj);\n\n    return new Promise(function(resolve){\n\n        const prom = isValidForm.call( self, fieldOptions );\n        resolve(prom);\n\n    }).then(obj => {\n\n        executeCallback.call( self, {fn: fieldOptions.onValidation, data: obj.fields, options: {fieldOptions}} );\n        return obj;\n\n    });\n    \n}\n","\nimport { mergeObjects }         from './modules/helpers';\nimport { options }              from './modules/options';\nimport { validationRules }      from './modules/validationRules';\nimport { validationErrors }     from './modules/validationErrors';\n\n// CONSTRUCTOR FUNCTION & PUBLIC METHODS\nimport { constructorFn }        from './modules/constructor';\nimport { destroy }              from './modules/destroy';\nimport { getFormData }          from './modules/getFormData';\nimport { init }                 from './modules/init';\nimport { validateField }        from './modules/validateField';\nimport { validateForm }         from './modules/validateForm';\n\nconst version = '3.2.1';\n\nclass Form {\n\n    constructor( formEl, optionsObj ){\n        constructorFn.call(this, formEl, optionsObj);\n    }\n\n    destroy(){\n        destroy.call(this);\n    }\n    \n    getFormData(){\n        return getFormData.call(this);\n    }\n\n    init(){\n        return init.call(this);\n    }\n\n    validateField( fieldEl, fieldOptions ){\n        return validateField.call(this, fieldEl, fieldOptions);\n    }\n\n    validateForm( fieldOptions ){\n        return validateForm.call(this, fieldOptions);\n    }\n    \n    static addValidationErrors( errorsObj ){\n        this.prototype.validationErrors = mergeObjects({}, this.prototype.validationErrors, errorsObj);\n    }\n\n    static addValidationRules( rulesObj ){\n        this.prototype.validationRules = mergeObjects({}, this.prototype.validationRules, rulesObj);\n    }\n    \n    static setOptions( optionsObj ){\n        this.prototype.options = mergeObjects({}, this.prototype.options, optionsObj);\n    }\n\n}\n\nForm.prototype.isInitialized = false;\nForm.prototype.options = options;\nForm.prototype.validationErrors = validationErrors;\nForm.prototype.validationRules = validationRules;\nForm.prototype.version = version;\n\nexport default Form;\n","\nexport const validationErrors = {\n\n    email: function ( string ) {\n        const obj = {};\n\n        if( string.indexOf('@') === -1 ){\n\n            // @ IS MISSING\n            obj.missingAtChar = true;\n\n        } else {\n\n            let splitAt_at = string.split('@');\n            if( splitAt_at[0].length === 0 ){\n\n                // USER NAME IS MISSING\n                obj.missingUserName = true;\n\n            }\n\n            if( splitAt_at[1].length === 0 ){\n\n                // IS EMPTY AFTER @\n                obj.missingDomain = true;\n                obj.missingExtensionDot = true;\n                obj.missingExtension = true;\n\n            } else if( splitAt_at[1].indexOf('.') === -1 ) {\n\n                // DOT IS MISSING\n                obj.missingExtensionDot = true;\n                obj.missingExtension = true;\n\n            } else {\n\n                // EXTENSION MISSING OR NOT LONG ENOUGH\n                let splitAt_dot = splitAt_at[1].split('.'),\n                    extLength = splitAt_dot[1].length;\n                if( extLength === 0 ) {\n                    obj.missingExtension = true;\n                } else if( extLength < 2 ){\n                    obj.minlengthExtension = true;\n                }\n\n            }\n        }\n\n        return obj;\n\n    }\n\n}"],"sourceRoot":""}