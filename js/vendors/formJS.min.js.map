{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/modules/helper.js","webpack:///./src/modules/validationRules.js","webpack:///./src/modules/isValidField.js","webpack:///./src/index.js","webpack:///./src/modules/options.js","webpack:///./src/modules/optionsUtils.js","webpack:///./src/modules/optionsAjax.js","webpack:///./src/modules/validationErrors.js","webpack:///./src/modules/constructor.js","webpack:///./src/modules/listenerCallbacks.js","webpack:///./src/modules/submit.js","webpack:///./src/modules/ajaxCall.js","webpack:///./src/modules/formStartup.js","webpack:///./src/modules/destroy.js","webpack:///./src/modules/getFormData.js","webpack:///./src/modules/init.js","webpack:///./src/modules/validateField.js","webpack:///./src/modules/checkDirtyField.js","webpack:///./src/modules/isValid.js","webpack:///./src/modules/validateForm.js","webpack:///./src/modules/isValidForm.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","default","object","property","prototype","hasOwnProperty","p","s","e","iterator","constructor","isDOMNode","fieldsStringSelector","addClass","element","cssClasses","split","forEach","className","classList","add","checkFormEl","formEl","isString","_typeof","isFormSelector","document","querySelector","tagName","toLowerCase","result","executeCallback","callbackOption","callbackData","arguments","length","tempOptions","self","this","options","mergeObjects","callbackFnList","push","Array","isArray","cbFn","getSplitChar","string","splitChar","indexOf","node","Element","isPrototypeOf","isFieldForChangeEvent","fieldEl","matches","isNodeList","nodeList","NodeList","isPlainObject","toString","out","obj","isObject","concat","slice","removeClass","remove","serializeObject","keys","reduce","a","k","encodeURIComponent","join","toCamelCase","replace","all","letter","toUpperCase","validateFieldObjDefault","validateFormObjDefault","fields","validationRulesAttributes","validationRules","_helper","date","test","email","number","checkbox","data","dataChecksEl","closest","checked","checks","attrValue","getAttribute","JSON","parse","checkedElLength","querySelectorAll","isMinOk","isMaxOk","errors","minChecks","maxChecks","Error","equalTo","checkFromEl","exactLength","valueLength","minlength","maxlength","file","maxFileSize","fieldOptions","MIMEtype","accept","RegExp","from","files","exceedMaxFileSize","size","isAcceptedFileType","type","acceptedFileType","valueL","isMinlengthOk","isMaxlengthOk","stringLength","max","isDate","maxVal","reverse","min","minVal","pattern","fieldPattern","radio","fieldChecked","trim","requiredFrom","isValidValue","reqMoreEl","required","isValidField","fieldElem","fieldOptionsObj","Promise","resolve","isRequired","isReqFrom","isValidateIfFilled","checkDirtyField","isValid","then","_checkDirtyField","_isValid","configurable","writable","_options","_validationRules","_validationErrors","_constructor","_destroy2","_getFormData2","_init2","_validateField2","_validateForm2","Form","optionsObj","constructorFn","destroy","getFormData","init","validateField","validateForm","errorsObj","validationErrors","rulesObj","isInitialized","version","window","FormJS","_optionsUtils","_optionsAjax","dirty","error","errorEmpty","errorRule","valid","focusOnRelated","handleFileUpload","handleValidation","onPastePrevented","onValidation","defaultCallbacksInOptions","preventPasteFields","skipUIfeedback","strictHtmlValidation","validateOnEvents","formOptions","ajaxOptions","ajaxSubmit","beforeSend","handleSubmit","onSubmitComplete","onSubmitError","onSubmitSuccess","fieldsArray","containerEl","errorClasses","extraErrorClass","isChecks","empty","errorClassToRemove","filteredFields","formData","isCheckbox","isRadio","isSelect","checkboxes","filter","field","checkedRadio","selectedOpts","option","selected","cache","credentials","headers","Content-Type","Accept","method","redirect","timeout","url","location","href","missingAtChar","splitAt_at","missingUserName","missingDomain","missingExtensionDot","missingExtension","extLength","minlengthExtension","argsL","checkFormElem","formjs","listenerCallbacks","dataTypeNumber","callbackFns","keypressMaxlength","pastePrevent","submit","validation","freeze","formStartup","_listenerCallbacks","_formStartup","_submit2","event","target","fieldValue","stopImmediatePropagation","valueReplaced","maxLength","keyPressed","which","keyCode","preventDefault","eventName","isFieldForChangeEventBoolean","isReqMore","findReqMoreEl","findReqFromEl","id","focus","realtedFieldEqualTo","isAjaxForm","btnEl","eventPreventDefault","enableBtn","disabled","formValidation","beforeSendData","stopExecution","formDataObj","callbacksBeforeSend","acc","res","beforeSendDataNew","dataList","ajaxCall","_ajaxCall","timeoutTimer","isMultipart","body","formDataMultipart","FormData","append","idx","stringify","Headers","controller","AbortController","signal","setTimeout","abort","fetch","response","ok","contentType","methodName","reject","catch","finally","clearTimeout","addEventListener","useCapturing","validationListenerNames","removeEventListener","formFieldsEl","elem","formFields","currentFieldName","currentFieldType","isCheckboxOrRadio","fakeEventObj","_isValidField","fieldType","fieldAttributes","attributes","sort","b","attrValidations","attrValidationsResult","attr","attrName","isAttrValueWithFn","isAttrNameWithFn","extraValObj","unshift","item","extraVal","fieldErrors","rule","isValidForm","_isValidForm","fieldsList","map","list","areAllFieldsValid","fieldObj"],"mappings":"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","file":"formJS.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","\nexport const\n\nfieldsStringSelector = 'input:not([type=\"reset\"]):not([type=\"submit\"]):not([type=button]):not([type=hidden]), select, textarea',\n\naddClass = function( element, cssClasses ){\n    cssClasses.split(' ').forEach(function(className){\n        element.classList.add( className );\n    });\n},\n\ncheckFormEl = function( formEl ){\n    let isString = typeof formEl,\n        isValidNodeSelector = isString === 'string' && isDOMNode(document.querySelector(formEl)),\n        isFormSelector = isValidNodeSelector && document.querySelector(formEl).tagName.toLowerCase() === 'form',\n        obj = {\n            result: isDOMNode(formEl) || isFormSelector,\n            element: (isString === 'string' ? document.querySelector(formEl) : formEl)\n        };\n\n    return obj;\n},\n\nexecuteCallback = function( callbackOption, callbackData = {}, tempOptions = {} ){\n    let self = this,\n        options = mergeObjects({}, self.options, tempOptions),\n        callbackFnList = [];\n\n    if( typeof callbackOption === 'function' ){\n        callbackFnList.push( callbackOption );\n    } else if( Array.isArray(callbackOption) ) {\n        callbackFnList = callbackOption;\n    }\n\n    callbackFnList.forEach(function(cbFn){\n        cbFn.call( self, callbackData, options );\n    });\n},\n\ngetSplitChar = function( string ){\n    let splitChar = '.';\n\n    if( string.indexOf(splitChar) === -1 ){\n        if( string.indexOf('-') >= 0 ){\n            splitChar = '-';\n        } else if( string.indexOf('/') >= 0 ){\n            splitChar = '/';\n        }\n    }\n\n    return splitChar;\n},\n\nisDOMNode = function( node ){\n    return Element.prototype.isPrototypeOf( node );\n},\n\nisFieldForChangeEvent = function ( fieldEl ) {\n    return fieldEl.matches('select, [type=\"radio\"], [type=\"checkbox\"], [type=\"file\"]');\n},\n\nisNodeList = function( nodeList ){\n    return NodeList.prototype.isPrototypeOf( nodeList );\n},\n\nisPlainObject = function( object ){\n    return Object.prototype.toString.call( object ) === '[object Object]';\n},\n\nmergeObjects = function( out = {} ){\n    for(let i=1; i<arguments.length; i++){\n        let obj = arguments[i];\n\n        if(!obj){ continue; }\n\n        for(let key in obj){\n            let isArray = Object.prototype.toString.call(obj[key]) === \"[object Array]\";\n            let isObject = Object.prototype.toString.call(obj[key]) === \"[object Object]\";\n\n            // COPY ONLY ENUMERABLE PROPERTIES\n            if( obj.hasOwnProperty(key) ){\n                if( isArray ){\n\n                    if( typeof out[key] === 'undefined' ){\n                        out[key] = [];\n                    }\n                    out[key] = out[key].concat( obj[key].slice(0) );\n\n                } else if( isObject ){\n\n                    out[key] = mergeObjects(out[key], obj[key]);\n\n                } else {\n\n                    // * STRING | NUMBER | BOOLEAN | FUNCTION\n                    if( Array.isArray(out[key]) ){\n                        // IF THIS IS ONE OF ABOVE (*) AND THE DESTINATION OBJECT IS AN ARRAY\n                        out[key].push(obj[key]);\n                    } else {\n                        out[key] = obj[key];\n                    }\n\n                }\n            }\n        }\n    }\n\n    return out;\n},\n\nremoveClass = function( element, cssClasses ){\n    cssClasses.split(' ').forEach(function(className){\n        element.classList.remove( className );\n    });\n},\n\nserializeObject = function( obj ){\n    var objToString = (\n            (obj && typeof obj === 'object' && obj.constructor === Object) ? \n            Object.keys(obj)\n                .reduce(function(a,k){\n                    a.push(k+'='+encodeURIComponent(obj[k]));\n                    return a\n                },[]).join('&') : \n            obj\n    );\n    return objToString;\n},\n\ntoCamelCase = function( string ){\n    return string.replace(/-([a-z])/ig, function(all, letter){ return letter.toUpperCase(); });\n},\n\nvalidateFieldObjDefault = { result: false, fieldEl: null },\n\nvalidateFormObjDefault = { result: true, fields: [] }\n","\nimport { getSplitChar } from './helper.js';\n\nexport const validationRules = {\n            \n    date: function( string ){\n        // DATE AS ISO 8601 DATE FORMAT     YYYY MM DD | YYYY/MM/DD | YYYY.MM.DD | YYYY-MM-DD\n\n        let date = /^(((19|[2-9]\\d)\\d{2})[ \\/\\-.](0[13578]|1[02])[ \\/\\-.](0[1-9]|[12]\\d|3[01]))|(((19|[2-9]\\d)\\d{2})[ \\/\\-.](0[13456789]|1[012])[ \\/\\-.](0[1-9]|[12]\\d|30))|(((19|[2-9]\\d)\\d{2})[ \\/\\-.]02[ \\/\\-.](0[1-9]|1\\d|2[0-8]))|(((1[6-9]|[2-9]\\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))[ \\/\\-.]02[ \\/\\-.]29)$/g.test( string ),\n            obj = {\n                result: date\n            };\n\n        return obj;\n    },\n    \n    email: function( string ){\n        // FROM https://emailregex.com\n        // AS FOR RFC 5322 Official Standard EMAIL MUST BE AT LEAST:\n        // a@a.aa\n        let obj = {\n            result: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test( string )\n        };\n\n        return obj;\n    },\n    \n    number: function( string ){\n        // ALL NUMBERS ( INTEGERS AND FLOATING )\n        // VALID NUMBERS: 123 | 123.456 | .123\n        let obj = {\n            result: /[+-]?([0-9]*[.])?[0-9]+/.test( string )\n        };\n\n        return obj;\n    }\n    \n}\n\nexport const validationRulesAttributes = {\n\n    checkbox: function( data ){\n        let formEl = data.fieldEl.closest('form'),\n            dataChecksEl = formEl.querySelector('[name=\"' + data.fieldEl.name + '\"][data-checks]'),\n            obj = { result: data.fieldEl.checked };\n\n        if( dataChecksEl !== null ){\n            obj = this.checks({ attrValue: dataChecksEl.getAttribute('data-checks'), fieldEl: dataChecksEl});\n        }\n\n        return obj;\n    },\n\n    checks: function( data ){\n        try {\n            let attrValue = JSON.parse(data.attrValue),\n                fieldEl = data.fieldEl,\n                formEl = fieldEl.closest('form'),\n                checkedElLength = formEl.querySelectorAll('[name=\"' + fieldEl.name + '\"]:checked').length,\n                isMinOk = checkedElLength >= attrValue[0],\n                isMaxOk = checkedElLength <= attrValue[1],\n                obj = {\n                    result: isMinOk && isMaxOk\n                };\n\n            if( !obj.result ){\n\n                obj.errors = { checks: true };\n                if( !isMinOk ){ obj.errors.minChecks = true; }\n                if( !isMaxOk ){ obj.errors.maxChecks = true; }\n\n            }\n\n            return obj;\n        } catch(e){\n            throw new Error('\"data-checks\" attribute is not a valid array!');\n        }\n    },\n\n    equalTo: function( data ){\n        let fieldEl = data.fieldEl,\n            formEl = fieldEl.closest('form'),\n            checkFromEl = formEl.querySelector( '[name=\"' + fieldEl.getAttribute('data-equal-to') + '\"]' ),\n            obj = {\n                result: fieldEl.value === checkFromEl.value\n            };\n\n        if( !obj.result ){\n            \n            obj.errors = { equalTo: true };\n        }\n\n        return obj;\n    },\n    \n    exactLength: function( data ){\n        let valueLength = data.fieldEl.value.length,\n            exactLength = (data.attrValue * 1),\n            obj = {\n                result: valueLength === exactLength\n            };\n\n        if( !obj.result ){\n\n            obj.errors = { exactLength: true };\n            if( valueLength < exactLength ){ obj.errors.minlength = true; }\n            else { obj.errors.maxlength = true; }\n\n        }\n\n        return obj;\n    },\n\n    file: function( data ){\n        let fieldEl = data.fieldEl,\n            maxFileSize = (fieldEl.getAttribute('data-max-file-size') || data.fieldOptions.maxFileSize) * 1,\n            MIMEtype = (fieldEl.accept ? new RegExp(fieldEl.accept.replace( '*', '[^\\\\/,]+' )) : null),\n            filesList = Array.from(fieldEl.files),\n            obj = { result: true };\n\n        filesList.forEach(function( file ){\n            let exceedMaxFileSize = maxFileSize > 0 && (file.size/1024/1024) > maxFileSize,\n                isAcceptedFileType = (MIMEtype !== null ? MIMEtype.test(file.type) : true);\n\n            if( exceedMaxFileSize || !isAcceptedFileType ){\n                obj.result = false;\n                if( typeof obj.errors === 'undefined' ){\n                    obj.errors = {};\n                }\n                obj.errors.file = true;\n                if( exceedMaxFileSize ){ obj.errors.maxFileSize = true; }\n                if( !isAcceptedFileType ){ obj.errors.acceptedFileType = true; }\n\n            }\n        });\n\n        return obj;\n    },\n\n    length: function( data ){\n        try {\n            let valueL = data.fieldEl.value.length,\n                attrValue = JSON.parse(data.attrValue),\n                isMinlengthOk = valueL >= attrValue[0],\n                isMaxlengthOk = valueL <= attrValue[1],\n                obj = { result: isMinlengthOk && isMaxlengthOk };\n\n            if( !obj.result ){\n\n                obj.errors = { stringLength: true };\n                if( !isMinlengthOk ){ obj.errors.minlength = true; }\n                if( !isMaxlengthOk ){ obj.errors.maxlength = true; }\n\n            }\n\n            return obj;\n        } catch(e){\n            throw new Error('\"data-length\" attribute is not a valid array!');\n        }\n    },\n    \n    max: function( data ){\n        let fieldEl = data.fieldEl,\n            isDate = (fieldEl.matches('[type=\"date\"]') || fieldEl.matches('[data-subtype=\"date\"]') || fieldEl.matches('[data-subtype=\"dateDDMMYYYY\"]')),\n            value = data.fieldEl.value,\n            maxVal = data.attrValue;\n        \n        if( isDate ){\n\n            let splitChar = getSplitChar( value );\n\n            if( value.indexOf(splitChar) === 2 ){\n                // DD MM YYYY\n                value = value.split( splitChar ).reverse();\n            } else {\n                // YYYY MM DD\n                value = value.split( splitChar );\n            }\n\n            value = value.join('');\n            maxVal = maxVal.split('-').join('');\n\n        }\n\n        value = value * 1;\n        maxVal = maxVal * 1;\n\n        let obj = {\n                result: value <= maxVal\n            };\n\n        if( !obj.result ){\n            \n            obj.errors = { max: true };\n        }\n        \n        return obj;\n    },\n    \n    maxlength: function( data ){\n        const obj = {\n            result: data.fieldEl.value.length <= (data.attrValue * 1)\n        };\n\n        if( !obj.result ){\n\n            obj.errors = { maxlength: true };\n        }\n\n        return obj;\n    },\n    \n    min: function( data ){\n        let fieldEl = data.fieldEl,\n            isDate = (fieldEl.matches('[type=\"date\"]') || fieldEl.matches('[data-subtype=\"date\"]') || fieldEl.matches('[data-subtype=\"dateDDMMYYYY\"]')),\n            value = data.fieldEl.value,\n            minVal = data.attrValue;\n        \n        if( isDate ){\n\n            let splitChar = getSplitChar( value );\n\n            if( value.indexOf(splitChar) === 2 ){\n                // DD MM YYYY\n                value = value.split( splitChar ).reverse();\n            } else {\n                // YYYY MM DD\n                value = value.split( splitChar );\n            }\n\n            value = value.join('');\n            minVal = minVal.split('-').join('');\n\n        }\n\n        value = value * 1;\n        minVal = minVal * 1;\n\n        let obj = {\n                result: value >= minVal\n            };\n\n        if( !obj.result ){\n            \n            obj.errors = { min: true };\n        }\n        \n        return obj;\n    },\n\n    minlength: function( data ){\n        const obj = {\n            result: data.fieldEl.value.length >= (data.attrValue * 1)\n        };\n\n        if( !obj.result ){\n\n            obj.errors = { minlength: true };\n        }\n\n        return obj;\n    },\n\n    pattern: function( data ){\n        let fieldEl = data.fieldEl,\n            fieldPattern = fieldEl.pattern,\n            fieldRegex = new RegExp( fieldPattern ),\n            obj = {\n                result: fieldRegex.test( fieldEl.value )\n            };\n\n        if( !obj.result ){\n\n            obj.errors = { pattern: true };\n        }\n\n        return obj;\n    },\n\n    radio: function( data ){\n        let fieldEl = data.fieldEl,\n            fieldChecked = fieldEl.closest('form').querySelector( '[name=\"'+ fieldEl.name +'\"]:checked' ),\n            isValid = fieldChecked !== null && fieldChecked.value.trim().length > 0,\n            obj = { result: isValid };\n\n        return obj;\n    },\n\n    requiredFrom: function( data ){\n        let fieldEl = data.fieldEl,\n            formEl = fieldEl.closest('form'),\n            isValidValue = fieldEl.value.trim().length > 0,\n            reqMoreEl = formEl.querySelector( fieldEl.getAttribute('data-required-from') ),\n            checkedEl = formEl.querySelector( '[name=\"'+ reqMoreEl.name +'\"]:checked' ),\n            obj = { result: checkedEl !== null };\n\n        if( reqMoreEl.checked && reqMoreEl.required ){\n            obj.result = isValidValue;\n        }\n\n        if( !obj.result ){\n            obj.errors = { requiredFrom: true };\n        }\n        \n        return obj;\n    }\n    \n}\n","\nimport { isDOMNode, mergeObjects, validateFieldObjDefault } from './helper.js';\nimport { checkDirtyField } from './checkDirtyField.js';\nimport { isValid } from './isValid.js';\n\nexport function isValidField( fieldElem, fieldOptionsObj = {} ){\n\n    const self = this,\n          fieldEl = (typeof fieldElem === 'string' ? self.formEl.querySelector(fieldElem) : fieldElem);\n\n    let obj = mergeObjects({}, validateFieldObjDefault);\n\n    if( !isDOMNode(fieldEl) ){ return Promise.resolve(obj); }\n\n    let options =           mergeObjects( {}, self.options.fieldOptions, fieldOptionsObj ),\n        isValidValue =      fieldEl.value.trim().length > 0,\n        isRequired =        fieldEl.required,\n        isReqFrom =         fieldEl.matches('[data-required-from]'),\n        isValidateIfFilled =fieldEl.matches('[data-validate-if-filled]');\n\n    checkDirtyField.call( self, fieldEl );\n\n    return new Promise(function(resolve){\n        if(\n            (!isRequired && !isValidateIfFilled && !isReqFrom) ||   // IT IS A NORMAL FORM FIELD\n            (isValidateIfFilled && !isValidValue) ||                // IT IS data-validate-if-filled AND EMPTY\n            (isReqFrom && !isRequired )                             // IT IS data-required-from AND NOT required\n        ){\n\n            obj.result = true;\n            resolve( obj );\n        \n        } else {\n\n            resolve( isValid.call(self, fieldEl, options) );\n            \n        }\n\n    }).then(obj => {\n\n        obj.fieldEl = fieldEl;\n        return obj;\n\n    });\n\n}\n","\n/**! formJS v3.1.0 | Valerio Di Punzio (@SimplySayHi) | https://www.valeriodipunzio.com/plugins/formJS/ | https://github.com/SimplySayHi/formJS | MIT license */\n\nimport { mergeObjects }         from './modules/helper.js';\nimport { options }              from './modules/options.js';\nimport { validationRules }      from './modules/validationRules.js';\nimport { validationErrors }     from './modules/validationErrors.js';\n\n// CONSTRUCTOR FUNCTION & PUBLIC METHODS\nimport { constructorFn }        from './modules/constructor.js';\nimport { destroy }              from './modules/destroy.js';\nimport { getFormData }          from './modules/getFormData.js';\nimport { init }                 from './modules/init.js';\nimport { validateField }        from './modules/validateField.js';\nimport { validateForm }         from './modules/validateForm.js';\n\nconst version = '3.1.0';\n\nclass Form {\n\n    constructor( formEl, optionsObj ){\n        constructorFn.call(this, formEl, optionsObj);\n    }\n\n    destroy(){\n        destroy.call(this);\n    }\n    \n    getFormData(){\n        return getFormData.call(this);\n    }\n\n    init(){\n        return init.call(this);\n    }\n\n    validateField( fieldEl, fieldOptions ){\n        return validateField.call(this, fieldEl, fieldOptions);\n    }\n\n    validateForm( fieldOptions ){\n        return validateForm.call(this, fieldOptions);\n    }\n    \n    static addValidationErrors( errorsObj ){\n        this.prototype.validationErrors = mergeObjects({}, this.prototype.validationErrors, errorsObj);\n    }\n\n    static addValidationRules( rulesObj ){\n        this.prototype.validationRules = mergeObjects({}, this.prototype.validationRules, rulesObj);\n    }\n    \n    static setOptions( optionsObj ){\n        this.prototype.options = mergeObjects({}, this.prototype.options, optionsObj);\n    }\n\n}\n\nForm.prototype.isInitialized = false;\nForm.prototype.options = options;\nForm.prototype.validationErrors = validationErrors;\nForm.prototype.validationRules = validationRules;\nForm.prototype.version = version;\n\nif( !window.Form ){ window.Form = Form; }\nif( !window.FormJS ) { window.FormJS = Form; }\n","\nimport { defaultCallbacksInOptions } from './optionsUtils.js';\nimport { ajaxOptions } from './optionsAjax.js';\n//import { ajaxOptions } from './optionsAjaxXhr.js';\n\nexport const options = {\n\n    fieldOptions: {\n        cssClasses: {\n            dirty:              'is-dirty',\n            error:              'has-error',\n            errorEmpty:         'has-error-empty',\n            errorRule:          'has-error-rule',\n            valid:              'is-valid'\n        },\n        focusOnRelated:         true,\n        handleFileUpload:       true,\n        handleValidation:       true,\n        maxFileSize:            10,\n        onPastePrevented:       [],\n        onValidation:           [defaultCallbacksInOptions.fieldOptions.onValidation],\n        preventPasteFields:     '[type=\"password\"], [data-equal-to]',\n        skipUIfeedback:         false,\n        strictHtmlValidation:   true,\n        validateOnEvents:       'input change'\n    },\n\n    formOptions: {\n        ajaxOptions:            ajaxOptions,\n        ajaxSubmit:             true,\n        beforeSend:             [],\n        getFormData:            defaultCallbacksInOptions.formOptions.getFormData,\n        handleSubmit:           true,\n        onSubmitComplete:       [],\n        onSubmitError:          [],\n        onSubmitSuccess:        []\n    }\n    \n}\n","\nimport { addClass, mergeObjects, removeClass } from './helper.js';\n\nexport const defaultCallbacksInOptions = {\n    fieldOptions: {\n\n        onValidation: function onValidationDefault ( fieldsArray, tempOptions = {} ) {\n\n            let self = this,\n                options = mergeObjects( {}, self.options.fieldOptions, tempOptions.fieldOptions );\n\n            fieldsArray.forEach(function( obj ){\n                let fieldEl = obj.fieldEl,\n                    containerEl = fieldEl.closest('[data-formjs-question]'),\n                    isReqFrom = fieldEl.matches('[data-required-from]'),\n                    reqMoreEl = self.formEl.querySelector( fieldEl.getAttribute('data-required-from') );\n                \n                if( containerEl !== null && !options.skipUIfeedback ){\n                    if( obj.result ){\n\n                        if( !isReqFrom || (isReqFrom && reqMoreEl.checked) ){\n                            // IF FIELD IS VALID\n                            let errorClasses = options.cssClasses.error + ' ' + options.cssClasses.errorEmpty + ' ' + options.cssClasses.errorRule;\n                            removeClass( containerEl, errorClasses );\n                            addClass( containerEl, options.cssClasses.valid );\n                        }\n\n                    } else {\n\n                        // IF FIELD IS NOT VALID\n                        let extraErrorClass = options.cssClasses.errorRule;\n\n                        // HANDLE CASE OF FIELD data-checks\n                        let isChecks = fieldEl.matches('[data-checks]'),\n                            checkedElLength = (isChecks ? containerEl.querySelectorAll('[name=\"' + fieldEl.name + '\"]:checked').length : 0);\n\n                        if( (!isChecks && (obj.errors && obj.errors.empty)) || (isChecks && checkedElLength === 0) ){\n                            extraErrorClass = options.cssClasses.errorEmpty;\n                        }\n\n                        let errorClasses = options.cssClasses.error + ' ' + extraErrorClass,\n                            errorClassToRemove = options.cssClasses.errorEmpty + ' ' + options.cssClasses.errorRule;\n                        removeClass( containerEl, options.cssClasses.valid + ' ' + errorClassToRemove );\n                        addClass( containerEl, errorClasses );\n\n                    }\n                }\n            });\n            \n        }\n\n    },\n    formOptions: {\n\n        getFormData: function getFormDataDefault ( filteredFields ) {\n\n            let formData = {},\n                self = this,\n                formEl = self.formEl;\n\n            filteredFields.forEach(function( fieldEl ){\n                let isCheckbox = fieldEl.type === 'checkbox',\n                    isRadio = fieldEl.type === 'radio',\n                    isSelect = fieldEl.matches('select'),\n                    name = fieldEl.name,\n                    value = fieldEl.value;\n                                \n                if( isCheckbox ) {\n                    \n                    value = fieldEl.checked;\n                    let checkboxes = Array.from( formEl.querySelectorAll('[name=\"'+ name +'\"]') );\n                    if( checkboxes.length > 1 ){\n\n                        value = [];\n                        let checkedElems = checkboxes.filter(field => field.checked);\n                        checkedElems.forEach(fieldEl => {\n                            value.push( fieldEl.value );\n                        });\n\n                    }\n                        \n                } else if( isRadio ){\n                    \n                    let checkedRadio = formEl.querySelector('[name=\"'+ name +'\"]:checked');\n                    value = (checkedRadio === null ? null : checkedRadio.value);\n                    \n                } else if( isSelect ){\n\n                    let selectedOpts = Array.from( fieldEl.options ).filter(option => option.selected);\n                    if( selectedOpts.length > 1 ){\n\n                        value = [];\n                        selectedOpts.forEach(fieldEl => {\n                            value.push( fieldEl.value );\n                        });\n\n                    }\n                }\n\n                formData[ name ] = value;\n            });\n\n            return formData;\n\n        }\n\n    }\n}\n","\nexport let ajaxOptions = {\n    cache:              'no-store',\n    credentials:        'same-origin',\n    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept':       'application/json'\n    },\n    method:             'POST',\n    mode:               'same-origin',\n    redirect:           'follow',\n    timeout:            0,\n    url:                location.href\n}\n","\nexport const validationErrors = {\n\n    email: function ( string ) {\n        const obj = {};\n\n        if( string.indexOf('@') === -1 ){\n\n            // @ IS MISSING\n            obj.missingAtChar = true;\n\n        } else {\n\n            let splitAt_at = string.split('@');\n            if( splitAt_at[0].length === 0 ){\n\n                // USER NAME IS MISSING\n                obj.missingUserName = true;\n\n            }\n\n            if( splitAt_at[1].length === 0 ){\n\n                // IS EMPTY AFTER @\n                obj.missingDomain = true;\n                obj.missingExtensionDot = true;\n                obj.missingExtension = true;\n\n            } else if( splitAt_at[1].indexOf('.') === -1 ) {\n\n                // DOT IS MISSING\n                obj.missingExtensionDot = true;\n                obj.missingExtension = true;\n\n            } else {\n\n                // EXTENSION MISSING OR NOT LONG ENOUGH\n                let splitAt_dot = splitAt_at[1].split('.'),\n                    extLength = splitAt_dot[1].length;\n                if( extLength === 0 ) {\n                    obj.missingExtension = true;\n                } else if( extLength < 2 ){\n                    obj.minlengthExtension = true;\n                }\n\n            }\n        }\n\n        return obj;\n\n    }\n\n}","\nimport { checkFormEl, isNodeList, mergeObjects }   from './helper.js';\nimport { callbackFns }                             from './listenerCallbacks.js';\nimport { formStartup }                             from './formStartup.js';\n\nexport function constructorFn( formEl, optionsObj = {} ){\n\n    let self = this,\n        argsL = arguments.length,\n        checkFormElem = checkFormEl(formEl);\n\n    if( argsL === 0 || (argsL > 0 && !formEl) ){\n        throw new Error('First argument \"formEl\" is missing or falsy!');\n    }\n    if( isNodeList(formEl) ){\n        throw new Error('First argument \"formEl\" must be a single DOM node or a form CSS selector, not a NodeList!');\n    }\n    if( !checkFormElem.result ){\n        throw new Error('First argument \"formEl\" is not a DOM node nor a form CSS selector!');\n    }\n\n    self.formEl = checkFormElem.element;\n    self.formEl.formjs = self;\n    self.options = mergeObjects({}, Form.prototype.options, optionsObj);\n    self.listenerCallbacks = {\n        dataTypeNumber:     callbackFns.dataTypeNumber,\n        keypressMaxlength:  callbackFns.keypressMaxlength,\n        pastePrevent:       callbackFns.pastePrevent.bind(self),\n        submit:             callbackFns.submit.bind(self),\n        validation:         callbackFns.validation.bind(self)\n    };\n    Object.freeze(self.listenerCallbacks);\n\n    formStartup.call( self );\n    \n}\n","\nimport { executeCallback, fieldsStringSelector, isFieldForChangeEvent } from './helper.js';\nimport { submit } from './submit.js';\n\nexport const callbackFns = {\n\n    dataTypeNumber: function( event ){\n\n        const fieldEl = event.target;\n        \n        if( fieldEl.matches('[data-type=\"number\"]') ){\n            let fieldValue = fieldEl.value,\n                hasInvalidChars = /[^\\d.,+\\-]/.test(fieldValue);\n            \n            if( hasInvalidChars ){\n                event.stopImmediatePropagation();\n                let valueReplaced = fieldValue.replace(/[^\\d.,+\\-]/g, '');\n                fieldEl.value = valueReplaced;\n            }\n        }\n\n    },\n\n    keypressMaxlength: function( event ){\n\n        const fieldEl = event.target;\n        \n        if( fieldEl.matches( '[maxlength]' ) ){\n            const maxLength = fieldEl.maxLength * 1,\n                keyPressed = event.which || event.keyCode,\n                allowedKeys = [8, 37, 38, 39, 46];\n\n            if( fieldEl.value.length >= maxLength && allowedKeys.indexOf(keyPressed) === -1 ){\n                return false;\n            }\n        }\n\n    },\n\n    pastePrevent: function( event ){\n\n        const self = this,\n              fieldEl = event.target;\n        let fieldOptions = self.options.fieldOptions;\n\n        if( fieldEl.matches( fieldOptions.preventPasteFields ) ){     \n            event.preventDefault();\n            executeCallback.call( self, fieldOptions.onPastePrevented, fieldEl );\n        }\n\n    },\n\n    submit: function( event ){\n        submit.call( this, event );\n    },\n\n    validation: function( event ){\n\n        const self = this,\n            eventName = event.type,\n            fieldEl = event.target;\n\n        if( fieldEl.matches( fieldsStringSelector ) ){\n            const isFieldForChangeEventBoolean = isFieldForChangeEvent(fieldEl),\n                isRadio = fieldEl.type === 'radio',\n                isReqFrom = fieldEl.matches('[data-required-from]'),\n                isReqMore = fieldEl.matches('[data-require-more]'),\n                isValidValue = fieldEl.value.trim().length > 0;\n\n            // HANDLE data-require-more FIELDS\n            if( isRadio && eventName === 'change' ){\n                let findReqMoreEl = (isReqMore ? fieldEl : self.formEl.querySelector('[name=\"'+ fieldEl.name +'\"][data-require-more]')),\n                    findReqFromEl = (findReqMoreEl !== null ? self.formEl.querySelector('[data-required-from=\"#'+ findReqMoreEl.id +'\"]') : null);\n\n                if( isReqMore ){\n\n                    if( findReqFromEl !== null ){\n                        findReqFromEl.required = fieldEl.required;\n                        if( self.options.fieldOptions.focusOnRelated ){\n                            findReqFromEl.focus();\n                        }\n                    }\n\n                } else if( findReqMoreEl !== null ){\n\n                    if( findReqFromEl !== null ){\n                        findReqFromEl.required = findReqMoreEl.required && findReqMoreEl.checked;\n                        findReqFromEl.value = '';\n                    }\n\n                }\n            }\n\n            // HANDLE data-required-from FIELDS\n            if( isReqFrom ){\n                if( isValidValue ){\n\n                    let reqMoreEl = self.formEl.querySelector( fieldEl.getAttribute('data-required-from') );\n                    reqMoreEl.checked = true;\n                    fieldEl.required = reqMoreEl.required;\n                }\n            }\n            \n            if(\n                (isFieldForChangeEventBoolean && eventName === 'change') ||\n                (!isFieldForChangeEventBoolean && eventName !== 'change')\n            ){\n                \n                self.validateField( fieldEl ).then(obj => {\n                    const type = obj.fieldEl.type,\n                          realtedFieldEqualTo = obj.fieldEl.closest('form').querySelector('[data-equal-to=\"'+ obj.fieldEl.name +'\"]');\n\n                    if(\n                        // FIELD IS required OR data-validate-if-filled AND ITS data-equal-to FIELD HAS A VALUE\n                        (obj.fieldEl.required || obj.fieldEl.matches('[data-validate-if-filled]')) && \n                        !(type === 'checkbox' || type === 'radio') && \n                        realtedFieldEqualTo && realtedFieldEqualTo.value.trim() !== ''\n                    ){\n                        self.validateField( realtedFieldEqualTo );\n                    }\n                });\n\n            }\n        }\n        \n    }\n\n}\n","\nimport { mergeObjects, validateFormObjDefault } from './helper.js';\nimport { ajaxCall }     from './ajaxCall.js';\n//import { ajaxCall }     from './ajaxCallXhr.js';\n\nexport function submit( event ){\n\n    const self = this,\n          options = self.options,\n          isAjaxForm = options.formOptions.ajaxSubmit,\n          formEl = self.formEl,\n          btnEl = formEl.querySelector('[type=\"submit\"]'),\n          eventPreventDefault = ( enableBtn = true ) => {\n              if( btnEl && enableBtn ){ btnEl.disabled = false; }\n              if( event ){ event.preventDefault(); }\n          };\n\n    if( isAjaxForm ){\n        eventPreventDefault(false);\n    }\n\n    if( btnEl ){\n        if( btnEl.disabled ){\n            eventPreventDefault(false);\n            return false;\n        }\n        btnEl.disabled = true;\n    }\n    \n    const handleValidation = options.fieldOptions.handleValidation,\n          formValidationPromise = (handleValidation ? self.validateForm() : Promise.resolve(validateFormObjDefault));\n\n    formValidationPromise.then(formValidation => {\n\n        let beforeSendData = { stopExecution: false, formData: {} };\n\n        if( !formValidation.result ){\n            eventPreventDefault();\n            beforeSendData.stopExecution = true;\n            return [beforeSendData];\n        }\n        \n        let formDataObj = (isAjaxForm ? self.getFormData() : null),\n            callbacksBeforeSend = options.formOptions.beforeSend;\n\n        if( formDataObj ){\n            beforeSendData.formData = formDataObj;\n        }\n\n        return callbacksBeforeSend.reduce(function(acc, cbFn){\n            return acc.then(function (res) {\n                let beforeSendDataNew = mergeObjects({}, res[res.length - 1]);\n                if( beforeSendDataNew.stopExecution ){\n                    return Promise.resolve(res);\n                }\n                return cbFn.call(self, beforeSendDataNew, options).then(function (result) {\n                    res.push(result);\n                    return res;\n                });\n            });\n        }, Promise.resolve([beforeSendData]));\n\n    }).then(dataList => {\n\n        if( dataList.filter(data => data.stopExecution).length > 0 ){\n            eventPreventDefault();\n            return false;\n        }\n        \n        if( isAjaxForm ){\n            const formData = dataList[dataList.length - 1].formData;\n            ajaxCall.call(self, formData);\n        }\n\n    });\n    \n}\n","\nimport { executeCallback, mergeObjects, serializeObject } from './helper.js';\n\n// AJAX CALL USING fetch API\nexport function ajaxCall( formDataObj ){\n\n    let self = this,\n        formEl = self.formEl,\n        fieldOptions = self.options.fieldOptions,\n        formOptions = self.options.formOptions,\n        btnEl = formEl.querySelector('[type=\"submit\"]'),\n        timeoutTimer,\n        ajaxOptions = mergeObjects( {}, formOptions.ajaxOptions ),\n        isMultipart = ajaxOptions.headers['Content-Type'] === 'multipart/form-data';\n\n    ajaxOptions.body = formDataObj;\n    \n    // POST A FormData OBJECT ( multipart )\n    if( isMultipart && fieldOptions.handleFileUpload ){\n        let formDataMultipart = new FormData();\n        \n        for(let key in ajaxOptions.body){\n            formDataMultipart.append( key, ajaxOptions.body[key] );\n        }\n        \n        Array.from( formEl.querySelectorAll('[type=\"file\"]') ).forEach(function( field ){\n            Array.from(field.files).forEach(function( file, idx ){\n                let name = field.name+'['+ idx +']';\n                formDataMultipart.append( name, file, file.name );\n            });\n        });\n        \n        ajaxOptions.body = formDataMultipart;\n    }\n\n    if( ajaxOptions.method === 'GET' ){\n\n        // FETCH WITH \"GET\" METHOD CAN'T HAVE \"body\". SO IT IS APPENDED TO THE URL\n        ajaxOptions.url += ( /\\?/.test(ajaxOptions.url) ? '&' : '?' ) + serializeObject( ajaxOptions.body );\n        delete ajaxOptions.body;\n\n    } else {\n\n        if( ajaxOptions.headers['Content-Type'].indexOf('application/x-www-form-urlencoded') > -1 ){\n            // POST A NORMAL FORM\n            ajaxOptions.body = serializeObject( ajaxOptions.body );\n        } else if( !isMultipart ){\n            // POST A JSON STRING\n            ajaxOptions.body = JSON.stringify(ajaxOptions.body);\n        }\n\n    }\n\n    ajaxOptions.headers = new Headers( ajaxOptions.headers );\n\n    if ( ajaxOptions.timeout > 0 ) {\n        const controller = new AbortController();\n        const signal = controller.signal;\n\n        ajaxOptions.signal = signal;\n\n        timeoutTimer = window.setTimeout(function() {\n            controller.abort();\n        }, ajaxOptions.timeout);\n    }\n\n    fetch(ajaxOptions.url, ajaxOptions)\n        .then(function( response ){\n\n            if( !response.ok ){\n                return Promise.reject(response);\n            }\n\n            let getFetchMethod = function( response ){\n                let contentType = response.headers.get('Content-Type'),\n                    methodName = 'blob';\n\n                if( contentType.indexOf('application/json') > -1 ){\n                    methodName = 'json';\n                } else if( contentType.indexOf('text/') > -1 ){\n                    methodName = 'text';\n                }\n                \n                return methodName;\n            };\n            let fetchMethod = getFetchMethod( response );\n\n            return response[fetchMethod]();\n\n        })\n        .then(function( data ){\n            executeCallback.call( self, formOptions.onSubmitSuccess, data );\n        })\n        .catch(function( error ){\n            executeCallback.call( self, formOptions.onSubmitError, error );\n        })\n        .finally(function(){\n\n            if( timeoutTimer ){\n                window.clearTimeout( timeoutTimer );\n            }\n            btnEl.disabled = false;\n            executeCallback.call( self, formOptions.onSubmitComplete );\n\n        });\n    \n}\n","\nexport function formStartup(){\n\n    const self = this,\n          formEl = self.formEl;\n\n    if( !formEl.matches('[novalidate]') ){ return null; }\n\n    let fieldOptions = self.options.fieldOptions,\n        formOptions = self.options.formOptions;\n\n    // HANDLE FIELD VALIDATION\n    if( fieldOptions.handleValidation ){\n        \n        // VALIDATION WITH ATTRIBUTES LIKE HTML ONES ( ALSO FOR BUG FIXING, EG: maxlength IN ANDROID )\n        if( fieldOptions.strictHtmlValidation ){\n            \n            // maxlength\n            // MAXLENGTH IS BUGGY IN ANDROID BROWSERS\n            formEl.addEventListener('keypress', self.listenerCallbacks.keypressMaxlength, false);\n\n            // data-type=\"number\"\n            // SINCE VALIDATING type=\"number\" WITH NON NUMERIC CHARS WILL RETURN EMPTY STRING IN SOME BROWSERS ( EG: FIREFOX )\n            formEl.addEventListener('input', self.listenerCallbacks.dataTypeNumber, false);\n            \n        }\n        \n        if( fieldOptions.preventPasteFields && formEl.querySelectorAll( fieldOptions.preventPasteFields ).length ){\n            // INIT EVENT LISTENER FOR \"PASTE\" EVENT TO PREVENT IT ON SPECIFIED FIELDS\n            formEl.addEventListener('paste', self.listenerCallbacks.pastePrevent, false);\n        }\n\n        // INIT EVENTS LISTENER ( AS IN fieldOptions )\n        fieldOptions.validateOnEvents.split(' ').forEach(function( eventName ){\n            let useCapturing = (eventName === 'blur' ? true : false);\n            formEl.addEventListener(eventName, self.listenerCallbacks.validation, useCapturing);\n        });\n\n    }\n    \n    // HANDLE FORM SUBMIT\n    if( formOptions.handleSubmit ){\n        // INIT FORM SUBMIT ( DEFAULT AND AJAX )\n        formEl.addEventListener('submit', self.listenerCallbacks.submit);\n\n        if( formOptions.ajaxSubmit ){\n            if( formEl.getAttribute('enctype') ){\n\n                // FOR XMLHttpRequest API\n                formOptions.ajaxOptions.contentType = formEl.getAttribute('enctype');\n\n                // FOR fetch API\n                formOptions.ajaxOptions.headers['Content-Type'] = formEl.getAttribute('enctype');\n                \n            }\n\n            if( formEl.getAttribute('method') ){\n                formOptions.ajaxOptions.method = formEl.getAttribute('method').toUpperCase();\n            }\n\n            if( formEl.getAttribute('action') ){\n                formOptions.ajaxOptions.url = formEl.getAttribute('action');\n            }\n        }\n    }\n\n}\n","\nexport function destroy(){\n\n    const self = this,\n          formEl = self.formEl,\n          validationListenerNames = self.options.fieldOptions.validateOnEvents;\n\n    if( self.options.fieldOptions.strictHtmlValidation ){\n        formEl.removeEventListener('keypress', self.listenerCallbacks.keypressMaxlength, false);\n        formEl.removeEventListener('input', self.listenerCallbacks.dataTypeNumber, false);\n    }\n\n    if( self.options.fieldOptions.preventPasteFields ){\n        formEl.removeEventListener('paste', self.listenerCallbacks.pastePrevent, false);\n    }\n\n    if( self.options.formOptions.handleSubmit ){\n        formEl.removeEventListener('submit', self.listenerCallbacks.submit);\n    }\n\n    validationListenerNames.split(' ').forEach(function( eventName ){\n        let useCapturing = (eventName === 'blur' ? true : false);\n        formEl.removeEventListener(eventName, self.listenerCallbacks.validation, useCapturing);\n    });\n\n    delete self.formEl.formjs;\n    \n}\n","\nexport function getFormData(){\n\n    let self = this,\n        formEl = self.formEl,\n        formFieldsEl = formEl.querySelectorAll('input, select, textarea'),\n        excludeSelectors = ':not([type=\"reset\"]):not([type=\"submit\"]):not([type=\"button\"]):not([type=\"file\"]):not([data-exclude-data])',\n        filteredFields = Array.from(formFieldsEl).filter(elem => elem.matches(excludeSelectors) );\n    \n    return self.options.formOptions.getFormData.call( self, filteredFields );\n    \n}\n","\nimport { fieldsStringSelector, isFieldForChangeEvent } from './helper.js';\n\nexport const init = function(){\n\n    const self = this,\n          formEl = self.formEl,\n          formFields = formEl.querySelectorAll( fieldsStringSelector );\n\n    let currentFieldName = '',\n        currentFieldType = '';\n\n    Array.from( formFields ).forEach(function( fieldEl ){\n        const   name = fieldEl.name,\n                type = fieldEl.type;\n        \n        // AVOID REPEATING VALIDATION IF THE FIELD HAS THE SAME NAME OF THE PREVIOUS ONE\n        if( (name === currentFieldName && type === currentFieldType) ){ return true; }\n\n        const isCheckboxOrRadio = (fieldEl.type === 'checkbox' || fieldEl.type === 'radio'),\n              isFieldForChangeEventBoolean = isFieldForChangeEvent(fieldEl),\n              fieldChecked = formEl.querySelector('[name=\"' + fieldEl.name + '\"]:checked'),\n              isReqFrom = fieldEl.matches('[data-required-from]'),\n              reqMoreEl = (isReqFrom ? formEl.querySelector(fieldEl.getAttribute('data-required-from')) : null);\n\n        if( !isReqFrom ){\n            currentFieldName = name;\n            currentFieldType = type;\n        }\n\n        if( fieldChecked ){\n            fieldEl = fieldChecked;\n        }\n        \n        // VALIDATE FIELD ( BY TRIGGERING THE validation CALLBACK ) IF IT ALREADY HAS A VALUE\n        if(\n            (!isCheckboxOrRadio && fieldEl.value) || \n            (isCheckboxOrRadio && fieldChecked !== null) ||\n            (isReqFrom && reqMoreEl.checked)\n        ){\n\n            let fakeEventObj = { target: fieldEl, type: (isFieldForChangeEventBoolean ? 'change': '') };\n            self.listenerCallbacks.validation.call( self, fakeEventObj );\n\n        }\n    });\n\n    self.isInitialized = true;\n\n    return self;\n\n}\n","\nimport { executeCallback, mergeObjects } from './helper.js';\nimport { isValidField } from './isValidField.js';\n\nexport function validateField( fieldElem, fieldOptionsObj = {} ){\n\n    const self = this,\n          fieldEl = (typeof fieldElem === 'string' ? self.formEl.querySelector(fieldElem) : fieldElem),\n          fieldOptions = mergeObjects({}, self.options.fieldOptions, fieldOptionsObj);\n\n    return new Promise(function(resolve){\n\n        const prom = isValidField.call( self, fieldEl, fieldOptionsObj );\n        resolve( prom );\n\n    }).then(obj => {\n\n        if( obj.fieldEl ){\n            executeCallback.call( self, fieldOptions.onValidation, [obj], {fieldOptions: fieldOptionsObj} );\n        }\n        return obj;\n        \n    });\n    \n}\n","\nimport { addClass, isNodeList, removeClass } from './helper.js';\n\nexport function checkDirtyField( fields, cssClasses = this.options.fieldOptions.cssClasses.dirty ){\n\n    var fields = (isNodeList(fields) ? Array.from( fields ) : [fields]);\n    \n    fields.forEach(function(fieldEl){\n        if( fieldEl.type !== 'checkbox' && fieldEl.type !== 'radio' ){\n            let containerEl = fieldEl.closest('[data-formjs-question]') || fieldEl;\n\n            if( fieldEl.value ){\n                \n                addClass( containerEl, cssClasses );\n                \n            } else {\n                \n                removeClass( containerEl, cssClasses );\n                \n            }\n        }\n    });\n    \n}\n","\nimport { mergeObjects, toCamelCase } from './helper.js';\nimport { validationRulesAttributes } from './validationRules.js';\n\nexport function isValid( fieldEl, fieldOptions = {} ){\n\n    const self = this,\n          fieldType = ( fieldEl.matches('[data-subtype]') ? toCamelCase( fieldEl.getAttribute('data-subtype') ) : fieldEl.type ),\n          fieldValue = fieldEl.value,\n          isValidValue = fieldValue.trim().length > 0,\n          // ALPHABETICAL REVERSE ORDER\n          fieldAttributes = Array.from(fieldEl.attributes).sort(function(a,b){ return a.name < b.name });\n\n    let attrValidations = [],\n        attrValidationsResult = isValidValue,\n        obj = { result: isValidValue };\n\n    if( !obj.result ){\n        obj.errors = { empty: true };\n        return Promise.resolve(obj);\n    }\n\n    // COLLECT SPECIFIC VALIDATIONS FOR validationRulesAttributes\n    fieldAttributes.forEach(function(attr){\n        // FOR data-* ATTRIBUTES -> REMOVE \"data-\" AND TRANSFORM TO CAMELCASE\n        let attrName = toCamelCase( attr.name.replace('data-', '') ),\n            attrValue = attr.value,\n            isAttrValueWithFn = attrName === 'type' && typeof validationRulesAttributes[attrValue] === 'function',\n            isAttrNameWithFn = typeof validationRulesAttributes[attrName] === 'function';\n\n        if( isAttrValueWithFn || isAttrNameWithFn ){\n\n            let extraValObj = {\n                    attrName: (isAttrValueWithFn ? attrValue : attrName),\n                    attrValue: attrValue,\n                    fieldEl,\n                    fieldOptions\n                };\n\n            if( isAttrValueWithFn || attrName === 'requiredFrom' ){\n                // THESE VALIDATIONS MUST RUN BEFORE ALL OTHERS\n                attrValidations.unshift( extraValObj );\n            } else {\n                attrValidations.push( extraValObj );\n            }\n\n        }\n    });\n\n    // RUN SPECIFIC VALIDATIONS FOR validationRulesAttributes\n    attrValidations.forEach(function(item){\n        let extraVal = validationRulesAttributes[item.attrName]( item );\n        if( !extraVal.result ){\n            obj = mergeObjects({}, obj, extraVal);\n            attrValidationsResult = false;\n        }\n    });\n\n    return new Promise(function(resolve){\n\n        // RUN VALIDATIONS FOR validationRules\n        if( typeof self.validationRules[fieldType] === 'function' ){\n            resolve( self.validationRules[fieldType](fieldValue, fieldEl) );\n        } else {\n            resolve( obj );\n        }\n\n    }).then(data => {\n\n        obj = mergeObjects( {}, obj, data );\n        obj.result = obj.result && attrValidationsResult;\n        if( !obj.result ){\n            let fieldErrors = (typeof self.validationErrors[fieldType] === 'function' ? self.validationErrors[fieldType](fieldValue, fieldEl) : {});\n            if( typeof obj.errors === 'undefined' ){\n                obj.errors = {};\n            }\n            obj.errors.rule = true;\n            obj.errors = mergeObjects({}, obj.errors, fieldErrors);\n        }\n        return obj;\n\n    });\n\n}\n","\nimport { executeCallback, mergeObjects } from './helper.js';\nimport { isValidForm } from './isValidForm.js';\n\nexport function validateForm( fieldOptionsObj = {} ){\n\n    const self = this,\n          fieldOptions = mergeObjects({}, self.options.fieldOptions, fieldOptionsObj);\n\n    return new Promise(function(resolve){\n\n        const prom = isValidForm.call( self, fieldOptionsObj );\n        resolve(prom);\n\n    }).then(obj => {\n\n        executeCallback.call( self, fieldOptions.onValidation, obj.fields, {fieldOptions: fieldOptionsObj} );\n        return obj;\n\n    });\n    \n}\n","\nimport { fieldsStringSelector, mergeObjects, validateFormObjDefault } from './helper.js';\nimport { isValidField } from './isValidField.js';\n\nexport function isValidForm( fieldOptionsObj = {} ){\n\n    const self = this,\n          formEl = self.formEl,\n          obj = mergeObjects({}, validateFormObjDefault),\n          fieldOptions = mergeObjects( {}, fieldOptionsObj, {focusOnRelated: false} );\n\n    let currentFieldName = '',\n        currentFieldType = '';\n\n    const fieldsList = Array.from( formEl.querySelectorAll(fieldsStringSelector) ).filter(fieldEl => {\n        let name = fieldEl.name,\n            type = fieldEl.type;\n\n        if( name === currentFieldName && type === currentFieldType ){\n            return false;\n        }\n\n        if( !fieldEl.matches('[data-required-from]') ){\n            currentFieldName = name;\n            currentFieldType = type;\n        }\n\n        return true;\n    });\n\n    return Promise.all( fieldsList.map(function( fieldEl ){\n        \n        return isValidField.call( self, fieldEl, fieldOptions );\n\n    }) ).then(list => {\n\n        let areAllFieldsValid = list.filter(fieldObj => !fieldObj.result).length === 0;\n        obj.result = areAllFieldsValid;\n        obj.fields = list;\n\n        return obj;\n\n    });\n\n}\n"],"sourceRoot":""}