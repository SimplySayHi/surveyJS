{"version":3,"sources":["webpack://Survey/webpack/universalModuleDefinition","webpack://Survey/webpack/bootstrap","webpack://Survey/external \"Form\"","webpack://Survey/./src/modules/helpers.js","webpack://Survey/./src/modules/utils/getQuestionObject.js","webpack://Survey/./src/modules/optionsUtils.js","webpack://Survey/./src/modules/options.js","webpack://Survey/./src/modules/internals.js","webpack://Survey/./src/modules/webStorage.js","webpack://Survey/./src/modules/utils/getAnswerIndexInLocalStorage.js","webpack://Survey/./src/modules/listenerCallbacks.js","webpack://Survey/./src/modules/constructor.js","webpack://Survey/./src/modules/buildSurvey/generateQAcodeUtils/fieldsHTML/generateOptionTags.js","webpack://Survey/./src/modules/buildSurvey/generateQAcodeUtils/fieldsHTML/attribute.js","webpack://Survey/./src/modules/buildSurvey/generateQAcodeUtils/generateFieldHTML.js","webpack://Survey/./src/modules/buildSurvey/generateQAcodeUtils/fieldsHTML/input.js","webpack://Survey/./src/modules/buildSurvey/generateQAcodeUtils/fieldsHTML/nested.js","webpack://Survey/./src/modules/buildSurvey/generateQAcodeUtils/fieldsHTML/select.js","webpack://Survey/./src/modules/buildSurvey/generateQAcodeUtils/fieldsHTML/textarea.js","webpack://Survey/./src/modules/buildSurvey/generateQAcodeUtils/replaceTemplateStrings.js","webpack://Survey/./src/modules/buildSurvey/generateQAcodeUtils/iterateAnswers.js","webpack://Survey/./src/modules/buildSurvey/generateQAcode.js","webpack://Survey/./src/modules/buildSurvey/populateAnswers.js","webpack://Survey/./src/modules/buildSurvey/buildSurvey.js","webpack://Survey/./src/modules/retrieveSurvey.js","webpack://Survey/./src/modules/destroy.js","webpack://Survey/./src/index.js","webpack://Survey/./src/modules/messages.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE__0__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","fieldsStringSelectorSurvey","checkFormEl","formEl","isString","isFormSelector","isDOMNode","document","querySelector","tagName","toLowerCase","result","element","node","Element","isPrototypeOf","isEmptyObject","isPlainObject","getOwnPropertyNames","length","isNodeList","nodeList","NodeList","toString","mergeObjects","out","arguments","obj","isArray","isObject","concat","slice","Array","push","getQuestionObject","questionId","questions","data","qLength","q","question","id","defaultCallbacksInOptions","formOptions","beforeSend","surveyjs","surveyContEl","closest","formInstance","internals","fieldsList","from","querySelectorAll","fieldNameCheck","fieldTypeCheck","forEach","fieldEl","type","matches","questionIdEl","getAttribute","questionObj","required","isRequiredFrom","reqMoreEl","checked","fieldOptions","options","focusOnRelated","Promise","resolve","validateForm","then","formRes","stopExecution","getFormData","survey","answers","fieldValue","qaObj","answer","id_answer","text","elem","attributes","trim","el","onSubmitSuccess","self","useLocalStorage","localStorage","removeItem","localStorageName","cssClasses","checkbox","default","file","label","radio","select","textarea","fieldErrorFeedback","validateOnEvents","initAjaxOptions","cache","credentials","headers","method","redirect","timeout","lang","templates","fieldError","input","inputGroup","inputTag","labelTag","selectTag","isAvailable","isAvailableStorage","mod","setItem","e","checkLocalStorage","Storage","setObject","JSON","stringify","getObject","getItem","parse","localStorageArray","location","href","progIds","getAnswerIndexInLocalStorage","fieldName","multiChoiceValue","lsSurvey","lsSurveyLength","ls","lsItem","field","callbackFns","validation","event","eventName","target","containerEl","isMultiChoice","isRequireMore","itemEl","split","isFieldForChangeEventBoolean","isFieldForChangeEvent","inArrayPos","inArrayRequireMorePos","splice","oldFieldNamePos","elReqFromEl","constructorFn","optionsObj","argsL","checkFormElem","Error","url","langValue","messages","indexOf","replace","listenerCallbacks","freeze","generateOptionTags","optionsList","optionsHtml","selectFirstOption","opt","generateFieldHTML","attribute","objData","aHtml","attr","attributeIsArray","relatedAnswerField","fieldClass","beforeCode","afterCode","answerType","nestedAnswer","nested","labelForNested","answerCode","answerPlaceholder","placeholder","textareaPlaceholder","replaceTemplateStrings","fieldData","relatedAnswerKeys","answerIdValue","attrRequired","addMoreName","attrRequiredFrom","reKey","regexStrRe","RegExp","regexStr","iterateAnswers","qID","qIdx","attrReq","list","listL","aLoopHtml","needsBinding","sort","a","b","aNum","qNum","aType","aId","progIdsLength","progIdsJoined","join","labelTagCode","answerId","answerIndex","answerName","answerMaxlength","maxlength","answerString","getSettingsFieldClass","questionNumber","attrChecks","checks","attrSubtype","subtype","validateIfFilled","boundedFieldEl","fieldProps","setAttribute","textContent","surveyFieldType","pop","generateQAcode","questionsList","qaData","qaCodeAll","qaDataLength","item","maxChoice","checksMin","checksMax","qaHtml","bindAnswerEl","maxChoiceText","message","fieldErrorMessageMultiChoice","fieldErrorMessage","populateAnswers","LS","fieldFirst","isRadioOrCheckbox","console","warn","buildSurvey","formName","checkData","title","description","HTMLstring","parentNode","tmpEl","qaHtmlAll","createElement","innerHTML","childNodes","appendChild","useCapturing","addEventListener","formJSoptions","Form","init","isInitialized","classList","add","retrieveSurvey","insertAdjacentHTML","loadingBox","timeoutTimer","Headers","controller","AbortController","signal","window","setTimeout","abort","fetch","response","ok","reject","fetchMethod","accept","contentType","headerOpt","getFetchMethod","error","clearTimeout","ajaxCall","status","loadingBoxEl","removeChild","destroy","formjs","removeEventListener","Survey","langString","langObject","it","en","version"],"mappings":"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","file":"surveyjs.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"Form\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"Form\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Survey\"] = factory(require(\"Form\"));\n\telse\n\t\troot[\"Survey\"] = factory(root[\"Form\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__0__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","\nexport const\n\nfieldsStringSelectorSurvey = '[data-surveyjs-form] input:not([type=\"reset\"]):not([type=\"submit\"]):not([type=\"button\"]), [data-surveyjs-form] select, [data-surveyjs-form] textarea, [data-name=\"bind-surveyjs-answer\"]',\n\najaxCall = ( url = location.href, options = {} ) => {\n    let timeoutTimer;\n\n    options.headers = new Headers( options.headers );\n\n    /* SET AbortController FOR timeout */\n    if ( options.timeout > 0 ) {\n        const controller = new AbortController();\n        const signal = controller.signal;\n\n        options.signal = signal;\n\n        timeoutTimer = window.setTimeout(function() {\n            controller.abort();\n        }, options.timeout);\n    }\n\n    return fetch( url, options )\n        .then(response => {\n\n            if( !response.ok ){\n                return Promise.reject(response);\n            }\n\n            let getFetchMethod = function( response ){\n                const accept = options.headers.get('Accept');\n                const contentType = response.headers.get('Content-Type');\n                const headerOpt = accept || contentType || '';\n\n                if( headerOpt.indexOf('application/json') > -1 || headerOpt === '' ){\n                    return 'json';\n                } else if( headerOpt.indexOf('text/') > -1 ){\n                    return 'text';\n                } else {\n                    return 'blob';\n                }\n            };\n            let fetchMethod = getFetchMethod( response );\n\n            return response[fetchMethod]();\n\n        })\n        .catch(error => {\n            return Promise.reject(error);\n        })\n        .finally(function(){\n\n            if( timeoutTimer ){\n                window.clearTimeout( timeoutTimer );\n            }\n\n        });\n},\n\nappendDomStringToNode = ( HTMLstring, parentNode ) => {\n\n    const tmpEl = document.createElement('div');\n    tmpEl.innerHTML = HTMLstring;\n    Array.from( tmpEl.childNodes ).forEach((elem) => {\n        parentNode.appendChild( elem );\n    });\n\n},\n\ncheckFormEl = ( formEl ) => {\n    let isString = typeof formEl,\n        isValidNodeSelector = isString === 'string' && isDOMNode(document.querySelector(formEl)),\n        isFormSelector = isValidNodeSelector && document.querySelector(formEl).tagName.toLowerCase() === 'form',\n        obj = {\n            result: isDOMNode(formEl) || isFormSelector,\n            element: (isString === 'string' ? document.querySelector(formEl) : formEl)\n        };\n\n    return obj;\n},\n\nconcatFieldsLists = function () {\n    return Array.from(arguments).reduce((argAcc, list) => {\n        return list.reduce((listAcc, elem) => {\n            if( listAcc.indexOf(elem) === -1 ){\n                listAcc.push(elem);\n            }\n            return listAcc;\n        }, argAcc);\n    }, []);\n},\n\nisDOMNode = ( node ) => {\n    return Element.prototype.isPrototypeOf( node );\n},\n\nisEmptyObject = ( object ) => {\n    return isPlainObject(object) && Object.getOwnPropertyNames(object).length === 0;\n},\n\nisFieldForChangeEvent = ( fieldEl ) => {\n    return fieldEl.matches('select, [type=\"radio\"], [type=\"checkbox\"], [type=\"file\"]');\n},\n\nisNodeList = ( nodeList ) => {\n    return NodeList.prototype.isPrototypeOf( nodeList );\n},\n\nisPlainObject = ( object ) => {\n    return Object.prototype.toString.call( object ) === '[object Object]';\n},\n\nmergeObjects = function( out = {} ){\n    for(let i=1; i<arguments.length; i++){\n        let obj = arguments[i];\n\n        if(!obj){ continue; }\n\n        for(let key in obj){\n            let isArray = Object.prototype.toString.call(obj[key]) === \"[object Array]\";\n            let isObject = Object.prototype.toString.call(obj[key]) === \"[object Object]\";\n\n            // COPY ONLY ENUMERABLE PROPERTIES\n            if( obj.hasOwnProperty(key) ){\n                if( isArray ){\n\n                    if( typeof out[key] === 'undefined' ){\n                        out[key] = [];\n                    }\n                    out[key] = out[key].concat( obj[key].slice(0) );\n\n                } else if( isObject ){\n\n                    out[key] = mergeObjects(out[key], obj[key]);\n\n                } else {\n\n                    // * STRING | NUMBER | BOOLEAN | FUNCTION\n                    if( Array.isArray(out[key]) ){\n                        // IF THIS IS ONE OF ABOVE (*) AND THE DESTINATION OBJECT IS AN ARRAY\n                        out[key].push(obj[key]);\n                    } else {\n                        out[key] = obj[key];\n                    }\n\n                }\n            }\n        }\n    }\n\n    return out;\n}\n","\nexport function getQuestionObject( questionId ){\n\n    const self = this,\n          questions = self.data.questions,\n          qLength = questions.length;\n\n    let obj = {};\n    \n    for(let q=0; q<qLength; q++){\n        let question = questions[q];\n        if( question.id == questionId ){\n            obj = question;\n            break;\n        }\n    }\n\n    return obj;\n\n}","\nimport { fieldsStringSelectorSurvey, isEmptyObject, mergeObjects } from './helpers';\nimport { getQuestionObject } from './utils/getQuestionObject';\n\nexport const defaultCallbacksInOptions = {\n    formOptions: {\n\n        beforeSend: function beforeSend_surveyDefault( data ){\n            const surveyjs = this.formEl.surveyjs;\n            const surveyContEl = this.formEl.closest('[data-surveyjs-container]');\n            const formInstance = surveyjs.internals.formInstance;\n            const fieldsList = Array.from( surveyContEl.querySelectorAll(fieldsStringSelectorSurvey) );\n\n            let fieldNameCheck = '',\n                fieldTypeCheck = '';\n\n            fieldsList.forEach(function( fieldEl ){\n                \n                const type = fieldEl.type,\n                      name = fieldEl.name;\n\n                // IF A FIELD HAS THE SAME NAME ATTRIBUTE AND IT IS OF THE SAME TYPE\n                // SKIP THE REST OF THE CODE FOR THIS FIELD AND GO TO THE NEXT\n                if( (name === fieldNameCheck && type === fieldTypeCheck) ){ return; }\n                \n                if( !fieldEl.matches('[data-required-from]') ){\n                    fieldNameCheck = name;\n                    fieldTypeCheck = type;\n                }\n\n                const questionIdEl = fieldEl.closest('[data-question-id]');\n                const questionId = questionIdEl ? questionIdEl.getAttribute('data-question-id') : '';\n                const questionObj = getQuestionObject.call( surveyjs, questionId );\n\n                // BASED ON SURVEY JSON FILE, FORCE REQUIRED FIELDS TO BE VALIDATED\n                // THIS AVOIDS USERS TO HACK THE SURVEY, FOR EXAMPLE REMOVING required ATTRIBUTE FROM THE HTML\n                if( questionId !== '' && questionObj && typeof questionObj.required !== 'undefined' ){\n\n                    const isRequiredFrom = fieldEl.matches('[data-required-from]');\n                    const reqMoreEl = document.querySelector(fieldEl.getAttribute('data-required-from'));\n                    if( !isRequiredFrom || ( isRequiredFrom && reqMoreEl.checked ) ){\n                        fieldEl.required = true;\n                    }\n                    \n                }\n\n            });\n\n            const fieldOptions = mergeObjects({}, surveyjs.options.fieldOptions, {focusOnRelated: false});\n            return new Promise(resolve => {\n                formInstance.validateForm( fieldOptions ).then(formRes => {\n                    if( !formRes.result ){\n                        data.stopExecution = true;\n                    }\n                    resolve( data );\n                });\n            });\n        },\n\n        getFormData: function getFormData_surveyDefault(){\n            const formEl = this.formEl;\n            const survey = formEl.surveyjs;\n            const fieldsList = Array.from( formEl.closest('[data-surveyjs-container]').querySelectorAll(fieldsStringSelectorSurvey) );\n            let obj = {\n                    answers: [],\n                    id: survey.data.id\n                },\n                fieldNameCheck = '',\n                fieldTypeCheck = '';\n\n            fieldsList.forEach(fieldEl => {\n                const type = fieldEl.type,\n                      name = fieldEl.name;\n\n                // IF A FIELD HAS THE SAME NAME ATTRIBUTE AND IT IS OF THE SAME TYPE\n                // SKIP THE REST OF THE CODE FOR THIS FIELD AND GO TO THE NEXT\n                if( (name === fieldNameCheck && type === fieldTypeCheck) ){ return; }\n                \n                if( !fieldEl.matches('[data-required-from]') ){\n                    fieldNameCheck = name;\n                    fieldTypeCheck = type;\n                }\n\n                // EACH QUESTION HAS ITS OWN OBJECT ( qaObj ) THAT CONTAINS THE RELATED DATA:\n                // question:    THE QUESTION ID ( undefined FOR QUESTIONS WITH ATTRIBUTE data-required-form - will be skipped later )\n                // answer       AN OBJECT THAT CONTAINS THE FOLLOWS:\n                //                  id_answer:      THE ANSWER ID\n                //                  text:           IF THE FIELD IS A TEXTAREA\n                //                  attributes:     IF THE ANSWER IS NESTED OR IS REQUIRED FROM ANOTHER ANSWER (SEE BELOW)\n                var questionIdEl = fieldEl.closest('[data-question-id]'),\n                    questionId = questionIdEl ? questionIdEl.getAttribute('data-question-id') : '',\n                    fieldValue = fieldEl.value,\n                    qaObj = {\n                        question: questionId,\n                        answer: {\n                            id_answer: [ fieldValue ]\n                        }\n                    };\n\n                // A FIELD WITH ATTRIBUTE 'data-required-from' IS MANAGED TOGETHER WITH ITS RELATED FIELD ( WHICH HAS ATTRIBUTE 'data-require-more' )\n                // IF QUESTION ID IS EMPTY -> SKIP THE FIELD ( USEFUL FOR FORM FIELDS OUTSIDE THE SURVEY BODY )\n                if( fieldEl.matches('[data-required-from]') || questionId === '' || isEmptyObject(getQuestionObject.call( survey, questionId )) ){ return; }\n                                    \n                if( fieldEl.matches('textarea') ){\n                    qaObj.answer.id_answer = [ '' ];\n                    qaObj.answer.text = fieldValue;\n                }\n\n                if( type === 'radio' ){\n                    var containerEl = (fieldEl.closest('form') ? formEl : fieldEl.closest('[data-formjs-question]') ),\n                        elem = containerEl.querySelector('[name=\"'+ name +'\"]:checked');\n                    \n                    if( elem ){\n                        // FOR RADIO THAT REQUIRE THE USER TO GIVE ONE MORE ANSWER\n                        if( elem.matches('[data-require-more]') ){\n                            qaObj.answer.attributes = formEl.querySelector('[data-required-from=\"#'+ elem.id +'\"]').value.trim();\n                        }\n                        \n                        if( elem.matches('[data-nested-index]') ){\n                            qaObj.answer.attributes = elem.getAttribute('data-nested-index');\n                        }\n                        \n                        qaObj.answer.id_answer = [ elem.value.trim() ];\n                    } else {\n                        qaObj.answer.id_answer = [ '' ];\n                    }\n                }\n\n                if( type === 'checkbox' && fieldEl.matches('[data-checks]') ){\n                    qaObj.answer.id_answer = [];\n                    Array.from(formEl.querySelectorAll('[name=\"'+ name +'\"]:checked')).forEach(el => {\n                        qaObj.answer.id_answer.push( el.value.trim() );\n                    });\n                }\n                \n                obj.answers.push( qaObj );\n            });\n        \n            return obj;\n        },\n\n        onSubmitSuccess: function onSubmitSuccess_surveyDefault(){\n            // REMOVE SURVEY LOCAL STORAGE\n            const survey = this.formEl.surveyjs;\n            if( self.options.useLocalStorage ){\n                localStorage.removeItem( survey.internals.localStorageName );\n            }\n        }\n    \n    }\n}\n","\nimport { defaultCallbacksInOptions } from './optionsUtils';\n\nexport const options = {\n    cssClasses: {\n        checkbox:           'form-check-input',\n        default:            'form-control',\n        file:               'form-control-file',\n        label:              'form-check-label',\n        radio:              'form-check-input',\n        select:             'form-control',\n        textarea:           'form-control'\n    },\n    fieldErrorFeedback:     true,\n    fieldOptions: {\n        validateOnEvents:   'input change'\n    },\n    formOptions: {\n        beforeSend:         [defaultCallbacksInOptions.formOptions.beforeSend],\n        getFormData:        defaultCallbacksInOptions.formOptions.getFormData,\n        onSubmitSuccess:    [defaultCallbacksInOptions.formOptions.onSubmitSuccess]\n    },\n    initAjaxOptions:        {\n        cache:              'no-store',\n        credentials:        'same-origin',\n        headers: {\n                            'Content-Type': 'application/json',\n                            'Accept':       'application/json'\n        },\n        method:             'GET',\n        mode:               'same-origin',\n        redirect:           'follow',\n        timeout:            0\n    },\n    lang:                   'en',\n    templates: {\n        fieldError: '<div class=\"surveyjs-field-error-message\">{{fieldErrorMessage}}</div>',\n\n        input:      '<div class=\"surveyjs-single-answer surveyjs-input-container surveyjs-answer-{{answerType}} form-check\" data-answer-index=\"{{answerIndex}}\">'+\n                        '{{inputTagCode}}'+\n                        '{{labelTagCode}}'+\n                    '</div>',\n\n        inputGroup: '<div class=\"surveyjs-single-answer input-group\" data-answer-index=\"{{answerIndex}}\">'+\n                        '<div class=\"input-group-prepend\">'+\n                            '<div class=\"input-group-text form-check surveyjs-answer-{{answerType}}\">'+\n                                '<input type=\"{{answerType}}\" name=\"surveyjs-answer-{{questionNumber}}\" id=\"{{answerCode}}\" data-answer-id=\"{{answerId}}\" value=\"{{answerIdValue}}\" {{attrRequired}} data-require-more=\"\" class=\"surveyjs-input surveyjs-radio form-check-input\" />'+\n                                '<label for=\"{{answerCode}}\" class=\"surveyjs-label form-check-label\">{{answerString}}</label>'+\n                            '</div>'+\n                        '</div>'+\n                        '{{relatedAnswerField}}'+\n                    '</div>',\n        \n        inputTag:   '<input type=\"{{answerType}}\" {{attrSubtype}} name=\"surveyjs-answer-{{questionNumber}}{{addMoreName}}\" class=\"surveyjs-input surveyjs-{{answerType}} {{fieldClass}}\" id=\"{{answerCode}}\" {{nestedAnswer}} data-answer-root=\"{{progIdsJoined}}\" data-answer-id=\"{{answerId}}\" value=\"{{answerIdValue}}\" {{attrRequired}} {{validateIfFilled}} {{attrChecks}} {{attrRequiredFrom}} />',\n\n        labelTag:   '<label for=\"{{answerCode}}\" class=\"surveyjs-label {{labelClass}}\">{{answerString}}</label>',\n\n        question:   '<div data-question-id=\"{{questionId}}\" data-question-index=\"{{questionNumber}}\" data-formjs-question class=\"surveyjs-question-box clearfix\">'+\n                        '<div class=\"surveyjs-question-header\">Question {{questionNumber}}</div>'+\n                        '<div class=\"surveyjs-question-body\">'+\n                            '<div class=\"surveyjs-question-text\">{{questionText}}</div>'+\n                            '<div class=\"surveyjs-answers-box form-group clearfix\">'+\n                                '{{answersHtml}}'+\n                                '{{fieldErrorTemplate}}'+\n                            '</div>'+\n                        '</div>'+\n                    '</div>',\n\n        select:     '<div class=\"surveyjs-single-answer surveyjs-answer-select\" data-answer-index=\"{{answerIndex}}\">'+\n                        '{{selectTagCode}}'+\n                    '</div>',\n\n        selectTag:  '<select id=\"{{answerCode}}\" name=\"surveyjs-answer-{{questionNumber}}{{addMoreName}}\" class=\"surveyjs-select {{fieldClass}}\" {{attrRequired}} {{nestedAnswer}} data-answer-root=\"{{progIdsJoined}}\" {{attrRequiredFrom}}>'+\n                        '{{optionsHtml}}'+\n                    '</select>',\n\n        textarea:   '<div class=\"surveyjs-single-answer surveyjs-answer-textarea\">'+\n                        '<textarea id=\"{{answerCode}}\" data-answer-id=\"{{answerId}}\" {{nestedAnswer}} name=\"surveyjs-answer-{{questionNumber}}\" {{attrRequired}} class=\"surveyjs-textarea {{fieldClass}}\" {{answerMaxlength}} rows=\"6\" placeholder=\"{{answerPlaceholder}}\"></textarea>'+\n                    '</div>'\n    },\n    useLocalStorage:        true\n}\n","\nimport { webStorage } from './webStorage';\n\nexport const internals = {\n    formInstance: null,\n    isAvailableStorage: webStorage().isAvailable,\n    localStorageArray: [],\n    localStorageName: 'Survey_' + location.href + '_{{surveyFormName}}_surveyId[{{surveyId}}]',\n    progIds: []\n}\n","\nexport function webStorage(){\n\n        const checkLocalStorage = () => {\n            var mod = 'check_storage';\n            try {\n                localStorage.setItem(mod, mod);\n                localStorage.removeItem(mod);\n                return true;\n            } catch(e) {\n                return false;\n            }\n        };\n\n        const isAvailable = checkLocalStorage();\n\n        if( isAvailable ){\n            // setObject METHOD FOR HTML STORAGE -> EG: localStorage.setObject( name, JSobj )\n            // TO STORE A JS OBJECT ( AS JSON STRING ) INSIDE THE STORAGE\n            Storage.prototype.setObject = function( key, value ) {\n                this.setItem( key, JSON.stringify(value) );\n            }\n\n            // getObject METHOD FOR HTML STORAGE -> EG: localStorage.getObject( name )\n            // RETURN THE DATA ( STORED AS JSON STRING ) AS JS OBJECT\n            Storage.prototype.getObject = function( key ) {\n                var value = this.getItem( key );\n                return value && JSON.parse( value );\n            }\n        }\n\n        return {\n            isAvailable: isAvailable\n        }\n\n}\n","\nexport function getAnswerIndexInLocalStorage( fieldName, multiChoiceValue = '' ){\n\n    const self = this\n    let lsSurvey = localStorage.getObject( self.internals.localStorageName );\n            \n    if( lsSurvey ){\n        let lsSurveyLength = lsSurvey.length;\n        \n        for(let ls=0; ls<lsSurveyLength; ls++){\n            let lsItem = lsSurvey[ls];\n            \n            if( lsItem.field === fieldName ){\n                if( multiChoiceValue ){\n                    if( lsItem.value !== multiChoiceValue ){\n                        continue;\n                    }\n                }\n                return ls;\n            }\n        }\n    }\n    \n    return -1;\n\n}","\nimport { isEmptyObject, isFieldForChangeEvent } from './helpers';\nimport { getAnswerIndexInLocalStorage }         from './utils/getAnswerIndexInLocalStorage';\nimport { getQuestionObject }                    from './utils/getQuestionObject';\n\nexport const callbackFns = {\n\n    // THIS WILL RUN BEFORE FORMJS VALIDATION FUNCTION SO THAT USERS CANNOT SKIP REQUIRED FIELDS VALIDATION ( WHILE TYPING )\n    validation: function( event ){\n\n        const self = this,\n              eventName = event.type,\n              fieldEl = event.target,\n              containerEl = fieldEl.closest('[data-formjs-question]'),\n              fieldValue = ( fieldEl.value ? fieldEl.value.trim() : fieldEl.value ),\n              isMultiChoice = fieldEl.matches('[data-checks]'),\n              isRequireMore = fieldEl.matches('[data-require-more]'),\n              isRequiredFrom = fieldEl.matches('[data-required-from]'),\n              reqMoreEl = ( isRequiredFrom ? containerEl.querySelector( fieldEl.getAttribute('data-required-from') ) : null );\n\n        // VARS USED TO VALIDATE THE FILED IF IT IS REQUIRED\n        const itemEl = ( isRequiredFrom ? reqMoreEl : fieldEl ),\n              questionId = (itemEl.id ? itemEl.id.split('-')[1] : 'id-not-found'),\n              isFieldForChangeEventBoolean = isFieldForChangeEvent(fieldEl),\n              questionObj = getQuestionObject.call( self, questionId );\n\n        // IF IT'S NOT A SURVEY QUESTION -> SKIP\n        if( isEmptyObject(questionObj) ){ return true; }\n\n        if(\n            (isFieldForChangeEventBoolean && eventName === 'change') ||\n            (!isFieldForChangeEventBoolean && eventName !== 'change')\n        ){\n            \n            // MANAGE ITEMS IN LOCAL STORAGE ( IF AVAILABLE AND USABLE )\n            if( self.options.useLocalStorage && !fieldEl.matches('[data-exclude-storage]') ){\n                const inArrayPos = getAnswerIndexInLocalStorage.call( self, fieldEl.name, (isMultiChoice ? fieldValue : false) ),\n                    inArrayRequireMorePos = getAnswerIndexInLocalStorage.call( self, fieldEl.name + '-more' );\n\n                let localStorageArray = self.internals.localStorageArray;\n\n                if( !isRequireMore && !isRequiredFrom && inArrayRequireMorePos !== -1 ){\n                    localStorageArray.splice(inArrayRequireMorePos, 1);\n                }\n\n                if( inArrayPos !== -1 ){\n                    if( isMultiChoice ){\n                        if( !fieldEl.checked && localStorageArray[inArrayPos].value === fieldValue ){\n                            // REMOVE ITEM FROM LS\n                            localStorageArray.splice(inArrayPos, 1);\n                        } else {\n                            // ADD ITEM TO LS\n                            localStorageArray.push( { field: fieldEl.name, value: fieldValue } );\n                        }\n                    } else {\n                        if( fieldValue !== '' ){\n                            localStorageArray[inArrayPos].value = fieldValue;\n                        } else {\n                            localStorageArray.splice(inArrayPos, 1); \n                        }\n                    }\n                } else {\n                    if( fieldValue !== '' ){\n                        if( isRequiredFrom && fieldValue !== '' ){\n                            const oldFieldNamePos = getAnswerIndexInLocalStorage.call( self, reqMoreEl.name );\n\n                            if( oldFieldNamePos !== -1 ){\n                                localStorageArray.splice(oldFieldNamePos, 1);\n                            }\n                            localStorageArray.push( { field: reqMoreEl.name, value: reqMoreEl.value.trim() } );\n                        }\n                        localStorageArray.push( { field: fieldEl.name, value: fieldValue } );\n                        if( isRequireMore ){\n                            const elReqFromEl = fieldEl.closest('form').querySelector( '[data-required-from=\"#' + fieldEl.id + '\"]' );\n                            localStorageArray.push( { field: elReqFromEl.name, value: elReqFromEl.value.trim() } );\n                        }\n                    }\n                }\n\n                localStorage.setObject( self.internals.localStorageName, localStorageArray );\n            }\n\n            // BASED ON JSON DATA, FORCE REQUIRED FIELDS TO BE VALIDATED\n            if( typeof questionObj.required !== 'undefined' ){\n                fieldEl.required = true;\n            }\n\n        }\n        \n    }\n\n}\n","\nimport { checkFormEl, isNodeList, mergeObjects } from './helpers';\nimport { internals } from './internals';\nimport { callbackFns } from './listenerCallbacks';\n\nexport function constructorFn( formEl, optionsObj = {} ){\n\n    let self = this,\n        argsL = arguments.length,\n        checkFormElem = checkFormEl(formEl);\n\n    if( argsL === 0 || (argsL > 0 && !formEl) ){\n        throw new Error('First argument \"formEl\" is missing or falsy!');\n    }\n    if( isNodeList(formEl) ){\n        throw new Error('First argument \"formEl\" must be a single DOM node or a form CSS selector, not a NodeList!');\n    }\n    if( !checkFormElem.result ){\n        throw new Error('First argument \"formEl\" is not a DOM node nor a form CSS selector!');\n    }\n\n    if( !optionsObj.url || typeof optionsObj.url !== 'string' ){\n        throw new Error('\"options.url\" is missing or not valid!');\n    }\n\n    self.formEl = checkFormElem.element;\n    self.formEl.surveyjs = self;\n\n    formEl = self.formEl;\n\n    // SET THE lang VALUE IN options ( MANDATORY FOR OTHER OPERATIONS )\n    if( typeof optionsObj.lang === 'string' ){\n        let langValue = optionsObj.lang.toLowerCase();\n        if( self.messages[ langValue ] ){\n            self.options.lang = langValue;\n        }\n    }\n    \n    // MERGE messages OF THE CHOSEN lang INSIDE options\n    self.options = mergeObjects( {}, self.options, self.messages[self.options.lang] );\n    // MERGE OPTIONS\n    self.options = mergeObjects( {}, self.options, optionsObj );\n\n    if( self.options.templates.input.indexOf('{{inputTagCode}}') !== -1 ){\n        self.options.templates.input = self.options.templates.input.replace( /{{inputTagCode}}/g, self.options.templates.inputTag );\n    }\n\n    self.options.templates.labelTag = self.options.templates.labelTag.replace(/{{labelClass}}/g, self.options.cssClasses.label);\n\n    // SET INTERNAL UTILS\n    self.internals = internals;\n\n    if( !self.internals.isAvailableStorage ){\n        self.options.useLocalStorage = false;\n    }\n\n    self.listenerCallbacks = {\n        validation: callbackFns.validation.bind(self)\n    };\n    Object.freeze(self.listenerCallbacks);\n    \n}\n","\nexport function generateOptionTags( optionsList = [] ){\n\n    const self = this;\n    let optionsHtml = ( optionsList[0].id === '' ? '' : '<option value=\"\">'+ self.options.selectFirstOption +'</option>' );\n\n    optionsList.forEach(opt => {\n        optionsHtml += '<option value=\"'+ opt.id +'\" data-answer-id=\"'+ opt.id +'\">'+ opt.answer +'</option>';\n    });\n\n    return optionsHtml;\n\n}","\nimport { generateOptionTags } from './generateOptionTags';\n\n// RELATED ANSWER\n// IF AN ANSWER REQUIRE TO FILL OR SELECT ANOTHER RELATED ANSWER\nexport const attribute = function( data ){\n\n    const self = this,\n          answer = data.answer,\n          objData = data.objData,\n          aHtml = self.options.templates.inputGroup,\n          attr = answer.attribute,\n          attributeIsArray = Array.isArray( attr );\n    \n    let relatedAnswerField = ( attributeIsArray ? self.options.templates.selectTag : self.options.templates.inputTag );\n    \n    objData.fieldClass = self.options.cssClasses.default;\n    \n    if( attributeIsArray ){\n        // CREATE A GROUP WITH A RADIO INPUT AND ITS RELATED ANSWER (A SELECT FIELD)\n        objData.fieldClass = self.options.cssClasses.select;\n        objData.optionsHtml = generateOptionTags.call( self, attr );\n    }\n\n    return { aHtml, relatedAnswerField, objData };\n}\n","\nimport { attribute }    from './fieldsHTML/attribute';\nimport { input }        from './fieldsHTML/input';\nimport { nested }       from './fieldsHTML/nested';\nimport { select }       from './fieldsHTML/select';\nimport { textarea }     from './fieldsHTML/textarea';\n\nexport const generateFieldHTML = {\n        attribute, input, nested, select, textarea\n}\n","\nexport const input = function( data ){\n\n    const self = this,\n          objData = data.objData;\n\n    let aHtml = data.beforeCode + self.options.templates.input + data.afterCode;\n\n    if( objData.answerType !== 'checkbox' && objData.answerType !== 'radio' ){\n        // EVERY INPUT FIELD THAT IS NOT A CHECKBOX OR RADIO ( TEXT, EMAIL, NUMBER, PASSWORD, RANGE AND SO ON... )\n        objData.nestedAnswer += ' class=\"' + objData.fieldClass + '\"';\n    }\n    \n    return { aHtml, objData };\n}\n","\n// NESTED ANSWER -> IT IS A CHILD ANSWER OF ITS PARENT\n// EXAMPLE:\n// IF 'WEBSITE' IS THE PARENT ANSWER\n// IT CAN HAVE THESE CHILDREN ANSWERS: PC - SMARTPHONE - TABLET\n// SO THE PARENT ANSWER IS PRINTED AS TEXT ( WITHOUT THE INPUT FIELD ) AND ITS nested ANSWERS WILL BE LOOPED\nexport const nested = function( data ){\n\n    const self = this,\n          answer = data.answer,\n          objData = data.objData;\n\n    let labelForNested = self.options.templates.labelTag;\n\n    labelForNested = labelForNested.replace(/{{answerCode}}/g, objData.answerCode);\n    labelForNested = labelForNested.replace(/{{labelClass}}/g, self.options.cssClasses.label + ' surveyjs-field-indent-0');\n    labelForNested = labelForNested.replace(/{{answerString}}/g, answer.answer);\n\n    let aLoopHtml = data.beforeCode + '<div class=\"surveyjs-'+ objData.answerType +'\">' + labelForNested + '</div>' + data.afterCode;\n\n    return { aHtml: aLoopHtml, objData };\n}\n","\nimport { generateOptionTags } from './generateOptionTags';\n\nexport const select = function( data ){\n\n    const self = this,\n          objData = data.objData;\n    \n    let aHtml = data.beforeCode + self.options.templates.select + data.afterCode;\n    \n    objData.optionsHtml = generateOptionTags.call( self, data.obj.answers );\n\n    return { aHtml, objData };\n}\n","\nexport const textarea = function( data ){\n\n    const self = this,\n          answer = data.answer,\n          objData = data.objData;\n\n    let aHtml = self.options.templates.textarea;\n\n    objData.answerPlaceholder = answer.placeholder || self.options.textareaPlaceholder;\n\n    return { aHtml, objData };\n}\n","\nexport function replaceTemplateStrings( fieldData, objData ){\n\n    const self = this;\n\n    if( objData.optionsHtml !== '' ){\n        fieldData.aHtml = fieldData.aHtml.replace( /{{selectTagCode}}/g, self.options.templates.selectTag );\n    }\n\n    if( fieldData.relatedAnswerField ){\n        let relatedAnswerKeys = {\n                answerCode: '', answerType: 'text', fieldClass: objData.fieldClass,\n                answerIdValue: '', attrRequired: '', addMoreName: '-more',\n                attrRequiredFrom: 'data-required-from=\"#'+ objData.answerCode +'\"'\n            };\n            \n        for(let reKey in relatedAnswerKeys){\n            let regexStrRe = new RegExp( '{{' + reKey + '}}', 'g' );\n            fieldData.relatedAnswerField = fieldData.relatedAnswerField.replace( regexStrRe, relatedAnswerKeys[reKey] );    \n        }\n        \n        fieldData.aHtml = fieldData.aHtml.replace( /{{relatedAnswerField}}/g, fieldData.relatedAnswerField );\n    } else {\n        fieldData.aHtml = fieldData.aHtml.replace( /{{addMoreName}}/g, '' );\n        fieldData.aHtml = fieldData.aHtml.replace( /{{attrRequiredFrom}}/g, '' );\n    }\n    \n    for( let key in objData ){\n        let regexStr = new RegExp( '{{' + key + '}}', 'g' );\n        fieldData.aHtml = fieldData.aHtml.replace( regexStr, objData[key] );\n    }\n\n    return fieldData.aHtml;\n\n}","\nimport { generateFieldHTML } from './generateFieldHTML';\nimport { replaceTemplateStrings } from './replaceTemplateStrings';\n\nexport function iterateAnswers( obj, qID, qIdx, attrReq ){\n\n    const self = this;\n    let progIds = self.internals.progIds;\n\n    // obj          MUST BE AN ARRAY OF STRINGS OR AN OBJECT THAT CONTAINS 'answers' AS ARRAY (THE FUNCTION iterateAnswers LOOPS UNTIL A STRING IS FOUND, AND PRINTS IT)\n    // qIdx         INDEX OF THE QUESTION\n    // attrReq      HTML REQUIRED ATTRIBUTE THAT WILL BE PRINTED (THIS PARAMETER MUST NOT BE PASSED INITIALLY. IT IS AUTOMATICALLY PASSED INSIDE THE LOOP IF NECESSARY)\n    // aLoopHtml    THE CODE OF ALL ANSWERS ( PRINTED ONLY AT THE END )\n    var list = ( Array.isArray( obj ) ? obj : obj.answers ),\n        listL = list.length,\n        qID = (obj.id ? obj.id : (qID ? qID : 0)),\n        i = qIdx || 0,\n        aLoopHtml = '',\n        needsBinding = (obj.question === 'hidden-privacy' ? true : false);\n\n    if( list[0]['sort'] ){\n        list.sort((a, b) => {\n            return a['sort'] > b['sort'];\n        });\n    }\n\n    for(let a=0; a<listL; a++){\n\n        let answer = list[a],\n            aNum = (a+1),\n            qNum = (i+1),\n            aType = answer.type,\n            aId = answer.id,\n            progIdsLength = progIds.length,\n            progIdsJoined = ( progIdsLength > 0 ? self.internals.progIds.join('-') : '' ),\n            getSettingsFieldClass = () => {\n                let aType = ( answer.type === 'option' ? 'select' : answer.type );\n                return self.options.cssClasses[aType] || self.options.cssClasses.default;\n            };\n\n        let fieldData = { aHtml: '' };\n        \n        // ALL THESE OBJECT KEYS WILL REPLACE {{key}} WITH objData.KEY IN HTML STRING\n        let objData = {\n            // answerId         ANSWER ID AS FROM THE JSON. THIS IS USED AS VALUE ATTRIBUTE OF THE ANSWER\n            // answerType       ANSWER TYPE AS FROM THE JSON. USED TO CHECK WHICH FIELD MUST BE CREATED ( EG: text, radio, checkbox, select, textarea )\n            // nestedAnswer     CREATES THE data-nested-index ATTRIBUTE TO PRINT IF AN ANSWER IS NESTED ( SEE BELOW FOR NESTED ANSWERS )\n            // answerCode       ID ATTRIBUTE OF THE ANSWER\n            //                  ( BUILT AS: \"answerType-questionID-answerID-questionNumber[-nestingLevels]-answerNumber\" )\n            //                  ONLY AN ATTRIBUTE-ANSWER DOES NOT USE THE answerCode\n                labelTagCode: (aType === 'checkbox' || aType === 'radio' ? self.options.templates.labelTag : ''),\n                answerId: aId,\n                answerIdValue: (aType === 'text' ? '' : aId),\n                answerIndex: aNum,\n                answerName: 'surveyjs-answer-'+qNum,\n                answerPlaceholder: '',\n                answerMaxlength: (answer.maxlength ? 'maxlength=\"' + answer.maxlength + '\"' : ''),\n                answerString: (typeof answer.answer === 'string' ? answer.answer : ''),\n                answerType: aType,\n                attrRequired: ( typeof obj.required !== 'undefined' ? 'required' : (typeof attrReq !== 'undefined' ? attrReq : '') ),\n                fieldClass: getSettingsFieldClass(),\n                nestedAnswer: ( progIdsJoined !== '' ? 'data-nested-index=\"'+ aNum +'\"' : '' ),\n                optionsHtml: '',\n                progIdsJoined: progIdsJoined,\n                questionNumber: qNum,\n                answerCode: (aType === 'option' ? 'select' : aType) +'-' + qID +'-'+ (aId || 0) + '-' + qNum + (progIdsJoined !== '' ? '-'+progIdsJoined : '') +'-'+ aNum,\n                attrChecks: (obj.checks ? 'data-checks=\"' + obj.checks + '\"' : ''),\n                attrSubtype: (answer.subtype ? 'data-subtype=\"' + answer.subtype + '\"' : ''),\n                validateIfFilled: (typeof obj.validateIfFilled !== 'undefined' ? 'data-validate-if-filled' : '')\n            };\n        \n        if( needsBinding ){\n            \n            let boundedFieldEl = self.formEl.closest('[data-surveyjs-container]').querySelectorAll('[data-name=\"bind-surveyjs-answer\"]')[a],\n                fieldProps = {\n                    id: objData.answerCode,\n                    name: objData.answerName,\n                    type: aType,\n                    value: objData.answerId\n                };\n            \n            if( typeof obj.required !== 'undefined' ){ fieldProps.required = true; }\n            \n            for(let key in fieldProps){\n                boundedFieldEl[key] = fieldProps[key];\n            }\n            boundedFieldEl.setAttribute('data-answer-id', objData.answerId);\n            boundedFieldEl.closest('div').querySelector('label').setAttribute('for', objData.answerCode);\n            boundedFieldEl.closest('div').querySelector('label span').textContent = answer.answer;\n            \n            continue;\n            \n        }\n        \n        if( typeof answer.answer === 'string' || typeof answer.answer === 'number' ){\n\n                // beforeCode       MANAGE FIELD INDENT ( FOR NESTED ANSWERS - SEE BELOW )\n                // afterCode        MANAGE FIELD INDENT ( FOR NESTED ANSWERS - SEE BELOW )\n                let surveyFieldType = ( answer.attribute ? 'attribute' : (answer.nested ? 'nested' : ( aType === 'option' ? 'select' : aType )) ),\n                    beforeCode = ( progIdsLength > 0 && a === 0 ? '<div class=\"surveyjs-field-indent\">' : '' ),\n                    afterCode = ( progIdsLength > 0 && a === listL - 1 ? '</div>' : '' ),\n                    data = { answer, objData, beforeCode, afterCode, obj };\n\n                if( typeof generateFieldHTML[surveyFieldType] === 'undefined' ){\n                    surveyFieldType = 'input';\n                }\n\n                // GENERATE FIELD HTML CODE FROM surveyFieldType\n                fieldData = generateFieldHTML[surveyFieldType].call( self, data );\n                \n                objData = fieldData.objData;\n\n                if( answer.nested ){\n                    self.internals.progIds.push( aNum );\n                    aLoopHtml += fieldData.aHtml;\n                    aLoopHtml += iterateAnswers.call( self, answer.nested, qID, i, objData.attrRequired );\n                    continue;\n                }\n\n                // IF LOOPING A NESTED ANSWER AND THE END OF THAT ARRAY IS REACHED\n                // REMOVE THE LAST ITEM OF progIds ( SO AT THE NEXT LOOP IT WILL NOT INDENT THE ANSWER )\n                if( progIdsLength > 0 && a === listL-1 ){ self.internals.progIds.pop(); }\n\n        }\n\n        fieldData.aHtml = replaceTemplateStrings.call(self, fieldData, objData);\n        aLoopHtml += fieldData.aHtml;\n        \n        if( aType === 'option' ){\n            a = a + obj.answers.length;\n        }\n        \n    }\n\n    return aLoopHtml;\n\n}\n","\nimport { iterateAnswers } from './generateQAcodeUtils/iterateAnswers';\n\nexport function generateQAcode( questionsList = [] ){\n\n    const self = this;\n    let qaData = ( questionsList[0]['sort'] ? questionsList.sort((a, b) => { return a['sort'] > b['sort']; }) : questionsList ),\n        qaCodeAll = '',\n        qaDataLength = qaData.length;\n    \n    for(let i=0; i<qaDataLength; i++){\n        let item = qaData[i],\n            maxChoice = (item.checks ? JSON.parse(item.checks) : ''),\n            checksMin = (maxChoice.length > 0 ? maxChoice[0] : ''),\n            checksMax = (maxChoice.length > 0 ? maxChoice[1] : ''),\n            aHtml = '',\n            qaHtml = self.options.templates.question;\n\n        // HTML CODE FOR THE ANSWER/S\n        aHtml += iterateAnswers.call( self, item, item.id, i );\n\n        if( item.question === 'hidden-privacy' ){\n            let bindAnswerEl = self.formEl.closest('[data-surveyjs-container]').querySelector('[data-name=\"bind-surveyjs-answer\"]');\n            if( bindAnswerEl ){\n                bindAnswerEl.closest('[data-formjs-question]').setAttribute('data-question-id', item.id);\n                continue;\n            }\n        }\n\n        // REPLACE QUESTION DATA AND ANSWERS HTML IN LOCAL VARIABLE qaHtml\n        qaHtml = qaHtml.replace( /{{questionId}}/g, item.id );\n        qaHtml = qaHtml.replace( /{{questionNumber}}/g, (i+1) );\n        qaHtml = qaHtml.replace( /{{questionText}}/g, item.question + ( maxChoice !== '' ? ' ('+ checksMax +' '+ self.options.maxChoiceText +')' : '' ) );\n        qaHtml = qaHtml.replace( /{{answersHtml}}/g, aHtml );\n        qaHtml = qaHtml.replace( /{{fieldErrorTemplate}}/g, ( self.options.fieldErrorFeedback ? self.options.templates.fieldError : '' ) );\n        if( self.options.fieldErrorFeedback && self.options.templates.fieldError.indexOf('{{fieldErrorMessage}}') !== -1 ){\n            let message = ( maxChoice !== '' ? self.options.fieldErrorMessageMultiChoice : self.options.fieldErrorMessage );\n            qaHtml = qaHtml.replace( /{{fieldErrorMessage}}/g, message ).replace( /{{checksMin}}/g, checksMin ).replace( /{{checksMax}}/g, checksMax );\n        }\n\n        qaCodeAll += qaHtml;\n    }\n    \n    return qaCodeAll;\n\n}\n","\nexport function populateAnswers(){\n\n    const self = this;\n\n    if( self.options.useLocalStorage ){\n\n        const LS = localStorage.getObject( self.internals.localStorageName );\n        if( LS ){\n\n            const surveyContEl = self.formEl.closest('[data-surveyjs-container]');\n            self.internals.localStorageArray = LS;\n            LS.forEach(item => {\n                var fieldFirst = surveyContEl.querySelector( '[name=\"' + item.field + '\"]' ),\n                    isRadioOrCheckbox = fieldFirst.matches('[type=\"radio\"], [type=\"checkbox\"]'),\n                    fieldEl = ( isRadioOrCheckbox ? surveyContEl.querySelector( '[name=\"' + item.field + '\"][value=\"' + item.value + '\"]' ) : fieldFirst );\n                \n                if( isRadioOrCheckbox ){\n                    fieldEl.checked = true;\n                } else {\n                    fieldEl.value = item.value;\n                }\n            });\n            \n        }\n\n    } else { console.warn('LOCAL STORAGE IS NOT SUPPORTED!'); }\n\n}\n","\nimport { appendDomStringToNode }from '../helpers';\n\nimport { generateQAcode }       from './generateQAcode';\nimport { populateAnswers }      from './populateAnswers';\n\nimport Form from 'formjs-plugin';\n\nexport function buildSurvey(){\n    \n    const self = this,\n          data = self.data,\n          formEl = self.formEl,\n          formName = formEl.getAttribute('name') || '',\n          surveyContEl = formEl.closest('[data-surveyjs-container]');\n    \n    // REPLACE SURVEY ID AND FORM NAME IN LOCALSTORAGE NAME\n    self.internals.localStorageName = self.internals.localStorageName.replace( /{{surveyId}}/g, data.id );\n    self.internals.localStorageName = self.internals.localStorageName.replace( /{{surveyFormName}}/g, formName );\n    \n    // PRINT GENERAL SURVEY DATA: TITLE AND DESCRIPTION\n    const checkData = data => { return (typeof data !== 'undefined' ? data : ''); };\n    if( surveyContEl.querySelector('[data-surveyjs-title]') ){\n        surveyContEl.querySelector('[data-surveyjs-title]').textContent = checkData( data.title );\n    }\n    if( surveyContEl.querySelector('[data-surveyjs-description]') ){\n        surveyContEl.querySelector('[data-surveyjs-description]').textContent = checkData( data.description );\n    }\n    \n    // ITERATES THE QUESTIONS ( AND ALSO THEIR ANSWERS )...AND RETURN ALL THE HTML CODE\n    const qaHtmlAll = generateQAcode.call( self, data.questions );\n    // PRINT ALL QUESTIONS & ANSWERS\n    appendDomStringToNode( qaHtmlAll, formEl.querySelector('[data-surveyjs-body]') );\n\n    // FILL ANSWERS WITH LOCAL STORAGE ( IF AVAILABLE )\n    populateAnswers.call( self );\n\n    // INIT FIELDS VALIDATION\n    // THIS WILL RUN BEFORE FORMJS VALIDATION FUNCTION SO THAT USERS CANNOT SKIP REQUIRED FIELDS VALIDATION\n    self.options.fieldOptions.validateOnEvents.split(' ').forEach((eventName) => {\n        let useCapturing = (eventName === 'blur' ? true : false);\n        formEl.addEventListener(eventName, self.listenerCallbacks.validation, useCapturing);\n    });\n\n    // CREATE & INITIALIZE FORMJS INSTANCE FOR SURVEY\n    const formJSoptions = {\n            fieldOptions: self.options.fieldOptions,\n            formOptions: self.options.formOptions\n        };\n    self.internals.formInstance = new Form( formEl, formJSoptions );\n    return new Promise(resolve => {\n        resolve( self.internals.formInstance.init() );\n    }).then(() => {\n        self.isInitialized = true;\n        surveyContEl.classList.add('surveyjs-init-success');\n    });\n\n}\n","\nimport { ajaxCall } from './helpers';\nimport { buildSurvey } from './buildSurvey/buildSurvey';\n\nexport function retrieveSurvey(){\n\n    const self = this;\n\n    self.formEl.querySelector('[data-surveyjs-body]').insertAdjacentHTML( 'beforebegin', self.options.loadingBox );\n\n    return ajaxCall(self.options.url, self.options.initAjaxOptions)\n        .then(response => {\n\n            if( response.status.toLowerCase() === 'success' && response.data.questions && response.data.questions.length > 0 ){\n                self.data = response.data;\n                Object.freeze(self.data);\n                return new Promise(resolve => {\n                    resolve( buildSurvey.call(self) );\n                }).then(() => {\n                    return response;\n                });\n            } else {\n                return Promise.reject(response);\n            }\n\n        })\n        .finally(() => {\n\n            let loadingBoxEl = self.formEl.querySelector('[data-surveyjs-loading]');\n            if( loadingBoxEl ){\n                loadingBoxEl.parentNode.removeChild(loadingBoxEl);\n            }\n\n        });\n\n}\n","\nexport function destroy(){\n\n    const self = this,\n          formEl = self.formEl;\n\n    formEl.formjs.options.fieldOptions.validateOnEvents.split(' ').forEach(eventName => {\n        let useCapturing = (eventName === 'blur' ? true : false);\n        formEl.removeEventListener(eventName, self.listenerCallbacks.validation, useCapturing);\n    });\n\n    delete self.formEl.surveyjs;\n    self.formEl.formjs.destroy();\n    \n}\n","\nimport { mergeObjects }         from './modules/helpers';\nimport { messages }             from './modules/messages';\nimport { options }              from './modules/options';\n\n// CONSTRUCTOR FUNCTION & PUBLIC METHODS\nimport { constructorFn }        from './modules/constructor';\nimport { retrieveSurvey }       from './modules/retrieveSurvey';\nimport { destroy }              from './modules/destroy';\n\nimport './index.css';\n\nconst version = '2.0.4';\n\nclass Survey {\n\n    constructor( formEl, optionsObj ){\n        return constructorFn.call(this, formEl, optionsObj);\n    }\n\n    destroy(){\n        destroy.call(this);\n    }\n\n    init(){\n        return retrieveSurvey.call(this);\n    }\n    \n    static addLanguage( langString, langObject ){\n        const langValue = langString.toLowerCase();\n        this.prototype.messages[langValue] = mergeObjects({}, this.prototype.messages[langValue], langObject);\n    }\n\n    static setOptions( optionsObj ){\n        this.prototype.options = mergeObjects({}, this.prototype.options, optionsObj);\n    }\n\n}\n\nSurvey.prototype.isInitialized = false;\nSurvey.prototype.messages = messages;\nSurvey.prototype.options = options;\nSurvey.prototype.version = version;\n\nexport default Survey;\n","\nexport const messages = {\n    it: {\n        loadingBox:         '<div class=\"surveyjs-loading\" data-surveyjs-loading><i class=\"glyphicon glyphicon-refresh icon-spin\"></i> Caricamento in corso...</div>',\n        selectFirstOption:  'Seleziona una risposta...',\n        textareaPlaceholder:'Scrivi la tua risposta...',\n        maxChoiceText:      'RISPOSTE MAX',\n        fieldErrorMessage:  '&Egrave; necessario rispondere.',\n        fieldErrorMessageMultiChoice:  'Puoi scegliere da {{checksMin}} a {{checksMax}} risposte.'\n    },\n    en: {\n        loadingBox:         '<div class=\"surveyjs-loading\" data-surveyjs-loading><i class=\"glyphicon glyphicon-refresh icon-spin\"></i> Loading...</div>',\n        selectFirstOption:  'Select your answer...',\n        textareaPlaceholder:'Write here your answer...',\n        maxChoiceText:      'ANSWERS MAX',\n        fieldErrorMessage:  'Answer is necessary.',\n        fieldErrorMessageMultiChoice:  'You can choose from {{checksMin}} to {{checksMax}} answers.'\n    }\n}\n"],"sourceRoot":""}