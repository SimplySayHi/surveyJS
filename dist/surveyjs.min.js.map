{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/modules/helpers.js","webpack:///./src/modules/utils/getQuestionObject.js","webpack:///./src/modules/optionsUtils.js","webpack:///./src/modules/options.js","webpack:///./src/modules/internals.js","webpack:///./src/modules/webStorage.js","webpack:///./src/modules/utils/getAnswerIndexInLocalStorage.js","webpack:///./src/modules/listenerCallbacks.js","webpack:///./src/modules/constructor.js","webpack:///./src/modules/buildSurvey/generateQAcodeUtils/fieldsHTML/generateOptionTags.js","webpack:///./src/modules/buildSurvey/generateQAcodeUtils/fieldsHTML/attribute.js","webpack:///./src/modules/buildSurvey/generateQAcodeUtils/generateFieldHTML.js","webpack:///./src/modules/buildSurvey/generateQAcodeUtils/fieldsHTML/input.js","webpack:///./src/modules/buildSurvey/generateQAcodeUtils/fieldsHTML/nested.js","webpack:///./src/modules/buildSurvey/generateQAcodeUtils/fieldsHTML/select.js","webpack:///./src/modules/buildSurvey/generateQAcodeUtils/fieldsHTML/textarea.js","webpack:///./src/modules/buildSurvey/generateQAcodeUtils/replaceTemplateStrings.js","webpack:///./src/modules/buildSurvey/generateQAcodeUtils/iterateAnswers.js","webpack:///./src/modules/buildSurvey/generateQAcode.js","webpack:///./src/modules/buildSurvey/populateAnswers.js","webpack:///./src/modules/buildSurvey/buildSurvey.js","webpack:///./src/modules/retrieveSurvey.js","webpack:///./src/modules/destroy.js","webpack:///./src/index.js","webpack:///./src/modules/messages.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","fieldsStringSelectorSurvey","ajaxCall","timeoutTimer","url","location","href","options","timeout","controller","AbortController","signal","window","setTimeout","abort","fetch","then","response","ok","Promise","reject","fetchMethod","contentType","headers","methodName","indexOf","getFetchMethod","clearTimeout","appendDomStringToNode","HTMLstring","parentNode","tmpEl","document","createElement","innerHTML","Array","from","childNodes","forEach","elem","appendChild","checkFormEl","formEl","isString","isFormSelector","isDOMNode","querySelector","tagName","toLowerCase","result","element","node","Element","isPrototypeOf","isEmptyObject","isPlainObject","getOwnPropertyNames","length","isNodeList","nodeList","NodeList","toString","mergeObjects","out","arguments","obj","isArray","isObject","concat","slice","push","getQuestionObject","questionId","questions","this","data","qLength","q","question","id","defaultCallbacksInOptions","formOptions","beforeSend","console","log","surveyjs","surveyContEl","closest","formInstance","internals","fieldsList","querySelectorAll","fieldNameCheck","fieldTypeCheck","fieldEl","type","matches","questionIdEl","getAttribute","questionObj","required","isRequiredFrom","reqMoreEl","checked","fieldOptions","focusOnRelated","resolve","validateForm","formRes","stopExecution","getFormData","survey","answers","fieldValue","qaObj","answer","id_answer","text","attributes","trim","el","onSubmitSuccess","self","useLocalStorage","localStorage","removeItem","localStorageName","cssClasses","checkbox","default","file","label","radio","select","textarea","fieldErrorFeedback","validateOnEvents","initAjaxOptions","cache","credentials","method","redirect","lang","templates","fieldError","input","inputGroup","inputTag","labelTag","selectTag","isAvailable","isAvailableStorage","mod","setItem","e","checkLocalStorage","Storage","setObject","JSON","stringify","getObject","getItem","parse","localStorageArray","progIds","getAnswerIndexInLocalStorage","fieldName","multiChoiceValue","lsSurvey","lsSurveyLength","ls","lsItem","field","callbackFns","validation","event","eventName","target","containerEl","isMultiChoice","isRequireMore","itemEl","split","isFieldForChangeEventBoolean","isFieldForChangeEvent","inArrayPos","inArrayRequireMorePos","splice","oldFieldNamePos","elReqFromEl","constructorFn","optionsObj","argsL","checkFormElem","Error","langValue","messages","replace","listenerCallbacks","freeze","generateOptionTags","optionsList","optionsHtml","selectFirstOption","opt","generateFieldHTML","attribute","objData","aHtml","attr","attributeIsArray","relatedAnswerField","fieldClass","beforeCode","afterCode","answerType","nestedAnswer","nested","labelForNested","answerCode","answerPlaceholder","placeholder","textareaPlaceholder","replaceTemplateStrings","fieldData","relatedAnswerKeys","answerIdValue","attrRequired","addMoreName","attrRequiredFrom","reKey","regexStrRe","RegExp","regexStr","iterateAnswers","qID","qIdx","attrReq","list","listL","aLoopHtml","needsBinding","sort","a","b","aNum","qNum","aType","aId","progIdsLength","progIdsJoined","join","labelTagCode","answerId","answerIndex","answerName","answerMaxlength","maxlength","answerString","getSettingsFieldClass","questionNumber","attrChecks","checks","attrSubtype","subtype","boundedFieldEl","fieldProps","setAttribute","textContent","surveyFieldType","pop","generateQAcode","questionsList","qaData","qaCodeAll","qaDataLength","item","maxChoice","checksMin","checksMax","qaHtml","bindAnswerEl","maxChoiceText","message","fieldErrorMessageMultiChoice","fieldErrorMessage","populateAnswers","LS","fieldFirst","isRadioOrCheckbox","warn","buildSurvey","formName","checkData","title","description","qaHtmlAll","useCapturing","addEventListener","formJSoptions","Form","init","isInitialized","classList","add","retrieveSurvey","insertAdjacentHTML","loadingBox","status","loadingBoxEl","removeChild","destroy","formjs","removeEventListener","Survey","langString","langObject","it","en","version","SurveyJS"],"mappings":"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","file":"surveyjs.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\nexport const\n\nfieldsStringSelectorSurvey = '[data-surveyjs-form] input:not([type=\"reset\"]):not([type=\"submit\"]):not([type=\"button\"]), [data-surveyjs-form] select, [data-surveyjs-form] textarea, [data-name=\"bind-surveyjs-answer\"]',\n\najaxCall = function ( url = location.href, options = {} ) {\n    let timeoutTimer;\n\n    /* SET AbortController FOR timeout */\n    if ( options.timeout > 0 ) {\n        const controller = new AbortController();\n        const signal = controller.signal;\n\n        options.signal = signal;\n\n        timeoutTimer = window.setTimeout(function() {\n            controller.abort();\n        }, options.timeout);\n    }\n\n    return fetch( url, options )\n        .then(response => {\n\n            if( !response.ok ){\n                return Promise.reject(response);\n            }\n\n            let getFetchMethod = function( response ){\n                let contentType = response.headers.get('Content-Type'),\n                    methodName = 'blob';\n\n                if( contentType.indexOf('application/json') > -1 ){\n                    methodName = 'json';\n                } else if( contentType.indexOf('text/') > -1 ){\n                    methodName = 'text';\n                }\n                \n                return methodName;\n            };\n            let fetchMethod = getFetchMethod( response );\n\n            return response[fetchMethod]();\n\n        })\n        .finally(function(){\n\n            if( timeoutTimer ){\n                window.clearTimeout( timeoutTimer );\n            }\n\n        });\n},\n\nappendDomStringToNode = function ( HTMLstring, parentNode ) {\n\n    const tmpEl = document.createElement('div');\n    tmpEl.innerHTML = HTMLstring;\n    Array.from( tmpEl.childNodes ).forEach((elem) => {\n        parentNode.appendChild( elem );\n    });\n\n},\n\ncheckFormEl = function( formEl ){\n    let isString = typeof formEl,\n        isValidNodeSelector = isString === 'string' && isDOMNode(document.querySelector(formEl)),\n        isFormSelector = isValidNodeSelector && document.querySelector(formEl).tagName.toLowerCase() === 'form',\n        obj = {\n            result: isDOMNode(formEl) || isFormSelector,\n            element: (isString === 'string' ? document.querySelector(formEl) : formEl)\n        };\n\n    return obj;\n},\n\nconcatFieldsLists = function (){\n    return Array.from(arguments).reduce((argAcc, list) => {\n        return list.reduce((listAcc, elem) => {\n            if( listAcc.indexOf(elem) === -1 ){\n                listAcc.push(elem);\n            }\n            return listAcc;\n        }, argAcc);\n    }, []);\n},\n\nisDOMNode = function( node ){\n    return Element.prototype.isPrototypeOf( node );\n},\n\nisEmptyObject = function ( object ) {\n    return isPlainObject(object) && Object.getOwnPropertyNames(object).length === 0;\n},\n\nisFieldForChangeEvent = function ( fieldEl ) {\n    return fieldEl.matches('select, [type=\"radio\"], [type=\"checkbox\"], [type=\"file\"]');\n},\n\nisNodeList = function( nodeList ){\n    return NodeList.prototype.isPrototypeOf( nodeList );\n},\n\nisPlainObject = function( object ){\n    return Object.prototype.toString.call( object ) === '[object Object]';\n},\n\nmergeObjects = function( out = {} ){\n    for(let i=1; i<arguments.length; i++){\n        let obj = arguments[i];\n\n        if(!obj){ continue; }\n\n        for(let key in obj){\n            let isArray = Object.prototype.toString.call(obj[key]) === \"[object Array]\";\n            let isObject = Object.prototype.toString.call(obj[key]) === \"[object Object]\";\n\n            // COPY ONLY ENUMERABLE PROPERTIES\n            if( obj.hasOwnProperty(key) ){\n                if( isArray ){\n\n                    if( typeof out[key] === 'undefined' ){\n                        out[key] = [];\n                    }\n                    out[key] = out[key].concat( obj[key].slice(0) );\n\n                } else if( isObject ){\n\n                    out[key] = mergeObjects(out[key], obj[key]);\n\n                } else {\n\n                    // * STRING | NUMBER | BOOLEAN | FUNCTION\n                    if( Array.isArray(out[key]) ){\n                        // IF THIS IS ONE OF ABOVE (*) AND THE DESTINATION OBJECT IS AN ARRAY\n                        out[key].push(obj[key]);\n                    } else {\n                        out[key] = obj[key];\n                    }\n\n                }\n            }\n        }\n    }\n\n    return out;\n}\n","\nexport function getQuestionObject( questionId ){\n\n    const self = this,\n          questions = self.data.questions,\n          qLength = questions.length;\n\n    let obj = {};\n    \n    for(let q=0; q<qLength; q++){\n        let question = questions[q];\n        if( question.id == questionId ){\n            obj = question;\n            break;\n        }\n    }\n\n    return obj;\n\n}","\nimport { fieldsStringSelectorSurvey, isEmptyObject, mergeObjects } from './helpers';\nimport { getQuestionObject } from './utils/getQuestionObject';\n\nexport const defaultCallbacksInOptions = {\n    formOptions: {\n\n        beforeSend: function beforeSend_surveyDefault( data ){\n            console.log('Survey beforeSend_surveyDefault', data);\n            const surveyjs = this.formEl.surveyjs;\n            const surveyContEl = this.formEl.closest('[data-surveyjs-container]');\n            const formInstance = surveyjs.internals.formInstance;\n            const fieldsList = Array.from( surveyContEl.querySelectorAll(fieldsStringSelectorSurvey) );\n\n            let fieldNameCheck = '',\n                fieldTypeCheck = '';\n\n            fieldsList.forEach(function( fieldEl ){\n                \n                const type = fieldEl.type,\n                      name = fieldEl.name;\n\n                // IF A FIELD HAS THE SAME NAME ATTRIBUTE AND IT IS OF THE SAME TYPE\n                // SKIP THE REST OF THE CODE FOR THIS FIELD AND GO TO THE NEXT\n                if( (name === fieldNameCheck && type === fieldTypeCheck) ){ return; }\n                \n                if( !fieldEl.matches('[data-required-from]') ){\n                    fieldNameCheck = name;\n                    fieldTypeCheck = type;\n                }\n\n                const questionIdEl = fieldEl.closest('[data-question-id]');\n                const questionId = questionIdEl ? questionIdEl.getAttribute('data-question-id') : '';\n                const questionObj = getQuestionObject.call( surveyjs, questionId );\n\n                // BASED ON SURVEY JSON FILE, FORCE REQUIRED FIELDS TO BE VALIDATED\n                // THIS AVOIDS USERS TO HACK THE SURVEY, FOR EXAMPLE REMOVING required ATTRIBUTE FROM THE HTML\n                if( questionId !== '' && questionObj && typeof questionObj.required !== 'undefined' ){\n\n                    const isRequiredFrom = fieldEl.matches('[data-required-from]');\n                    const reqMoreEl = document.querySelector(fieldEl.getAttribute('data-required-from'));\n                    if( !isRequiredFrom || ( isRequiredFrom && reqMoreEl.checked ) ){\n                        fieldEl.required = true;\n                    }\n                    \n                }\n\n            });\n\n            console.log('Survey beforeSend_surveyDefault VALIDATE FORM...');\n            const fieldOptions = mergeObjects({}, surveyjs.options.fieldOptions, {focusOnRelated: false});\n            return new Promise(resolve => {\n                formInstance.validateForm( fieldOptions ).then(formRes => {\n                    if( !formRes.result ){\n                        data.stopExecution = true;\n                    }\n                    console.log('Survey beforeSend_surveyDefault END', data);\n                    resolve( data );\n                });\n            });\n        },\n\n        getFormData: function getFormData_surveyDefault(){\n            console.log('Survey getFormData_surveyDefault');\n            const formEl = this.formEl;\n            const survey = formEl.surveyjs;\n            const fieldsList = Array.from( formEl.closest('[data-surveyjs-container]').querySelectorAll(fieldsStringSelectorSurvey) );\n            let obj = {\n                    answers: [],\n                    id: survey.data.id\n                },\n                fieldNameCheck = '',\n                fieldTypeCheck = '';\n\n            fieldsList.forEach(fieldEl => {\n                const type = fieldEl.type,\n                      name = fieldEl.name;\n\n                // IF A FIELD HAS THE SAME NAME ATTRIBUTE AND IT IS OF THE SAME TYPE\n                // SKIP THE REST OF THE CODE FOR THIS FIELD AND GO TO THE NEXT\n                if( (name === fieldNameCheck && type === fieldTypeCheck) ){ return; }\n                \n                if( !fieldEl.matches('[data-required-from]') ){\n                    fieldNameCheck = name;\n                    fieldTypeCheck = type;\n                }\n\n                // EACH QUESTION HAS ITS OWN OBJECT ( qaObj ) THAT CONTAINS THE RELATED DATA:\n                // question:    THE QUESTION ID ( undefined FOR QUESTIONS WITH ATTRIBUTE data-required-form - will be skipped later )\n                // answer       AN OBJECT THAT CONTAINS THE FOLLOWS:\n                //                  id_answer:      THE ANSWER ID\n                //                  text:           IF THE FIELD IS A TEXTAREA\n                //                  attributes:     IF THE ANSWER IS NESTED OR IS REQUIRED FROM ANOTHER ANSWER (SEE BELOW)\n                var questionIdEl = fieldEl.closest('[data-question-id]'),\n                    questionId = questionIdEl ? questionIdEl.getAttribute('data-question-id') : '',\n                    fieldValue = fieldEl.value,\n                    qaObj = {\n                        question: questionId,\n                        answer: {\n                            id_answer: [ fieldValue ]\n                        }\n                    };\n\n                // A FIELD WITH ATTRIBUTE 'data-required-from' IS MANAGED TOGETHER WITH ITS RELATED FIELD ( WHICH HAS ATTRIBUTE 'data-require-more' )\n                // IF QUESTION ID IS EMPTY -> SKIP THE FIELD ( USEFUL FOR FORM FIELDS OUTSIDE THE SURVEY BODY )\n                if( fieldEl.matches('[data-required-from]') || questionId === '' || isEmptyObject(getQuestionObject.call( survey, questionId )) ){ return; }\n                                    \n                if( fieldEl.matches('textarea') ){\n                    qaObj.answer.id_answer = [ '' ];\n                    qaObj.answer.text = fieldValue;\n                }\n\n                if( type === 'radio' ){\n                    var containerEl = (fieldEl.closest('form') ? formEl : fieldEl.closest('[data-formjs-question]') ),\n                        elem = containerEl.querySelector('[name=\"'+ name +'\"]:checked');\n                    \n                    if( elem ){\n                        // FOR RADIO THAT REQUIRE THE USER TO GIVE ONE MORE ANSWER\n                        if( elem.matches('[data-require-more]') ){\n                            qaObj.answer.attributes = formEl.querySelector('[data-required-from=\"#'+ elem.id +'\"]').value.trim();\n                        }\n                        \n                        if( elem.matches('[data-nested-index]') ){\n                            qaObj.answer.attributes = elem.getAttribute('data-nested-index');\n                        }\n                        \n                        qaObj.answer.id_answer = [ elem.value.trim() ];\n                    } else {\n                        qaObj.answer.id_answer = [ '' ];\n                    }\n                }\n\n                if( type === 'checkbox' && fieldEl.matches('[data-checks]') ){\n                    qaObj.answer.id_answer = [];\n                    Array.from(formEl.querySelectorAll('[name=\"'+ name +'\"]:checked')).forEach(el => {\n                        qaObj.answer.id_answer.push( el.value.trim() );\n                    });\n                }\n                \n                obj.answers.push( qaObj );\n            });\n        \n            console.log('Survey getFormData_surveyDefault END', obj);\n            return obj;\n        },\n\n        onSubmitSuccess: function onSubmitSuccess_surveyDefault(){\n            // REMOVE SURVEY LOCAL STORAGE\n            const survey = this.formEl.surveyjs;\n            console.log('Survey onSubmitSuccess_surveyDefault');\n            if( self.options.useLocalStorage ){\n                console.log('Survey onSubmitSuccess_surveyDefault REMOVE LOCAL STORAGE');\n                localStorage.removeItem( survey.internals.localStorageName );\n            }\n        }\n    \n    }\n}\n","\nimport { defaultCallbacksInOptions } from './optionsUtils';\n\nexport const options = {\n    cssClasses: {\n        checkbox:           'form-check-input',\n        default:            'form-control',\n        file:               'form-control-file',\n        label:              'form-check-label',\n        radio:              'form-check-input',\n        select:             'form-control',\n        textarea:           'form-control'\n    },\n    fieldErrorFeedback:     true,\n    fieldOptions: {\n        validateOnEvents:   'input change'\n    },\n    formOptions: {\n        beforeSend:         [defaultCallbacksInOptions.formOptions.beforeSend],\n        getFormData:        defaultCallbacksInOptions.formOptions.getFormData,\n        onSubmitSuccess:    [defaultCallbacksInOptions.formOptions.onSubmitSuccess]\n    },\n    initAjaxOptions:        {\n        cache:              'no-store',\n        credentials:        'same-origin',\n        headers: {\n                            'Content-Type': 'application/json',\n                            'Accept':       'application/json'\n        },\n        method:             'GET',\n        mode:               'same-origin',\n        redirect:           'follow',\n        timeout:            0\n    },\n    lang:                   'en',\n    templates: {\n        fieldError: '<div class=\"surveyjs-field-error-message\">{{fieldErrorMessage}}</div>',\n\n        input:      '<div class=\"surveyjs-single-answer surveyjs-input-container surveyjs-answer-{{answerType}} form-check\" data-answer-index=\"{{answerIndex}}\">'+\n                        '{{inputTagCode}}'+\n                        '{{labelTagCode}}'+\n                    '</div>',\n\n        inputGroup: '<div class=\"surveyjs-single-answer input-group\" data-answer-index=\"{{answerIndex}}\">'+\n                        '<div class=\"input-group-prepend\">'+\n                            '<div class=\"input-group-text form-check surveyjs-answer-{{answerType}}\">'+\n                                '<input type=\"{{answerType}}\" name=\"surveyjs-answer-{{questionNumber}}\" id=\"{{answerCode}}\" data-answer-id=\"{{answerId}}\" value=\"{{answerIdValue}}\" {{attrRequired}} data-require-more=\"\" class=\"surveyjs-input surveyjs-radio form-check-input\" />'+\n                                '<label for=\"{{answerCode}}\" class=\"surveyjs-label form-check-label\">{{answerString}}</label>'+\n                            '</div>'+\n                        '</div>'+\n                        '{{relatedAnswerField}}'+\n                    '</div>',\n        \n        inputTag:   '<input type=\"{{answerType}}\" {{attrSubtype}} name=\"surveyjs-answer-{{questionNumber}}{{addMoreName}}\" class=\"surveyjs-input surveyjs-{{answerType}} {{fieldClass}}\" id=\"{{answerCode}}\" {{nestedAnswer}} data-answer-root=\"{{progIdsJoined}}\" data-answer-id=\"{{answerId}}\" value=\"{{answerIdValue}}\" {{attrRequired}} {{attrChecks}} {{attrRequiredFrom}} />',\n\n        labelTag:   '<label for=\"{{answerCode}}\" class=\"surveyjs-label {{labelClass}}\">{{answerString}}</label>',\n\n        question:   '<div data-question-id=\"{{questionId}}\" data-question-index=\"{{questionNumber}}\" data-formjs-question class=\"surveyjs-question-box clearfix\">'+\n                        '<div class=\"surveyjs-question-header\">Question {{questionNumber}}</div>'+\n                        '<div class=\"surveyjs-question-body\">'+\n                            '<div class=\"surveyjs-question-text\">{{questionText}}</div>'+\n                            '<div class=\"surveyjs-answers-box form-group clearfix\">'+\n                                '{{answersHtml}}'+\n                                '{{fieldErrorTemplate}}'+\n                            '</div>'+\n                        '</div>'+\n                    '</div>',\n\n        select:     '<div class=\"surveyjs-single-answer surveyjs-answer-select\" data-answer-index=\"{{answerIndex}}\">'+\n                        '{{selectTagCode}}'+\n                    '</div>',\n\n        selectTag:  '<select id=\"{{answerCode}}\" name=\"surveyjs-answer-{{questionNumber}}{{addMoreName}}\" class=\"surveyjs-select {{fieldClass}}\" {{attrRequired}} {{nestedAnswer}} data-answer-root=\"{{progIdsJoined}}\" {{attrRequiredFrom}}>'+\n                        '{{optionsHtml}}'+\n                    '</select>',\n\n        textarea:   '<div class=\"surveyjs-single-answer surveyjs-answer-textarea\">'+\n                        '<textarea id=\"{{answerCode}}\" data-answer-id=\"{{answerId}}\" {{nestedAnswer}} name=\"surveyjs-answer-{{questionNumber}}\" {{attrRequired}} class=\"surveyjs-textarea {{fieldClass}}\" {{answerMaxlength}} rows=\"6\" placeholder=\"{{answerPlaceholder}}\"></textarea>'+\n                    '</div>'\n    },\n    useLocalStorage:        true\n}\n","\nimport { webStorage } from './webStorage';\n\nexport const internals = {\n    formInstance: null,\n    isAvailableStorage: webStorage().isAvailable,\n    localStorageArray: [],\n    localStorageName: 'Survey_' + location.href + '_{{surveyFormName}}_surveyId[{{surveyId}}]',\n    progIds: []\n}\n","\nexport function webStorage(){\n\n        const checkLocalStorage = function(){\n            var mod = 'check_storage';\n            try {\n                localStorage.setItem(mod, mod);\n                localStorage.removeItem(mod);\n                return true;\n            } catch(e) {\n                return false;\n            }\n        };\n\n        const isAvailable = checkLocalStorage();\n\n        if( isAvailable ){\n            // setObject METHOD FOR HTML STORAGE -> EG: localStorage.setObject( name, JSobj )\n            // TO STORE A JS OBJECT ( AS JSON STRING ) INSIDE THE STORAGE\n            Storage.prototype.setObject = function( key, value ) {\n                this.setItem( key, JSON.stringify(value) );\n            }\n\n            // getObject METHOD FOR HTML STORAGE -> EG: localStorage.getObject( name )\n            // RETURN THE DATA ( STORED AS JSON STRING ) AS JS OBJECT\n            Storage.prototype.getObject = function( key ) {\n                var value = this.getItem( key );\n                return value && JSON.parse( value );\n            }\n        }\n\n        return {\n            isAvailable: isAvailable\n        }\n\n}\n","\nexport function getAnswerIndexInLocalStorage( fieldName, multiChoiceValue = '' ){\n\n    const self = this\n    let lsSurvey = localStorage.getObject( self.internals.localStorageName );\n            \n    if( lsSurvey ){\n        let lsSurveyLength = lsSurvey.length;\n        \n        for(let ls=0; ls<lsSurveyLength; ls++){\n            let lsItem = lsSurvey[ls];\n            \n            if( lsItem.field === fieldName ){\n                if( multiChoiceValue ){\n                    if( lsItem.value !== multiChoiceValue ){\n                        continue;\n                    }\n                }\n                return ls;\n            }\n        }\n    }\n    \n    return -1;\n\n}","\nimport { isEmptyObject, isFieldForChangeEvent } from './helpers';\nimport { getAnswerIndexInLocalStorage }         from './utils/getAnswerIndexInLocalStorage';\nimport { getQuestionObject }                    from './utils/getQuestionObject';\n\nexport const callbackFns = {\n\n    // THIS WILL RUN BEFORE FORMJS VALIDATION FUNCTION SO THAT USERS CANNOT SKIP REQUIRED FIELDS VALIDATION ( WHILE TYPING )\n    validation: function( event ){\n\n        const self = this,\n              eventName = event.type,\n              fieldEl = event.target,\n              containerEl = fieldEl.closest('[data-formjs-question]'),\n              fieldValue = ( fieldEl.value ? fieldEl.value.trim() : fieldEl.value ),\n              isMultiChoice = fieldEl.matches('[data-checks]'),\n              isRequireMore = fieldEl.matches('[data-require-more]'),\n              isRequiredFrom = fieldEl.matches('[data-required-from]'),\n              reqMoreEl = ( isRequiredFrom ? containerEl.querySelector( fieldEl.getAttribute('data-required-from') ) : null );\n\n        // VARS USED TO VALIDATE THE FILED IF IT IS REQUIRED\n        const itemEl = ( isRequiredFrom ? reqMoreEl : fieldEl ),\n              questionId = (itemEl.id ? itemEl.id.split('-')[1] : 'id-not-found'),\n              isFieldForChangeEventBoolean = isFieldForChangeEvent(fieldEl),\n              questionObj = getQuestionObject.call( self, questionId );\n\n        // IF IT'S NOT A SURVEY QUESTION -> SKIP\n        if( isEmptyObject(questionObj) ){ return true; }\n\n        if(\n            (isFieldForChangeEventBoolean && eventName === 'change') ||\n            (!isFieldForChangeEventBoolean && eventName !== 'change')\n        ){\n            \n            // MANAGE ITEMS IN LOCAL STORAGE ( IF AVAILABLE AND USABLE )\n            if( self.options.useLocalStorage && !fieldEl.matches('[data-exclude-storage]') ){\n                const inArrayPos = getAnswerIndexInLocalStorage.call( self, fieldEl.name, (isMultiChoice ? fieldValue : false) ),\n                    inArrayRequireMorePos = getAnswerIndexInLocalStorage.call( self, fieldEl.name + '-more' );\n\n                let localStorageArray = self.internals.localStorageArray;\n\n                if( !isRequireMore && !isRequiredFrom && inArrayRequireMorePos !== -1 ){\n                    localStorageArray.splice(inArrayRequireMorePos, 1);\n                }\n\n                if( inArrayPos !== -1 ){\n                    if( isMultiChoice ){\n                        if( !fieldEl.checked && localStorageArray[inArrayPos].value === fieldValue ){\n                            // REMOVE ITEM FROM LS\n                            localStorageArray.splice(inArrayPos, 1);\n                        } else {\n                            // ADD ITEM TO LS\n                            localStorageArray.push( { field: fieldEl.name, value: fieldValue } );\n                        }\n                    } else {\n                        if( fieldValue !== '' ){\n                            localStorageArray[inArrayPos].value = fieldValue;\n                        } else {\n                            localStorageArray.splice(inArrayPos, 1); \n                        }\n                    }\n                } else {\n                    if( fieldValue !== '' ){\n                        if( isRequiredFrom && fieldValue !== '' ){\n                            const oldFieldNamePos = getAnswerIndexInLocalStorage.call( self, reqMoreEl.name );\n\n                            if( oldFieldNamePos !== -1 ){\n                                localStorageArray.splice(oldFieldNamePos, 1);\n                            }\n                            localStorageArray.push( { field: reqMoreEl.name, value: reqMoreEl.value.trim() } );\n                        }\n                        localStorageArray.push( { field: fieldEl.name, value: fieldValue } );\n                        if( isRequireMore ){\n                            const elReqFromEl = fieldEl.closest('form').querySelector( '[data-required-from=\"#' + fieldEl.id + '\"]' );\n                            localStorageArray.push( { field: elReqFromEl.name, value: elReqFromEl.value.trim() } );\n                        }\n                    }\n                }\n\n                localStorage.setObject( self.internals.localStorageName, localStorageArray );\n            }\n\n            // BASED ON JSON DATA, FORCE REQUIRED FIELDS TO BE VALIDATED\n            if( typeof questionObj.required !== 'undefined' ){\n                fieldEl.required = true;\n            }\n\n        }\n        \n    }\n\n}\n","\nimport { checkFormEl, isNodeList, mergeObjects } from './helpers';\nimport { internals } from './internals';\nimport { callbackFns } from './listenerCallbacks';\n\nexport function constructorFn( formEl, optionsObj = {} ){\n\n    let self = this,\n        argsL = arguments.length,\n        checkFormElem = checkFormEl(formEl);\n\n    if( argsL === 0 || (argsL > 0 && !formEl) ){\n        throw new Error('First argument \"formEl\" is missing or falsy!');\n    }\n    if( isNodeList(formEl) ){\n        throw new Error('First argument \"formEl\" must be a single DOM node or a form CSS selector, not a NodeList!');\n    }\n    if( !checkFormElem.result ){\n        throw new Error('First argument \"formEl\" is not a DOM node nor a form CSS selector!');\n    }\n\n    if( !optionsObj.url || typeof optionsObj.url !== 'string' ){\n        throw new Error('\"options.url\" is missing or not valid!');\n    }\n\n    self.formEl = checkFormElem.element;\n    self.formEl.surveyjs = self;\n\n    formEl = self.formEl;\n\n    // SET THE lang VALUE IN options ( MANDATORY FOR OTHER OPERATIONS )\n    if( typeof optionsObj.lang === 'string' ){\n        let langValue = optionsObj.lang.toLowerCase();\n        if( self.messages[ langValue ] ){\n            self.options.lang = langValue;\n        }\n    }\n    \n    // MERGE messages OF THE CHOSEN lang INSIDE options\n    self.options = mergeObjects( {}, self.options, self.messages[self.options.lang] );\n    // MERGE OPTIONS\n    self.options = mergeObjects( {}, self.options, optionsObj );\n\n    if( self.options.templates.input.indexOf('{{inputTagCode}}') !== -1 ){\n        self.options.templates.input = self.options.templates.input.replace( /{{inputTagCode}}/g, self.options.templates.inputTag );\n    }\n\n    self.options.templates.labelTag = self.options.templates.labelTag.replace(/{{labelClass}}/g, self.options.cssClasses.label);\n\n    // SET INTERNAL UTILS\n    self.internals = internals;\n\n    if( !self.internals.isAvailableStorage ){\n        self.options.useLocalStorage = false;\n    }\n\n    self.listenerCallbacks = {\n        validation: callbackFns.validation.bind(self)\n    };\n    Object.freeze(self.listenerCallbacks);\n    \n}\n","\nexport function generateOptionTags( optionsList = [] ){\n\n    const self = this;\n    let optionsHtml = ( optionsList[0].id === '' ? '' : '<option value=\"\">'+ self.options.selectFirstOption +'</option>' );\n\n    optionsList.forEach(opt => {\n        optionsHtml += '<option value=\"'+ opt.id +'\" data-answer-id=\"'+ opt.id +'\">'+ opt.answer +'</option>';\n    });\n\n    return optionsHtml;\n\n}","\nimport { generateOptionTags } from './generateOptionTags';\n\n// RELATED ANSWER\n// IF AN ANSWER REQUIRE TO FILL OR SELECT ANOTHER RELATED ANSWER\nexport const attribute = function( data ){\n\n    const self = this,\n          answer = data.answer,\n          objData = data.objData,\n          aHtml = self.options.templates.inputGroup,\n          attr = answer.attribute,\n          attributeIsArray = Array.isArray( attr );\n    \n    let relatedAnswerField = ( attributeIsArray ? self.options.templates.selectTag : self.options.templates.inputTag );\n    \n    objData.fieldClass = self.options.cssClasses.default;\n    \n    if( attributeIsArray ){\n        // CREATE A GROUP WITH A RADIO INPUT AND ITS RELATED ANSWER (A SELECT FIELD)\n        objData.fieldClass = self.options.cssClasses.select;\n        objData.optionsHtml = generateOptionTags.call( self, attr );\n    }\n\n    return { aHtml, relatedAnswerField, objData };\n}\n","\nimport { attribute }    from './fieldsHTML/attribute';\nimport { input }        from './fieldsHTML/input';\nimport { nested }       from './fieldsHTML/nested';\nimport { select }       from './fieldsHTML/select';\nimport { textarea }     from './fieldsHTML/textarea';\n\nexport const generateFieldHTML = {\n        attribute, input, nested, select, textarea\n}\n","\nexport const input = function( data ){\n\n    const self = this,\n          objData = data.objData;\n\n    let aHtml = data.beforeCode + self.options.templates.input + data.afterCode;\n\n    if( objData.answerType !== 'checkbox' && objData.answerType !== 'radio' ){\n        // EVERY INPUT FIELD THAT IS NOT A CHECKBOX OR RADIO ( TEXT, EMAIL, NUMBER, PASSWORD, RANGE AND SO ON... )\n        objData.nestedAnswer += ' class=\"' + objData.fieldClass + '\"';\n    }\n    \n    return { aHtml, objData };\n}\n","\n// NESTED ANSWER -> IT IS A CHILD ANSWER OF ITS PARENT\n// EXAMPLE:\n// IF 'WEBSITE' IS THE PARENT ANSWER\n// IT CAN HAVE THESE CHILDREN ANSWERS: PC - SMARTPHONE - TABLET\n// SO THE PARENT ANSWER IS PRINTED AS TEXT ( WITHOUT THE INPUT FIELD ) AND ITS nested ANSWERS WILL BE LOOPED\nexport const nested = function( data ){\n\n    const self = this,\n          answer = data.answer,\n          objData = data.objData;\n\n    let labelForNested = self.options.templates.labelTag;\n\n    labelForNested = labelForNested.replace(/{{answerCode}}/g, objData.answerCode);\n    labelForNested = labelForNested.replace(/{{labelClass}}/g, self.options.cssClasses.label + ' surveyjs-field-indent-0');\n    labelForNested = labelForNested.replace(/{{answerString}}/g, answer.answer);\n\n    let aLoopHtml = data.beforeCode + '<div class=\"surveyjs-'+ objData.answerType +'\">' + labelForNested + '</div>' + data.afterCode;\n\n    return { aHtml: aLoopHtml, objData };\n}\n","\nimport { generateOptionTags } from './generateOptionTags';\n\nexport const select = function( data ){\n\n    const self = this,\n          objData = data.objData;\n    \n    let aHtml = data.beforeCode + self.options.templates.select + data.afterCode;\n    \n    objData.optionsHtml = generateOptionTags.call( self, data.obj.answers );\n\n    return { aHtml, objData };\n}\n","\nexport const textarea = function( data ){\n\n    const self = this,\n          answer = data.answer,\n          objData = data.objData;\n\n    let aHtml = self.options.templates.textarea;\n\n    objData.answerPlaceholder = answer.placeholder || self.options.textareaPlaceholder;\n\n    return { aHtml, objData };\n}\n","\nexport function replaceTemplateStrings( fieldData, objData ){\n\n    const self = this;\n\n    if( objData.optionsHtml !== '' ){\n        fieldData.aHtml = fieldData.aHtml.replace( /{{selectTagCode}}/g, self.options.templates.selectTag );\n    }\n\n    if( fieldData.relatedAnswerField ){\n        let relatedAnswerKeys = {\n                answerCode: '', answerType: 'text', fieldClass: objData.fieldClass,\n                answerIdValue: '', attrRequired: '', addMoreName: '-more',\n                attrRequiredFrom: 'data-required-from=\"#'+ objData.answerCode +'\"'\n            };\n            \n        for(let reKey in relatedAnswerKeys){\n            let regexStrRe = new RegExp( '{{' + reKey + '}}', 'g' );\n            fieldData.relatedAnswerField = fieldData.relatedAnswerField.replace( regexStrRe, relatedAnswerKeys[reKey] );    \n        }\n        \n        fieldData.aHtml = fieldData.aHtml.replace( /{{relatedAnswerField}}/g, fieldData.relatedAnswerField );\n    } else {\n        fieldData.aHtml = fieldData.aHtml.replace( /{{addMoreName}}/g, '' );\n        fieldData.aHtml = fieldData.aHtml.replace( /{{attrRequiredFrom}}/g, '' );\n    }\n    \n    for( let key in objData ){\n        let regexStr = new RegExp( '{{' + key + '}}', 'g' );\n        fieldData.aHtml = fieldData.aHtml.replace( regexStr, objData[key] );\n    }\n\n    return fieldData.aHtml;\n\n}","\nimport { generateFieldHTML } from './generateFieldHTML';\nimport { replaceTemplateStrings } from './replaceTemplateStrings';\n\nexport function iterateAnswers( obj, qID, qIdx, attrReq ){\n\n    const self = this;\n    let progIds = self.internals.progIds;\n\n    // obj          MUST BE AN ARRAY OF STRINGS OR AN OBJECT THAT CONTAINS 'answers' AS ARRAY (THE FUNCTION iterateAnswers LOOPS UNTIL A STRING IS FOUND, AND PRINTS IT)\n    // qIdx         INDEX OF THE QUESTION\n    // attrReq      HTML REQUIRED ATTRIBUTE THAT WILL BE PRINTED (THIS PARAMETER MUST NOT BE PASSED INITIALLY. IT IS AUTOMATICALLY PASSED INSIDE THE LOOP IF NECESSARY)\n    // aLoopHtml    THE CODE OF ALL ANSWERS ( PRINTED ONLY AT THE END )\n    var list = ( Array.isArray( obj ) ? obj : obj.answers ),\n        listL = list.length,\n        qID = (obj.id ? obj.id : (qID ? qID : 0)),\n        i = qIdx || 0,\n        aLoopHtml = '',\n        needsBinding = (obj.question === 'hidden-privacy' ? true : false);\n\n    if( list[0]['sort'] ){\n        list.sort(function(a, b){\n            return a['sort'] > b['sort'];\n        });\n    }\n\n    for(let a=0; a<listL; a++){\n\n        let answer = list[a],\n            aNum = (a+1),\n            qNum = (i+1),\n            aType = answer.type,\n            aId = answer.id,\n            progIdsLength = progIds.length,\n            progIdsJoined = ( progIdsLength > 0 ? self.internals.progIds.join('-') : '' ),\n            getSettingsFieldClass = function(){\n                let aType = ( answer.type === 'option' ? 'select' : answer.type );\n                return self.options.cssClasses[aType] || self.options.cssClasses.default;\n            };\n\n        let fieldData = { aHtml: '' };\n        \n        // ALL THESE OBJECT KEYS WILL REPLACE {{key}} WITH objData.KEY IN HTML STRING\n        let objData = {\n            // answerId         ANSWER ID AS FROM THE JSON. THIS IS USED AS VALUE ATTRIBUTE OF THE ANSWER\n            // answerType       ANSWER TYPE AS FROM THE JSON. USED TO CHECK WHICH FIELD MUST BE CREATED ( EG: text, radio, checkbox, select, textarea )\n            // nestedAnswer     CREATES THE data-nested-index ATTRIBUTE TO PRINT IF AN ANSWER IS NESTED ( SEE BELOW FOR NESTED ANSWERS )\n            // answerCode       ID ATTRIBUTE OF THE ANSWER\n            //                  ( BUILT AS: \"answerType-questionID-answerID-questionNumber[-nestingLevels]-answerNumber\" )\n            //                  ONLY AN ATTRIBUTE-ANSWER DOES NOT USE THE answerCode\n                labelTagCode: (aType === 'checkbox' || aType === 'radio' ? self.options.templates.labelTag : ''),\n                answerId: aId,\n                answerIdValue: (aType === 'text' ? '' : aId),\n                answerIndex: aNum,\n                answerName: 'surveyjs-answer-'+qNum,\n                answerPlaceholder: '',\n                answerMaxlength: (answer.maxlength ? 'maxlength=\"' + answer.maxlength + '\"' : ''),\n                answerString: (typeof answer.answer === 'string' ? answer.answer : ''),\n                answerType: aType,\n                attrRequired: ( typeof obj.required !== 'undefined' ? 'required=\"\"' : (typeof attrReq !== 'undefined' ? attrReq : '') ),\n                fieldClass: getSettingsFieldClass(),\n                nestedAnswer: ( progIdsJoined !== '' ? 'data-nested-index=\"'+ aNum +'\"' : '' ),\n                optionsHtml: '',\n                progIdsJoined: progIdsJoined,\n                questionNumber: qNum,\n                answerCode: (aType === 'option' ? 'select' : aType) +'-' + qID +'-'+ (aId || 0) + '-' + qNum + (progIdsJoined !== '' ? '-'+progIdsJoined : '') +'-'+ aNum,\n                attrChecks: (obj.checks ? 'data-checks=\"' + obj.checks + '\"' : ''),\n                attrSubtype: (answer.subtype ? 'data-subtype=\"' + answer.subtype + '\"' : '')\n            };\n        \n        if( needsBinding ){\n            \n            let boundedFieldEl = self.formEl.closest('[data-surveyjs-container]').querySelectorAll('[data-name=\"bind-surveyjs-answer\"]')[a],\n                fieldProps = {\n                    id: objData.answerCode,\n                    name: objData.answerName,\n                    type: aType,\n                    value: objData.answerId\n                };\n            \n            if( typeof obj.required !== 'undefined' ){ fieldProps.required = true; }\n            \n            for(let key in fieldProps){\n                boundedFieldEl[key] = fieldProps[key];\n            }\n            boundedFieldEl.setAttribute('data-answer-id', objData.answerId);\n            boundedFieldEl.closest('div').querySelector('label').setAttribute('for', objData.answerCode);\n            boundedFieldEl.closest('div').querySelector('label span').textContent = answer.answer;\n            \n            continue;\n            \n        }\n        \n        if( typeof answer.answer === 'string' || typeof answer.answer === 'number' ){\n\n                // beforeCode       MANAGE FIELD INDENT ( FOR NESTED ANSWERS - SEE BELOW )\n                // afterCode        MANAGE FIELD INDENT ( FOR NESTED ANSWERS - SEE BELOW )\n                let surveyFieldType = ( answer.attribute ? 'attribute' : (answer.nested ? 'nested' : ( aType === 'option' ? 'select' : aType )) ),\n                    beforeCode = ( progIdsLength > 0 && a === 0 ? '<div class=\"surveyjs-field-indent\">' : '' ),\n                    afterCode = ( progIdsLength > 0 && a === listL - 1 ? '</div>' : '' ),\n                    data = { answer, objData, beforeCode, afterCode, obj };\n\n                if( typeof generateFieldHTML[surveyFieldType] === 'undefined' ){\n                    surveyFieldType = 'input';\n                }\n\n                // GENERATE FIELD HTML CODE FROM surveyFieldType\n                fieldData = generateFieldHTML[surveyFieldType].call( self, data );\n                \n                objData = fieldData.objData;\n\n                if( answer.nested ){\n                    self.internals.progIds.push( aNum );\n                    aLoopHtml += fieldData.aHtml;\n                    aLoopHtml += iterateAnswers.call( self, answer.nested, qID, i, objData.attrRequired );\n                    continue;\n                }\n\n                // IF LOOPING A NESTED ANSWER AND THE END OF THAT ARRAY IS REACHED\n                // REMOVE THE LAST ITEM OF progIds ( SO AT THE NEXT LOOP IT WILL NOT INDENT THE ANSWER )\n                if( progIdsLength > 0 && a === listL-1 ){ self.internals.progIds.pop(); }\n\n        }\n\n        fieldData.aHtml = replaceTemplateStrings.call(self, fieldData, objData);\n        aLoopHtml += fieldData.aHtml;\n        \n        if( aType === 'option' ){\n            a = a + obj.answers.length;\n        }\n        \n    }\n\n    return aLoopHtml;\n\n}\n","\nimport { iterateAnswers } from './generateQAcodeUtils/iterateAnswers';\n\nexport function generateQAcode( questionsList = [] ){\n\n    const self = this;\n    let qaData = ( questionsList[0]['sort'] ? questionsList.sort(function(a, b){ return a['sort'] > b['sort']; }) : questionsList ),\n        qaCodeAll = '',\n        qaDataLength = qaData.length;\n    \n    for(let i=0; i<qaDataLength; i++){\n        let item = qaData[i],\n            maxChoice = (item.checks ? JSON.parse(item.checks) : ''),\n            checksMin = (maxChoice.length > 0 ? maxChoice[0] : ''),\n            checksMax = (maxChoice.length > 0 ? maxChoice[1] : ''),\n            aHtml = '',\n            qaHtml = self.options.templates.question;\n\n        // HTML CODE FOR THE ANSWER/S\n        aHtml += iterateAnswers.call( self, item, item.id, i );\n\n        if( item.question === 'hidden-privacy' ){\n            let bindAnswerEl = self.formEl.closest('[data-surveyjs-container]').querySelector('[data-name=\"bind-surveyjs-answer\"]');\n            if( bindAnswerEl ){\n                bindAnswerEl.closest('[data-formjs-question]').setAttribute('data-question-id', item.id);\n                continue;\n            }\n        }\n\n        // REPLACE QUESTION DATA AND ANSWERS HTML IN LOCAL VARIABLE qaHtml\n        qaHtml = qaHtml.replace( /{{questionId}}/g, item.id );\n        qaHtml = qaHtml.replace( /{{questionNumber}}/g, (i+1) );\n        qaHtml = qaHtml.replace( /{{questionText}}/g, item.question + ( maxChoice !== '' ? ' ('+ checksMax +' '+ self.options.maxChoiceText +')' : '' ) );\n        qaHtml = qaHtml.replace( /{{answersHtml}}/g, aHtml );\n        qaHtml = qaHtml.replace( /{{fieldErrorTemplate}}/g, ( self.options.fieldErrorFeedback ? self.options.templates.fieldError : '' ) );\n        if( self.options.fieldErrorFeedback && self.options.templates.fieldError.indexOf('{{fieldErrorMessage}}') !== -1 ){\n            let message = ( maxChoice !== '' ? self.options.fieldErrorMessageMultiChoice : self.options.fieldErrorMessage );\n            qaHtml = qaHtml.replace( /{{fieldErrorMessage}}/g, message ).replace( /{{checksMin}}/g, checksMin ).replace( /{{checksMax}}/g, checksMax );\n        }\n\n        qaCodeAll += qaHtml;\n    }\n    \n    return qaCodeAll;\n\n}\n","\nexport function populateAnswers(){\n\n    const self = this;\n\n    if( self.options.useLocalStorage ){\n\n        const LS = localStorage.getObject( self.internals.localStorageName );\n        if( LS ){\n\n            const surveyContEl = self.formEl.closest('[data-surveyjs-container]');\n            self.internals.localStorageArray = LS;\n            LS.forEach(item => {\n                var fieldFirst = surveyContEl.querySelector( '[name=\"' + item.field + '\"]' ),\n                    isRadioOrCheckbox = fieldFirst.matches('[type=\"radio\"], [type=\"checkbox\"]'),\n                    fieldEl = ( isRadioOrCheckbox ? surveyContEl.querySelector( '[name=\"' + item.field + '\"][value=\"' + item.value + '\"]' ) : fieldFirst );\n                \n                if( isRadioOrCheckbox ){\n                    fieldEl.checked = true;\n                } else {\n                    fieldEl.value = item.value;\n                }\n            });\n            \n        }\n\n    } else { console.warn('LOCAL STORAGE IS NOT SUPPORTED!'); }\n\n}\n","\nimport { appendDomStringToNode }from '../helpers';\n\nimport { generateQAcode }       from './generateQAcode';\nimport { populateAnswers }      from './populateAnswers';\n\nexport function buildSurvey(){\n\n    const self = this,\n          data = self.data,\n          formEl = self.formEl,\n          formName = formEl.getAttribute('name') || '',\n          surveyContEl = formEl.closest('[data-surveyjs-container]');\n    \n    // REPLACE SURVEY ID AND FORM NAME IN LOCALSTORAGE NAME\n    self.internals.localStorageName = self.internals.localStorageName.replace( /{{surveyId}}/g, data.id );\n    self.internals.localStorageName = self.internals.localStorageName.replace( /{{surveyFormName}}/g, formName );\n    \n    // PRINT GENERAL SURVEY DATA: TITLE AND DESCRIPTION\n    const checkData = data => { return (typeof data !== 'undefined' ? data : ''); };\n    if( surveyContEl.querySelector('[data-surveyjs-title]') ){\n        surveyContEl.querySelector('[data-surveyjs-title]').textContent = checkData( data.title );\n    }\n    if( surveyContEl.querySelector('[data-surveyjs-description]') ){\n        surveyContEl.querySelector('[data-surveyjs-description]').textContent = checkData( data.description );\n    }\n    \n    // ITERATES THE QUESTIONS ( AND ALSO THEIR ANSWERS )...AND RETURN ALL THE HTML CODE\n    const qaHtmlAll = generateQAcode.call( self, data.questions );\n    // PRINT ALL QUESTIONS & ANSWERS\n    appendDomStringToNode( qaHtmlAll, formEl.querySelector('[data-surveyjs-body]') );\n\n    // FILL ANSWERS WITH LOCAL STORAGE ( IF AVAILABLE )\n    populateAnswers.call( self );\n\n    // INIT FIELDS VALIDATION\n    // THIS WILL RUN BEFORE FORMJS VALIDATION FUNCTION SO THAT USERS CANNOT SKIP REQUIRED FIELDS VALIDATION\n    self.options.fieldOptions.validateOnEvents.split(' ').forEach((eventName) => {\n        let useCapturing = (eventName === 'blur' ? true : false);\n        formEl.addEventListener(eventName, self.listenerCallbacks.validation, useCapturing);\n    });\n\n    // CREATE & INITIALIZE FORMJS INSTANCE FOR SURVEY\n    const formJSoptions = {\n            fieldOptions: self.options.fieldOptions,\n            formOptions: self.options.formOptions\n        };\n    self.internals.formInstance = new Form( formEl, formJSoptions );\n    self.internals.formInstance.init();\n    \n    self.isInitialized = true;\n    surveyContEl.classList.add('surveyjs-init-success');\n\n}\n","\nimport { ajaxCall } from './helpers';\nimport { buildSurvey } from './buildSurvey/buildSurvey';\n\nexport function retrieveSurvey(){\n\n    const self = this;\n\n    self.formEl.querySelector('[data-surveyjs-body]').insertAdjacentHTML( 'beforebegin', self.options.loadingBox );\n\n    return ajaxCall(self.options.url, self.options.initAjaxOptions)\n        .then(function( response ){\n\n            if( response.status.toLowerCase() === 'success' && response.data.questions && response.data.questions.length > 0 ){\n                self.data = response.data;\n                Object.freeze(self.data);\n                buildSurvey.call(self);\n            }\n            return response;\n\n        })\n        .finally(function(){\n\n            let loadingBoxEl = self.formEl.querySelector('[data-surveyjs-loading]');\n            if( loadingBoxEl ){\n                loadingBoxEl.parentNode.removeChild(loadingBoxEl);\n            }\n\n        });\n\n}\n","\nexport function destroy(){\n\n    const self = this,\n          formEl = self.formEl;\n\n    formEl.formjs.options.fieldOptions.validateOnEvents.split(' ').forEach(function( eventName ){\n        let useCapturing = (eventName === 'blur' ? true : false);\n        formEl.removeEventListener(eventName, self.listenerCallbacks.validation, useCapturing);\n    });\n\n    delete self.formEl.surveyjs;\n    self.formEl.formjs.destroy();\n    \n}\n","\nimport { mergeObjects }         from './modules/helpers';\nimport { messages }             from './modules/messages';\nimport { options }              from './modules/options';\n\n// CONSTRUCTOR FUNCTION & PUBLIC METHODS\nimport { constructorFn }        from './modules/constructor';\nimport { retrieveSurvey as init } from './modules/retrieveSurvey';\nimport { destroy }              from './modules/destroy';\n\nconst version = '2.0.0';\n\nclass Survey {\n\n    constructor( formEl, optionsObj ){\n        return constructorFn.call(this, formEl, optionsObj);\n    }\n\n    destroy(){\n        destroy.call(this);\n    }\n\n    init(){\n        return init.call(this);\n    }\n    \n    static addLanguage( langString, langObject ){\n        const langValue = langString.toLowerCase();\n        this.prototype.messages[langValue] = mergeObjects({}, this.prototype.messages[langValue], langObject);\n    }\n\n    static setOptions( optionsObj ){\n        this.prototype.options = mergeObjects({}, this.prototype.options, optionsObj);\n    }\n\n}\n\nSurvey.prototype.isInitialized = false;\nSurvey.prototype.messages = messages;\nSurvey.prototype.options = options;\nSurvey.prototype.version = version;\n\nif( !window.Survey ){ window.Survey = Survey; }\nif( !window.SurveyJS ) { window.SurveyJS = Survey; }\n","\nexport const messages = {\n    it: {\n        loadingBox:         '<div class=\"surveyjs-loading\" data-surveyjs-loading><i class=\"glyphicon glyphicon-refresh icon-spin\"></i> Caricamento in corso...</div>',\n        selectFirstOption:  'Seleziona una risposta...',\n        textareaPlaceholder:'Scrivi la tua risposta...',\n        maxChoiceText:      'RISPOSTE MAX',\n        fieldErrorMessage:  '&Egrave; necessario rispondere.',\n        fieldErrorMessageMultiChoice:  'Puoi scegliere da {{checksMin}} a {{checksMax}} risposte.'\n    },\n    en: {\n        loadingBox:         '<div class=\"surveyjs-loading\" data-surveyjs-loading><i class=\"glyphicon glyphicon-refresh icon-spin\"></i> Loading...</div>',\n        selectFirstOption:  'Select your answer...',\n        textareaPlaceholder:'Write here your answer...',\n        maxChoiceText:      'ANSWERS MAX',\n        fieldErrorMessage:  'Answer is necessary.',\n        fieldErrorMessageMultiChoice:  'You can choose from {{checksMin}} to {{checksMax}} answers.'\n    }\n}\n"],"sourceRoot":""}