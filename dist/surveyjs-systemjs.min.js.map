{"version":3,"file":"surveyjs-systemjs.min.js","sources":["../src/modules/helpers/ajaxCall.js","../src/modules/helpers/customEvents.js","../src/modules/helpers/deepFreeze.js","../src/modules/helpers/isPlainObject.js","../src/modules/helpers/mergeObjects.js","../src/modules/helpers/dispatchCustomEvent.js","../src/modules/helpers/getQuestionId.js","../src/modules/helpers/isEmptyObject.js","../src/modules/helpers/replaceObjectKeysInString.js","../src/modules/helpers/sortList.js","../src/modules/helpers/webStorage.js","../src/modules/utils/getQuestionObject.js","../src/modules/options.js","../src/modules/optionsUtils.js","../src/modules/helpers/fieldsStringSelectorSurvey.js","../src/modules/internals.js","../src/modules/listenerCallbacks/submit.js","../src/modules/utils/getAnswerIndex.js","../src/modules/listenerCallbacks/validationEnd.js","../src/modules/helpers/arrayMove.js","../src/modules/buildSurvey/generateQAcodeUtils/generateOptionTags.js","../src/modules/buildSurvey/generateQAcodeUtils/getAttributesStringHTML.js","../src/modules/helpers/toKebabCase.js","../src/modules/buildSurvey/generateQAcodeUtils/generateAnswers.js","../src/modules/buildSurvey/generateQAcodeUtils/getTemplates.js","../src/modules/buildSurvey/generateQAcode.js","../src/modules/buildSurvey/buildSurvey.js","../src/modules/buildSurvey/populateAnswers.js","../src/index.js","../src/modules/destroy.js"],"sourcesContent":["\nexport const ajaxCall = ( url = location.href, options = {} ) => {\n\n    let timeoutTimer;\n\n    options.headers = new Headers( options.headers );\n\n    /* SET AbortController FOR timeout */\n    if ( options.timeout > 0 ) {\n        const controller = new AbortController();\n        const signal = controller.signal;\n\n        options.signal = signal;\n\n        timeoutTimer = window.setTimeout(() => {\n            controller.abort();\n        }, options.timeout);\n    }\n\n    return fetch( url, options )\n        .then(response => {\n            if( !response.ok ){\n                throw new Error(response.statusText);\n            }\n            return response.json();\n        })\n        .catch(error => {\n            throw new Error(error.message);\n        })\n        .finally(() => {\n            if( timeoutTimer ){\n                window.clearTimeout( timeoutTimer );\n            }\n        });\n        \n}\n","\nexport const customEvents = {\n    destroy: 'sjs:destroy',\n    init: 'sjs:init'\n}\n","\nexport const deepFreeze = obj => {\n\n    Object.getOwnPropertyNames(obj).forEach(name => {\n        const prop = obj[name];\n        if( typeof prop === 'object' && prop !== null ){\n            deepFreeze(prop);\n        }\n    });\n    return Object.freeze(obj);\n    \n}\n","\nexport const isPlainObject = object => {\n    return Object.prototype.toString.call( object ) === '[object Object]';\n}\n","\nimport { isPlainObject } from './isPlainObject';\n\nexport const mergeObjects = function( out = {} ){\n    Array.from(arguments).slice(1).filter(arg => !!arg).forEach(arg => {\n        Object.keys(arg).forEach(key => {\n            if( Array.isArray(arg[key]) ){\n                out[key] = (out[key] || []).concat( arg[key].slice(0) );\n            } else if( isPlainObject(arg[key]) ){\n                out[key] = mergeObjects((out[key] || {}), arg[key]);\n            } else {\n                // * STRING | NUMBER | BOOLEAN | FUNCTION\n                if( Array.isArray(out[key]) ){\n                    // IF THIS IS ONE OF ABOVE (*) AND THE DESTINATION OBJECT IS AN ARRAY\n                    out[key].push(arg[key]);\n                } else {\n                    out[key] = arg[key];\n                }\n            }\n        });\n    });\n\n    return out;\n}\n","\nimport { mergeObjects } from './mergeObjects';\n\nexport const dispatchCustomEvent = ( elem, eventName, eventOptions ) => {\n    eventOptions = mergeObjects({}, { bubbles: true }, eventOptions);\n    const eventObj = new CustomEvent(eventName, eventOptions);\n    elem.dispatchEvent( eventObj );\n}\n","\nexport const getQuestionId = fieldEl => {\n    const containerEl = fieldEl.closest('[data-question-id]');\n    return (containerEl && containerEl.getAttribute('data-question-id')) || '';\n}\n","\nimport { isPlainObject } from './isPlainObject';\n\nexport const isEmptyObject = object => {\n    return isPlainObject(object) && Object.getOwnPropertyNames(object).length === 0;\n}\n","\nexport const replaceObjectKeysInString = (obj, stringHTML) => {\n    return Object.keys(obj).reduce((accString, name) => {\n        const regexStr = new RegExp( '{{' + name + '}}', 'g' );\n        return accString.replace(regexStr, obj[name]);\n    }, stringHTML);\n}\n","\nexport const sortList = ( list ) => {\n    if( list[0]['sort'] ){\n        list.sort((a, b) => a['sort'] > b['sort']);\n    }\n    return list;\n}\n","\nexport const webStorage = () => {\n\n    const checkLocalStorage = () => {\n        const mod = 'check_storage';\n        try {\n            localStorage.setItem(mod, mod);\n            localStorage.removeItem(mod);\n            return true;\n        } catch(e) {\n            return false;\n        }\n    };\n\n    const isAvailable = checkLocalStorage();\n\n    if( isAvailable ){\n        // setObject METHOD FOR HTML STORAGE -> EG: localStorage.setObject( name, JSobj )\n        // TO STORE A JS OBJECT ( AS JSON STRING ) INSIDE THE STORAGE\n        Storage.prototype.setObject = function( key, value ) {\n            this.setItem( key, JSON.stringify(value) );\n        }\n\n        // getObject METHOD FOR HTML STORAGE -> EG: localStorage.getObject( name )\n        // RETURN THE DATA ( STORED AS JSON STRING ) AS JS OBJECT\n        Storage.prototype.getObject = function( key ) {\n            const value = this.getItem( key );\n            return value && JSON.parse( value );\n        }\n    }\n\n    return {\n        isAvailable: isAvailable\n    }\n\n}\n","\nexport const getQuestionObject = ( questions, questionId ) => {\n\n    const qLength = questions.length;\n\n    let obj = {};\n    \n    for(let q=0; q<qLength; q++){\n        const question = questions[q];\n        if( question.id == questionId ){\n            obj = question;\n            break;\n        }\n    }\n\n    return obj;\n\n}","\nimport { optionsUtils } from './optionsUtils';\n\nexport const options = {\n    cssClasses: {\n        checkbox:           'form-check-input',\n        field:              'form-control',\n        file:               'form-control-file',\n        label:              'form-check-label',\n        radio:              'form-check-input',\n        wrapper: {\n            checkbox:       'form-check',\n            field:          '',\n            radio:          'form-check'\n        }\n    },\n    formOptions: {\n        getFormData:        optionsUtils.formOptions.getFormData\n    },\n    initAjaxOptions: {\n        cache:              'no-store',\n        credentials:        'same-origin',\n        headers: {\n                            'Content-Type': 'application/json',\n                            'Accept':       'application/json'\n        },\n        method:             'GET',\n        mode:               'same-origin',\n        redirect:           'follow',\n        timeout:            0\n    },\n    messages:{\n        maxChoice:          'answers max',\n        error:              'Answer is necessary.',\n        errorMultiChoice:   'You must choose from {{checksMin}} to {{checksMax}} answers.'\n    },\n    showErrorMessage:       true,\n    templates: {\n        error:              '<div class=\"surveyjs-error-message\">{{errorMessage}}</div>',\n        \n        input:              '<input {{fieldAttributes}} name=\"surveyjs-answer-{{questionNumber}}{{addMoreName}}\" class=\"surveyjs-input surveyjs-{{answerType}} {{fieldClasses}}\" />',\n\n        label:              '<label for=\"{{answerCode}}\" class=\"surveyjs-label {{labelClasses}}\">{{labelString}}</label>',\n\n        loading:            '<div class=\"surveyjs-loading\" data-surveyjs-loading>Loading...</div>',\n        \n        select:             '<select {{fieldAttributes}} name=\"surveyjs-answer-{{questionNumber}}{{addMoreName}}\" class=\"surveyjs-select {{fieldClasses}}\">'+\n                                '{{optionsHtml}}'+\n                            '</select>',\n        \n        textarea:           '<textarea {{fieldAttributes}} name=\"surveyjs-answer-{{questionNumber}}\" class=\"surveyjs-textarea {{fieldClasses}}\"></textarea>',\n\n        wrapper: {\n            field:          '<div class=\"surveyjs-field-wrapper surveyjs-{{answerType}}-wrapper {{wrapperClasses}}\">'+\n                                '{{fieldTemplate}}'+\n                                '{{labelTemplate}}'+\n                            '</div>',\n            \n            nested:         '<div class=\"surveyjs-field-wrapper surveyjs-nested-wrapper\">'+\n                                '{{labelTemplate}}'+\n                                '<div class=\"surveyjs-nested-inner\">'+\n                                    '{{nestedFieldsHTML}}'+\n                                '</div>'+\n                            '</div>',\n\n            question:       '<div class=\"surveyjs-question-wrapper\" data-question-id=\"{{questionId}}\" data-formjs-question>'+\n                                '<div class=\"surveyjs-question-text\">{{questionText}}</div>'+\n                                '<div class=\"surveyjs-answers-wrapper\">'+\n                                    '{{answersHTML}}'+\n                                '</div>'+\n                                '<div class=\"surveyjs-errors-wrapper\" data-surveyjs-errors>{{errorTemplates}}</div>'+\n                            '</div>',\n            \n            related:        '<div class=\"surveyjs-field-wrapper surveyjs-related-wrapper input-group\">'+\n                                '<div class=\"input-group-prepend\">'+\n                                    '<div class=\"surveyjs-radio-wrapper input-group-text form-check\">'+\n                                        '{{fieldTemplate}}'+\n                                        '{{labelTemplate}}'+\n                                    '</div>'+\n                                '</div>'+\n                                '{{relatedFieldHTML}}'+\n                            '</div>'\n        }\n    },\n    useWebStorage:          true\n}\n","\nimport { fieldsStringSelectorSurvey, getQuestionId, isEmptyObject } from './helpers';\nimport { getQuestionObject } from './utils/getQuestionObject';\n\nexport const optionsUtils = {\n    formOptions: {\n\n        getFormData: function getFormData_surveyDefault( $filteredFields, trimValues ){\n            const instance = this;\n            const $form = instance.$form;\n            const fieldsList = Array.from( $form.closest('[data-surveyjs-wrapper]').querySelectorAll(fieldsStringSelectorSurvey) );\n            const obj = {\n                    answers: [],\n                    id: instance.data.id\n                };\n            \n            let fieldNameCheck = '';\n            let fieldTypeCheck = '';\n\n            fieldsList.forEach($field => {\n                const type = $field.type;\n                const name = $field.name;\n\n                if( name === fieldNameCheck && type === fieldTypeCheck ){ return; }\n                \n                if( !$field.matches('[data-required-from]') ){\n                    fieldNameCheck = name;\n                    fieldTypeCheck = type;\n                }\n\n                // EACH QUESTION HAS ITS OWN OBJECT ( qaObj ) THAT CONTAINS THE RELATED DATA:\n                // question:    THE QUESTION ID ( undefined FOR QUESTIONS WITH ATTRIBUTE data-required-form - will be skipped later )\n                // answer       AN OBJECT THAT CONTAINS THE FOLLOWS:\n                //                  value:      THE ANSWER VALUE\n                //                  related:    IF THE ANSWER IS REQUIRED FROM ANOTHER ANSWER (SEE BELOW)\n                const questionId = getQuestionId($field);\n                const qaObj = {\n                        question: questionId,\n                        answer: {\n                            value: trimValues ? $field.value.trim() : ($field.value || '')\n                        }\n                    };\n\n                // A FIELD WITH ATTRIBUTE 'data-required-from' IS MANAGED TOGETHER WITH ITS RELATED FIELD ( WHICH HAS ATTRIBUTE 'data-require-more' )\n                // IF QUESTION ID IS EMPTY -> SKIP THE FIELD ( USEFUL FOR FORM FIELDS OUTSIDE THE SURVEY BODY )\n                if(\n                    $field.matches('[data-required-from]') || \n                    questionId === '' || \n                    isEmptyObject( getQuestionObject(instance.data.questions, questionId) )\n                ){ return; }\n\n                if( type === 'radio' ){\n                    const $container = $field.closest('form') ? $form : $field.closest(instance.options.fieldOptions.questionContainer);\n                    const $checked = $container.querySelector('[name=\"'+ name +'\"]:checked');\n\n                    qaObj.answer.value = ($checked && $checked.value) || '';\n\n                    // FOR RADIO THAT REQUIRE THE USER TO GIVE ONE MORE ANSWER\n                    if( $checked && $checked.matches('[data-require-more]') ){\n                        qaObj.answer.related = $form.querySelector('[data-required-from=\"#'+ $checked.id +'\"]').value;\n                    }\n                }\n\n                if( type === 'checkbox' && $field.matches('[data-checks]') ){\n                    qaObj.answer.value = [];\n                    Array.from($form.querySelectorAll('[name=\"'+ name +'\"]:checked')).forEach($el => {\n                        qaObj.answer.value.push( $el.value );\n                    });\n                }\n                \n                obj.answers.push( qaObj );\n            });\n        \n            return obj;\n        }\n    \n    }\n}\n","\nexport const fieldsStringSelectorSurvey = '[data-surveyjs-form] input:not([type=\"reset\"]):not([type=\"submit\"]):not([type=\"button\"]), [data-surveyjs-form] select, [data-surveyjs-form] textarea, [data-surveyjs-external] [data-field]'\n","\nexport const internals = {\n    storageName: 'Survey_' + location.href + '_{{surveyFormName}}_surveyId[{{surveyId}}]'\n}\n","\nexport function submit( event ){\n    const self = event.target.surveyjs;\n    event.detail.then(() => {\n        if( self.options.useWebStorage ){\n            sessionStorage.removeItem( self.internals.storageName );\n        }\n    });\n}\n","\nexport const getAnswerIndex = ( list, fieldName, multiChoiceValue = '' ) => {\n\n    const listLength = list.length;\n\n    for(let item = 0; item < listLength; item++){\n        const lsItem = list[item];\n        if( lsItem.name === fieldName ){\n            if( multiChoiceValue ){\n                if( lsItem.value !== multiChoiceValue ){\n                    continue;\n                }\n            }\n            return item;\n        }\n    }\n    \n    return -1;\n\n}","\nimport { arrayMove, getQuestionId, isEmptyObject, isPlainObject }  from '../helpers';\nimport { getQuestionObject }                        from '../utils/getQuestionObject';\nimport { getAnswerIndex }                           from '../utils/getAnswerIndex';\n\nexport function validationEnd( event ){\n    const $field = event.detail.$field;\n    const errors = event.detail.errors;\n    const instance = $field.closest('form').surveyjs;\n    const options = instance.options;\n    const $errorsWrapper = $field.closest( options.fieldOptions.questionContainer ).querySelector('[data-surveyjs-errors]');\n    \n    const questionId = getQuestionId($field);\n    const questionObj = getQuestionObject(instance.data.questions, questionId);\n\n    // IF IT'S NOT A SURVEY QUESTION -> SKIP\n    if( isEmptyObject(questionObj) ){ return true; }\n\n    // MANAGE MULTIPLE ERROR MESSAGES\n    if( $errorsWrapper && errors && isPlainObject(questionObj.errorMessage) ){\n        let errorsList = Object.keys(errors);\n        if( errors.rule ){\n            // PUT ERROR \"rule\" AS FIRST, SO THAT A GENERIC ERROR IS SHOWN BEFORE ALL OTHERS\n            const ruleIndex = errorsList.indexOf('rule');\n            errorsList = arrayMove(errorsList, ruleIndex, 0);\n        }\n        const errorsHTML = errorsList.reduce((accHTML, name) => {\n            const errorMessage = questionObj.errorMessage[name] || '';\n            return accHTML += errorMessage ? options.templates.error.replace('{{errorMessage}}', errorMessage) : '';\n        }, '');\n\n        $errorsWrapper.innerHTML = errorsHTML;\n    }\n\n    // MANAGE ITEMS IN LOCAL STORAGE ( IF AVAILABLE AND ACTIVE )\n    if( !event.detail.isCheckingForm && options.useWebStorage && !$field.matches('[data-exclude-storage]') ){\n        const storageName = instance.internals.storageName;\n        let storageArray = sessionStorage.getObject( storageName ) || [];\n\n        const name = $field.name;\n        const value = $field.value;\n        const isRequiredFrom = $field.matches('[data-required-from]');\n        const isMultiChoice = $field.matches('[data-checks]');\n        const isRequireMore = $field.matches('[data-require-more]');\n        const $reqMore = isRequiredFrom ? document.querySelector($field.getAttribute('data-required-from')) : null;\n\n        const inArrayRequireMorePos = getAnswerIndex( storageArray, name + '-more' );            \n        if( !isRequireMore && !isRequiredFrom && inArrayRequireMorePos >= 0 ){\n            // WHEN CHECKING A RADIO WITHOUT RELATED ANSWER ( IN A LIST OF RADIOS WITH ONE REQ-MORE ) => REMOVE RELATED ANSWER FROM STORAGE\n            storageArray.splice(inArrayRequireMorePos, 1);\n        }\n\n        const inArrayPos = getAnswerIndex( storageArray, name, (isMultiChoice ? value : false) );\n        if( inArrayPos >= 0 ){\n            // REMOVE ITEM FROM LS\n            storageArray.splice(inArrayPos, 1);\n            if( (isMultiChoice && $field.checked) || (!isMultiChoice && value !== '') ){\n                // ADD ITEM TO LS\n                storageArray.push( { name, value } );\n            }\n        } else if( value !== '' ){\n            if( isRequiredFrom ){\n                const reqMorePos = getAnswerIndex( storageArray, $reqMore.name );\n                if( reqMorePos >= 0 ){\n                    storageArray.splice(reqMorePos, 1);\n                }\n                storageArray.push( { name: $reqMore.name, value: $reqMore.value } );\n            }\n            storageArray.push( { name, value } );\n        }\n\n        sessionStorage.setObject( storageName, storageArray );\n    }\n\n    // BASED ON JSON DATA, FORCE REQUIRED FIELDS TO BE VALIDATED\n    if( questionObj.required && !$field.required && !$field.matches('[data-required-from]') ){\n        $field.required = true;\n        instance.validateField($field);\n    }\n}\n","\nexport const arrayMove = (array, from, to) => {\n    array.splice(to, 0, array.splice(from, 1)[0]);\n    return array;\n}\n","\nimport { sortList } from '../../helpers';\n\nexport const generateOptionTags = ( optionsList = [] ) => {\n\n    return sortList( optionsList ).reduce((optionsHTML, opt) => {\n        return optionsHTML += `<option value=\"${opt.value}\">${opt.label}</option>`;\n    }, '');\n\n}","\nimport { toKebabCase } from '../../helpers';\n\nexport const getAttributesStringHTML = ( answerObj, answerCode, isRequired ) => {\n    const excludedAttrs = ['data', 'id', 'label', 'nested', 'related', 'sort'];\n    \n    if( /^(option|textarea)$/.test(answerObj.type) ){\n        excludedAttrs.push('type', 'value');\n    }\n\n    let string = '';\n\n    Object.keys(answerObj)\n        .filter(name => excludedAttrs.indexOf(name) === -1)\n        .forEach(name => {\n            string += ` ${name}=\"${answerObj[name]}\"`;\n        });\n\n    if( answerObj.data ){\n        Object.keys(answerObj.data).forEach(name => {\n            string += ` data-${toKebabCase(name)}=\"${answerObj.data[name]}\"`;\n        });\n    }\n\n    if( isRequired ){\n        string += ' required';\n    }\n\n    if( answerObj.related ){\n        string += ' data-require-more';\n    }\n\n    string += ` id=\"${answerCode}\"`;\n\n    return string.trim();\n}\n","\nexport const toKebabCase = ( string = '', useAllCaps = false ) => {\n    let newString = string.trim().replace(/(([_ ])([a-z]))|(([a-z])?([A-Z]))/g, (match, p1, p2, p3, p4, p5, p6) => {\n        const concatGroup = p3 ? '-' + p3 : (p5 || '') + '-' + p6;\n        return concatGroup.toLowerCase();\n    } );\n    return useAllCaps ? newString.toUpperCase() : newString;\n}\n","\nimport { mergeObjects, replaceObjectKeysInString, sortList } from '../../helpers';\nimport { generateOptionTags }       from './generateOptionTags';\nimport { getAttributesStringHTML }  from './getAttributesStringHTML';\nimport { getTemplates }             from './getTemplates';\n\nexport const generateAnswers = ( answersList, extraData, options ) => {\n\n    let allAnswersHTML = '';\n    let previousType = '';\n\n    sortList( answersList ).forEach((answer, index) => {\n\n        let answerHTML = '';\n\n        // COLLECT USEFUL DATA\n        // answerType => checkbox, date, email, radio, select, text, textarea, etc...\n        const answerType = answer.type === 'option' ? 'select' : answer.type;\n        \n        if( answerType === 'select' && previousType === answerType ){ return; }\n\n        previousType = answerType;\n\n        if( extraData.question.checks ){\n            answer = mergeObjects({}, answer, {data:{checks:extraData.question.checks}});\n        }\n        \n        const answerCode = `${answerType}-${extraData.surveyId}-${extraData.question.id}-${answerType === 'select' ? (index + 1) : answer.id}`;\n        const answerData = {\n            questionNumber: extraData.question.index + 1,\n            wrapperClasses: options.cssClasses.wrapper[answerType] || options.cssClasses.wrapper.field,\n            fieldAttributes: getAttributesStringHTML( answer, answerCode, extraData.question.isRequired ),\n            fieldClasses: options.cssClasses[answerType] || options.cssClasses.field,\n\n            answerType,\n            answerCode,\n            addMoreName: '',\n\n            labelString: answer.label || '',\n            labelClasses: options.cssClasses.label\n        };\n\n        let relatedFieldHTML = '';\n        if( answer.related ){\n            const relatedType = answer.related.type || 'select';\n            const relatedIsSelect = relatedType === 'select';\n            const relatedObj = relatedIsSelect ? mergeObjects({}, answer) : answer.related;\n\n            relatedObj.type = relatedIsSelect ? 'option' : relatedType;\n            relatedObj.id = '';\n            relatedObj.data = mergeObjects({}, relatedObj.data, {requiredFrom:'#'+answerCode});\n            delete relatedObj.related;\n\n            const answerDataRelated = {\n                fieldAttributes: getAttributesStringHTML(relatedObj, '', false),\n                answerType: relatedType,\n                addMoreName: '-more',\n                fieldClasses: relatedIsSelect ? options.cssClasses.select : (options.cssClasses[relatedType] || options.cssClasses.field)\n            };\n\n            relatedFieldHTML = options.templates[relatedType] || options.templates.input;\n            if( relatedIsSelect ){\n                const optionsHtml = generateOptionTags( answer.related );\n                relatedFieldHTML = relatedFieldHTML.replace('{{optionsHtml}}', optionsHtml);\n            }\n\n            relatedFieldHTML = replaceObjectKeysInString(answerDataRelated, relatedFieldHTML);\n        }\n        \n        // TAKE RIGHT TEMPLATES ( wrapper, field and label ) AND PUT ALL TOGETHER\n        // answerTypeForTemplate => related, input, nested, select, textarea, etc...\n        const answerTypeForTemplate = answer.related ? 'related' : (answer.nested ? 'nested' : answerType);\n        const templates = getTemplates( answerTypeForTemplate, options.templates );\n\n        let nestedFieldsHTML = '';\n        if( answer.nested ){\n            nestedFieldsHTML = generateAnswers( answer.nested, extraData, options );\n        }\n\n        let optionsHtml = '';\n        if( answerType === 'select' ){\n            optionsHtml = generateOptionTags( answersList );\n        }\n\n        answerHTML = templates.wrapper\n                        .replace('{{relatedFieldHTML}}', relatedFieldHTML)\n                        .replace('{{fieldTemplate}}', templates.field)\n                        .replace('{{optionsHtml}}', optionsHtml)\n                        .replace('{{labelTemplate}}', templates.label)\n                        .replace('{{nestedFieldsHTML}}', nestedFieldsHTML);\n        allAnswersHTML += replaceObjectKeysInString(answerData, answerHTML);\n\n    });\n\n    return allAnswersHTML;\n\n}\n","\nexport const getTemplates = ( answerType, templates ) => {\n    return {\n        field: templates[answerType] || templates.input,\n        label: /^(checkbox|nested|radio|related)$/.test(answerType) ? templates.label : '',\n        wrapper: templates.wrapper[answerType] || templates.wrapper.field\n    }\n}\n","\nimport { isPlainObject, replaceObjectKeysInString, sortList } from '../helpers';\nimport { generateAnswers } from './generateQAcodeUtils/generateAnswers';\n\nexport const generateQAcode = ( questions, surveyId, options ) => {\n\n    return sortList( questions ).reduce((accCode, questionObj, index) => {\n        if( questionObj.external ){ return accCode; }\n\n        let questionHTML = options.templates.wrapper.question;\n        const questionId = questionObj.id;\n        const questionNumber = index + 1;\n        const extraData = {\n            surveyId,\n            question: {\n                id: questionId,\n                index,\n                isRequired: !!questionObj.required\n            }\n        };\n\n        if( questionObj.checks ){\n            extraData.question.checks = questionObj.checks;\n        }\n        \n        const answersHTML = generateAnswers( questionObj.answers, extraData, options );\n\n        const maxChoice = questionObj.checks ? JSON.parse(questionObj.checks) : '';\n        const checksMin = maxChoice[0] || '';\n        const checksMax = maxChoice[1] || '';\n        const maxChoiceText = maxChoice && options.messages.maxChoice ? ' ('+ checksMax +' '+ options.messages.maxChoice +')' : '';\n\n        const questionData = {\n            questionId,\n            questionNumber,\n            questionText: questionObj.question + maxChoiceText,\n            answersHTML\n        };\n        questionHTML = replaceObjectKeysInString(questionData, questionHTML);\n\n        if( options.showErrorMessage ){\n            let errorMessage = maxChoice !== '' ? options.messages.errorMultiChoice : (questionObj.errorMessage || options.messages.error);\n\n            // CASE OF MULTIPLE ERROR MESSAGES FROM JSON DATA => DYNAMICALLY MANAGED VIA EVENT LISTENER IN CONSTRUCTOR\n            if( isPlainObject(errorMessage) ){\n                errorMessage = '';\n            }\n\n            questionHTML = questionHTML.replace( /{{errorTemplates}}/g, errorMessage );\n        }\n\n        return accCode += replaceObjectKeysInString({checksMin, checksMax}, questionHTML);\n    }, '');\n\n}\n","\nimport { generateQAcode } from './generateQAcode';\n\nexport const buildSurvey = ( data, $form, options ) => {\n    \n    const qaHtmlAll = generateQAcode( data.questions, data.id, options );\n    $form.querySelector('[data-surveyjs-body]').insertAdjacentHTML( 'beforeend', qaHtmlAll );\n\n    // MANAGE EXTERNAL QUESTION\n    const extQuestions = data.questions.filter(obj => obj.external);\n    if( extQuestions.length > 0 ){\n        const $surveyWrapper = $form.closest('[data-surveyjs-wrapper]');\n        extQuestions.forEach((question, qIndex) => {\n\n            const $externalCont = $surveyWrapper.querySelector('[data-surveyjs-external=\"'+ (qIndex+1) +'\"]');\n            \n            $externalCont.setAttribute('data-question-id', question.id);\n\n            question.answers.forEach((answer, aIndex) => {\n                const $externalField = $externalCont.querySelectorAll('[data-field]')[aIndex];\n                const fieldProps = {\n                        id: `${answer.type}-${data.id}-${question.id}-${answer.id}`,\n                        type: answer.type,\n                        value: answer.value,\n                        required: !!question.required\n                    };\n                \n                Object.keys(fieldProps).forEach(name => {\n                    $externalField[name] = fieldProps[name];\n                });\n\n                const $answerCont = $externalField.closest('[data-answer]');\n                $answerCont.querySelector('label').setAttribute('for', fieldProps.id);\n                $answerCont.querySelector('[data-label]').innerHTML = answer.label;\n                $externalCont.querySelector('[data-question]').innerHTML = question.question;\n            });\n\n        });\n    }\n\n}\n","\nexport const populateAnswers = ( $form, internals ) => {\n\n    const WS = sessionStorage.getObject( internals.storageName );\n    if( WS ){\n        const $surveyCont = $form.closest('[data-surveyjs-wrapper]');\n        WS.forEach(item => {\n            const $fieldFirst = $surveyCont.querySelector( '[name=\"' + item.name + '\"]' ),\n                  isRadioOrCheckbox = $fieldFirst.matches('[type=\"radio\"], [type=\"checkbox\"]'),\n                  $field = ( isRadioOrCheckbox ? $surveyCont.querySelector('[name=\"' + item.name + '\"][value=\"' + item.value + '\"]') : $fieldFirst );\n            \n            if( isRadioOrCheckbox ){\n                $field.checked = true;\n            } else {\n                $field.value = item.value;\n            }\n        });\n    }\n\n}\n","\nimport { version }          from '../package.json';\nimport { ajaxCall, customEvents, deepFreeze, dispatchCustomEvent, mergeObjects, webStorage } from './modules/helpers';\nimport { options }          from './modules/options';\nimport { internals }        from './modules/internals';\nimport { submit, validationEnd } from './modules/listenerCallbacks';\nimport { buildSurvey }      from './modules/buildSurvey/buildSurvey';\nimport { populateAnswers }  from './modules/buildSurvey/populateAnswers';\nimport { destroy }          from './modules/destroy';\n\nimport Form from 'formjs-plugin';\n\nclass Survey extends Form {\n\n    constructor( form, optionsObj = {} ){\n        if( !optionsObj.url || typeof optionsObj.url !== 'string' ){\n            throw new Error('\"options.url\" is missing or not a string!');\n        }\n\n        optionsObj = mergeObjects( {}, Survey.prototype.options, optionsObj );\n\n        if( !webStorage().isAvailable ){\n            optionsObj.useWebStorage = false;\n        }\n\n        // CREATE FORM INSTANCE FOR SURVEY\n        super( form, optionsObj );\n        const self = this;\n        self.internals = internals;\n        const $form = self.$form;\n        optionsObj = self.options;\n        const selfInternals = self.internals;\n\n        $form.surveyjs = self;\n        $form.querySelector('[data-surveyjs-body]').insertAdjacentHTML( 'beforebegin', optionsObj.templates.loading );\n\n        // CREATE SURVEY\n        const retrieveSurvey = ajaxCall(optionsObj.url, optionsObj.initAjaxOptions)\n            .then(response => {\n                if( response.status.toLowerCase() !== 'success' ){\n                    return Promise.reject(response);\n                }\n\n                if( response.data.questions && response.data.questions.length > 0 ){\n                    // REPLACE SURVEY ID AND FORM NAME IN WEB STORAGE NAME\n                    selfInternals.storageName = selfInternals.storageName.replace( /{{surveyId}}/, response.data.id );\n                    selfInternals.storageName = selfInternals.storageName.replace( /{{surveyFormName}}/, ($form.getAttribute('name') || '') );\n\n                    buildSurvey(response.data, $form, optionsObj);\n                    \n                    if( optionsObj.useWebStorage ){\n                        populateAnswers($form, selfInternals);\n                    }\n                    \n                    Object.defineProperty(self, 'data', {\n                        value: deepFreeze(response.data)\n                    });\n                    \n                    $form.addEventListener('fjs.field:validation', validationEnd);\n                    $form.addEventListener('fjs.form:submit', submit);\n\n                    if( optionsObj.formOptions.onInitCheckFilled ){\n                        if( self._ && typeof self._.asyncInitEnd === 'function' ){\n                            return self._.asyncInitEnd()\n                                    .then(() => {\n                                        self.isInitialized = true;\n                                        $form.closest('[data-surveyjs-wrapper]').classList.add('surveyjs-init-success');\n                                        return response\n                                    });\n                        }\n\n                        return super.validateFilledFields().then(() => {\n                            self.isInitialized = true;\n                            $form.closest('[data-surveyjs-wrapper]').classList.add('surveyjs-init-success');\n                            return response\n                        });\n                    }\n\n                    self.isInitialized = true;\n                    $form.closest('[data-surveyjs-wrapper]').classList.add('surveyjs-init-success');\n                    return response\n                }\n                \n                return response;\n            })\n            .finally(() => {\n                const $loadingBox = $form.querySelector('[data-surveyjs-loading]');\n                if( $loadingBox ){\n                    $loadingBox.parentNode.removeChild($loadingBox);\n                }\n            });\n        \n        dispatchCustomEvent( $form, customEvents.init, { detail: retrieveSurvey } );\n    }\n\n    destroy(){\n        super.destroy();\n        destroy(this.$form);\n        dispatchCustomEvent( this.$form, customEvents.destroy );\n    }\n\n    static setOptions( optionsObj ){\n        Survey.prototype.options = mergeObjects({}, Survey.prototype.options, optionsObj);\n    }\n\n}\n\nSurvey.prototype.isInitialized = false;\nSurvey.prototype.options = options;\nSurvey.prototype.version = version;\n\nexport default Survey;\n","\nimport { submit, validationEnd } from './listenerCallbacks';\n\nexport const destroy = $form => {\n\n    $form.removeEventListener('fjs.field:validation', validationEnd);\n    $form.removeEventListener('fjs.form:submit', submit);\n\n    delete $form.surveyjs;\n    \n}\n"],"names":["ajaxCall","timeoutTimer","url","arguments","length","undefined","location","href","options","headers","Headers","timeout","controller","AbortController","signal","window","setTimeout","abort","fetch","then","response","ok","Error","statusText","json","error","message","clearTimeout","customEvents","deepFreeze","obj","Object","getOwnPropertyNames","forEach","name","prop","_typeof","freeze","isPlainObject","object","prototype","toString","call","mergeObjects","out","Array","from","slice","filter","arg","keys","key","isArray","concat","push","dispatchCustomEvent","elem","eventName","eventOptions","bubbles","eventObj","CustomEvent","dispatchEvent","getQuestionId","fieldEl","containerEl","closest","getAttribute","isEmptyObject","replaceObjectKeysInString","stringHTML","reduce","accString","regexStr","RegExp","replace","sortList","list","sort","a","b","webStorage","isAvailable","mod","localStorage","setItem","removeItem","e","checkLocalStorage","Storage","setObject","value","this","JSON","stringify","getObject","getItem","parse","getQuestionObject","questions","questionId","qLength","q","question","id","cssClasses","checkbox","field","file","label","radio","wrapper","formOptions","getFormData","$filteredFields","trimValues","instance","$form","fieldsList","querySelectorAll","answers","data","fieldNameCheck","fieldTypeCheck","$field","type","matches","qaObj","answer","trim","$checked","fieldOptions","questionContainer","querySelector","related","$el","initAjaxOptions","cache","credentials","Accept","method","mode","redirect","messages","maxChoice","errorMultiChoice","showErrorMessage","templates","input","loading","select","textarea","nested","useWebStorage","internals","storageName","submit","event","self","target","surveyjs","detail","sessionStorage","getAnswerIndex","fieldName","multiChoiceValue","listLength","item","lsItem","validationEnd","array","to","errors","$errorsWrapper","questionObj","errorMessage","errorsList","rule","ruleIndex","indexOf","splice","errorsHTML","accHTML","innerHTML","isCheckingForm","storageArray","isRequiredFrom","isMultiChoice","isRequireMore","$reqMore","document","inArrayRequireMorePos","inArrayPos","checked","reqMorePos","required","validateField","generateOptionTags","optionsList","optionsHTML","opt","getAttributesStringHTML","answerObj","answerCode","isRequired","excludedAttrs","test","string","toKebabCase","useAllCaps","newString","match","p1","p2","p3","p4","p5","p6","toLowerCase","toUpperCase","generateAnswers","answersList","extraData","allAnswersHTML","previousType","index","answerHTML","answerType","checks","surveyId","answerData","questionNumber","wrapperClasses","fieldAttributes","fieldClasses","addMoreName","labelString","labelClasses","relatedFieldHTML","relatedType","relatedIsSelect","relatedObj","requiredFrom","answerDataRelated","optionsHtml","getTemplates","nestedFieldsHTML","generateQAcode","accCode","external","questionHTML","answersHTML","checksMin","checksMax","maxChoiceText","questionData","questionText","buildSurvey","qaHtmlAll","insertAdjacentHTML","extQuestions","$surveyWrapper","qIndex","$externalCont","setAttribute","aIndex","$externalField","fieldProps","$answerCont","populateAnswers","WS","$surveyCont","$fieldFirst","isRadioOrCheckbox","Survey","exports","_Form","_inherits","_super","_createSuper","form","_thisSuper","_this","optionsObj","_classCallCheck","_assertThisInitialized","selfInternals","retrieveSurvey","status","Promise","reject","defineProperty","addEventListener","onInitCheckFilled","_","asyncInitEnd","isInitialized","classList","add","_get","_getPrototypeOf","$loadingBox","parentNode","removeChild","removeEventListener","Form","version"],"mappings":";m5DACaA,EAAW,WAAyC,IAEzDC,EAFkBC,EAAGC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGG,SAASC,KAAMC,EAAUL,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAA,CAAA,EAOrD,GAHAK,EAAQC,QAAU,IAAIC,QAASF,EAAQC,SAGlCD,EAAQG,QAAU,EAAI,CACvB,IAAMC,EAAa,IAAIC,gBACjBC,EAASF,EAAWE,OAE1BN,EAAQM,OAASA,EAEjBb,EAAec,OAAOC,YAAW,WAC7BJ,EAAWK,OACf,GAAGT,EAAQG,QACf,CAEA,OAAOO,MAAOhB,EAAKM,GACdW,MAAK,SAAAC,GACF,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAMF,EAASG,YAE7B,OAAOH,EAASI,MACpB,IAAE,OACK,SAAAC,GACH,MAAM,IAAIH,MAAMG,EAAMC,YAElB,SAAC,WACDzB,GACAc,OAAOY,aAAc1B,EAE7B,GAER,EClCa2B,EACA,cADAA,EAEH,WCFGC,EAAa,SAAbA,EAAaC,GAQtB,OANAC,OAAOC,oBAAoBF,GAAKG,SAAQ,SAAAC,GACpC,IAAMC,EAAOL,EAAII,GACG,WAAhBE,EAAOD,IAA8B,OAATA,GAC5BN,EAAWM,EAEnB,IACOJ,OAAOM,OAAOP,EAEzB,ECVaQ,EAAgB,SAAAC,GACzB,MAAoD,oBAA7CR,OAAOS,UAAUC,SAASC,KAAMH,EAC3C,ECAaI,EAAe,SAAfA,IAAmC,IAAVC,EAAMzC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAA,CAAA,EAmBxC,OAlBA0C,MAAMC,KAAK3C,WAAW4C,MAAM,GAAGC,QAAO,SAAAC,GAAG,QAAMA,CAAG,IAAEhB,SAAQ,SAAAgB,GACxDlB,OAAOmB,KAAKD,GAAKhB,SAAQ,SAAAkB,GACjBN,MAAMO,QAAQH,EAAIE,IAClBP,EAAIO,IAAQP,EAAIO,IAAQ,IAAIE,OAAQJ,EAAIE,GAAKJ,MAAM,IAC5CT,EAAcW,EAAIE,IACzBP,EAAIO,GAAOR,EAAcC,EAAIO,IAAQ,GAAKF,EAAIE,IAG1CN,MAAMO,QAAQR,EAAIO,IAElBP,EAAIO,GAAKG,KAAKL,EAAIE,IAElBP,EAAIO,GAAOF,EAAIE,EAG3B,GACJ,IAEOP,CACX,ECpBaW,EAAsB,SAAEC,EAAMC,EAAWC,GAClDA,EAAef,EAAa,GAAI,CAAEgB,SAAS,GAAQD,GACnD,IAAME,EAAW,IAAIC,YAAYJ,EAAWC,GAC5CF,EAAKM,cAAeF,EACxB,ECNaG,EAAgB,SAAAC,GACzB,IAAMC,EAAcD,EAAQE,QAAQ,sBACpC,OAAQD,GAAeA,EAAYE,aAAa,qBAAwB,EAC5E,ECDaC,EAAgB,SAAA7B,GACzB,OAAOD,EAAcC,IAAyD,IAA9CR,OAAOC,oBAAoBO,GAAQnC,MACvE,ECJaiE,EAA4B,SAACvC,EAAKwC,GAC3C,OAAOvC,OAAOmB,KAAKpB,GAAKyC,QAAO,SAACC,EAAWtC,GACvC,IAAMuC,EAAW,IAAIC,OAAQ,KAAOxC,EAAO,KAAM,KACjD,OAAOsC,EAAUG,QAAQF,EAAU3C,EAAII,GAC1C,GAAEoC,EACP,ECLaM,EAAW,SAAEC,GAItB,OAHIA,EAAK,GAAS,MACdA,EAAKC,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAQ,KAAIC,EAAQ,QAErCH,CACX,ECLaI,EAAa,WAEtB,IAWMC,EAXoB,WACtB,IAAMC,EAAM,gBACZ,IAGI,OAFAC,aAAaC,QAAQF,EAAKA,GAC1BC,aAAaE,WAAWH,IACjB,CAGX,CAFE,MAAMI,GACJ,OAAO,CACX,EAGgBC,GAiBpB,OAfIN,IAGAO,QAAQjD,UAAUkD,UAAY,SAAUvC,EAAKwC,GACzCC,KAAKP,QAASlC,EAAK0C,KAAKC,UAAUH,KAKtCF,QAAQjD,UAAUuD,UAAY,SAAU5C,GACpC,IAAMwC,EAAQC,KAAKI,QAAS7C,GAC5B,OAAOwC,GAASE,KAAKI,MAAON,KAI7B,CACHT,YAAaA,EAGrB,EClCagB,EAAoB,SAAEC,EAAWC,GAM1C,IAJA,IAAMC,EAAUF,EAAU/F,OAEtB0B,EAAM,CAAA,EAEFwE,EAAE,EAAGA,EAAED,EAASC,IAAI,CACxB,IAAMC,EAAWJ,EAAUG,GAC3B,GAAIC,EAASC,IAAMJ,EAAY,CAC3BtE,EAAMyE,EACN,KACJ,CACJ,CAEA,OAAOzE,CAEX,ECdatB,EAAU,CACnBiG,WAAY,CACRC,SAAoB,mBACpBC,MAAoB,eACpBC,KAAoB,oBACpBC,MAAoB,mBACpBC,MAAoB,mBACpBC,QAAS,CACLL,SAAgB,aAChBC,MAAgB,GAChBG,MAAgB,eAGxBE,YAAa,CACTC,YCboB,CACxBD,YAAa,CAETC,YAAa,SAAoCC,EAAiBC,GAC9D,IAAMC,EAAWxB,KACXyB,EAAQD,EAASC,MACjBC,EAAazE,MAAMC,KAAMuE,EAAMnD,QAAQ,2BAA2BqD,iBCT1C,gMDUxBzF,EAAM,CACJ0F,QAAS,GACThB,GAAIY,EAASK,KAAKjB,IAGtBkB,EAAiB,GACjBC,EAAiB,GAwDrB,OAtDAL,EAAWrF,SAAQ,SAAA2F,GACf,IAAMC,EAAOD,EAAOC,KACd3F,EAAO0F,EAAO1F,KAEpB,GAAIA,IAASwF,GAAkBG,IAASF,EAAxC,CAEKC,EAAOE,QAAQ,0BAChBJ,EAAiBxF,EACjByF,EAAiBE,GAQrB,IAAMzB,EAAarC,EAAc6D,GAC3BG,EAAQ,CACNxB,SAAUH,EACV4B,OAAQ,CACJrC,MAAOwB,EAAaS,EAAOjC,MAAMsC,OAAUL,EAAOjC,OAAS,KAMvE,IACIiC,EAAOE,QAAQ,yBACA,KAAf1B,IACAhC,EAAe8B,EAAkBkB,EAASK,KAAKtB,UAAWC,IAH9D,CAMA,GAAa,UAATyB,EAAkB,CAClB,IACMK,GADaN,EAAO1D,QAAQ,QAAUmD,EAAQO,EAAO1D,QAAQkD,EAAS5G,QAAQ2H,aAAaC,oBACrEC,cAAc,UAAWnG,EAAM,cAE3D6F,EAAMC,OAAOrC,MAASuC,GAAYA,EAASvC,OAAU,GAGjDuC,GAAYA,EAASJ,QAAQ,yBAC7BC,EAAMC,OAAOM,QAAUjB,EAAMgB,cAAc,yBAA0BH,EAAS1B,GAAI,MAAMb,MAEhG,CAEa,aAATkC,GAAuBD,EAAOE,QAAQ,mBACtCC,EAAMC,OAAOrC,MAAQ,GACrB9C,MAAMC,KAAKuE,EAAME,iBAAiB,UAAWrF,EAAM,eAAeD,SAAQ,SAAAsG,GACtER,EAAMC,OAAOrC,MAAMrC,KAAMiF,EAAI5C,MACjC,KAGJ7D,EAAI0F,QAAQlE,KAAMyE,EArBP,CA1BuD,CAgDtE,IAEOjG,CACX,IDzDiCkF,YAAYC,aAEjDuB,gBAAiB,CACbC,MAAoB,WACpBC,YAAoB,cACpBjI,QAAS,CACW,eAAgB,mBAChBkI,OAAgB,oBAEpCC,OAAoB,MACpBC,KAAoB,cACpBC,SAAoB,SACpBnI,QAAoB,GAExBoI,SAAS,CACLC,UAAoB,cACpBvH,MAAoB,uBACpBwH,iBAAoB,gEAExBC,kBAAwB,EACxBC,UAAW,CACP1H,MAAoB,6DAEpB2H,MAAoB,yJAEpBvC,MAAoB,8FAEpBwC,QAAoB,uEAEpBC,OAAoB,yJAIpBC,SAAoB,iIAEpBxC,QAAS,CACLJ,MAAgB,kIAKhB6C,OAAgB,mJAOhBjD,SAAgB,8SAQhB+B,QAAgB,uPAWxBmB,eAAwB,GGnFfC,EAAY,CACrBC,YAAa,UAAYrJ,SAASC,KAAO,8CCDtC,SAASqJ,EAAQC,GACpB,IAAMC,EAAOD,EAAME,OAAOC,SAC1BH,EAAMI,OAAO9I,MAAK,WACV2I,EAAKtJ,QAAQiJ,eACbS,eAAe5E,WAAYwE,EAAKJ,UAAUC,YAElD,GACJ,CCPO,IAAMQ,EAAiB,SAAEtF,EAAMuF,GAIlC,IAJwE,IAA3BC,yDAAmB,GAE1DC,EAAazF,EAAKzE,OAEhBmK,EAAO,EAAGA,EAAOD,EAAYC,IAAO,CACxC,IAAMC,EAAS3F,EAAK0F,GACpB,GAAIC,EAAOtI,OAASkI,EAAW,CAC3B,GAAIC,GACIG,EAAO7E,QAAU0E,EACjB,SAGR,OAAOE,CACX,CACJ,CAEA,OAAQ,CAEZ,ECdO,SAASE,EAAeZ,GAC3B,ICLsBa,EAAO5H,EAAM6H,EDK7B/C,EAASiC,EAAMI,OAAOrC,OACtBgD,EAASf,EAAMI,OAAOW,OACtBxD,EAAWQ,EAAO1D,QAAQ,QAAQ8F,SAClCxJ,EAAU4G,EAAS5G,QACnBqK,EAAiBjD,EAAO1D,QAAS1D,EAAQ2H,aAAaC,mBAAoBC,cAAc,0BAExFjC,EAAarC,EAAc6D,GAC3BkD,EAAc5E,EAAkBkB,EAASK,KAAKtB,UAAWC,GAG/D,GAAIhC,EAAc0G,GAAgB,OAAO,EAGzC,GAAID,GAAkBD,GAAUtI,EAAcwI,EAAYC,cAAe,CACrE,IAAIC,EAAajJ,OAAOmB,KAAK0H,GAC7B,GAAIA,EAAOK,KAAM,CAEb,IAAMC,EAAYF,EAAWG,QAAQ,QCtBhBrI,EDuBcoI,ECvBRP,EDuBmB,GCvBhCD,EDuBSM,GCtBzBI,OAAOT,EAAI,EAAGD,EAAMU,OAAOtI,EAAM,GAAG,IDsBlCkI,ECrBDN,CDsBH,CACA,IAAMW,EAAaL,EAAWzG,QAAO,SAAC+G,EAASpJ,GAC3C,IAAM6I,EAAeD,EAAYC,aAAa7I,IAAS,GACvD,OAAOoJ,GAAWP,EAAevK,EAAQ2I,UAAU1H,MAAMkD,QAAQ,mBAAoBoG,GAAgB,GACxG,GAAE,IAEHF,EAAeU,UAAYF,CAC/B,CAGA,IAAKxB,EAAMI,OAAOuB,gBAAkBhL,EAAQiJ,gBAAkB7B,EAAOE,QAAQ,0BAA2B,CACpG,IAAM6B,EAAcvC,EAASsC,UAAUC,YACnC8B,EAAevB,eAAenE,UAAW4D,IAAiB,GAExDzH,EAAO0F,EAAO1F,KACdyD,EAAQiC,EAAOjC,MACf+F,EAAiB9D,EAAOE,QAAQ,wBAChC6D,EAAgB/D,EAAOE,QAAQ,iBAC/B8D,EAAgBhE,EAAOE,QAAQ,uBAC/B+D,EAAWH,EAAiBI,SAASzD,cAAcT,EAAOzD,aAAa,uBAAyB,KAEhG4H,EAAwB5B,EAAgBsB,EAAcvJ,EAAO,UAC9D0J,IAAkBF,GAAkBK,GAAyB,GAE9DN,EAAaL,OAAOW,EAAuB,GAG/C,IAAMC,EAAa7B,EAAgBsB,EAAcvJ,IAAOyJ,GAAgBhG,GACxE,GAAIqG,GAAc,EAEdP,EAAaL,OAAOY,EAAY,IAC3BL,GAAiB/D,EAAOqE,UAAcN,GAA2B,KAAVhG,IAExD8F,EAAanI,KAAM,CAAEpB,KAAAA,EAAMyD,MAAAA,SAE5B,GAAc,KAAVA,EAAc,CACrB,GAAI+F,EAAgB,CAChB,IAAMQ,EAAa/B,EAAgBsB,EAAcI,EAAS3J,MACtDgK,GAAc,GACdT,EAAaL,OAAOc,EAAY,GAEpCT,EAAanI,KAAM,CAAEpB,KAAM2J,EAAS3J,KAAMyD,MAAOkG,EAASlG,OAC9D,CACA8F,EAAanI,KAAM,CAAEpB,KAAAA,EAAMyD,MAAAA,GAC/B,CAEAuE,eAAexE,UAAWiE,EAAa8B,EAC3C,EAGIX,EAAYqB,UAAavE,EAAOuE,UAAavE,EAAOE,QAAQ,0BAC5DF,EAAOuE,UAAW,EAClB/E,EAASgF,cAAcxE,GAE/B,CE5EO,IAAMyE,EAAqB,WAAwB,IAAtBC,yDAAc,GAE9C,OAAO1H,EAAU0H,GAAc/H,QAAO,SAACgI,EAAaC,GAChD,OAAOD,2BAAiCC,EAAI7G,MAAU6G,MAAAA,OAAAA,EAAI3F,MAAgB,YAC7E,GAAE,GAEP,ECNa4F,EAA0B,SAAEC,EAAWC,EAAYC,GAC5D,IAAMC,EAAgB,CAAC,OAAQ,KAAM,QAAS,SAAU,UAAW,QAE/D,sBAAsBC,KAAKJ,EAAU7E,OACrCgF,EAAcvJ,KAAK,OAAQ,SAG/B,IAAIyJ,EAAS,GAwBb,OAtBAhL,OAAOmB,KAAKwJ,GACP1J,QAAO,SAAAd,GAAI,OAAqC,IAAjC2K,EAAc1B,QAAQjJ,EAAY,IACjDD,SAAQ,SAAAC,GACL6K,cAAc7K,EAAI,MAAAmB,OAAKqJ,EAAUxK,GAAQ,IAC7C,IAEAwK,EAAUjF,MACV1F,OAAOmB,KAAKwJ,EAAUjF,MAAMxF,SAAQ,SAAAC,GAChC6K,GAAmBC,SAAAA,OCnBJ,WAAuC,IAAxBC,0DAClCC,0DAD8B,IACXjF,OAAOtD,QAAQ,sCAAsC,SAACwI,EAAOC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAEpG,OADoBH,EAAK,IAAMA,GAAME,GAAM,IAAM,IAAMC,GACpCC,aACvB,IACA,OAAOT,EAAaC,EAAUS,cAAgBT,CAClD,CDa+BF,CAAY9K,GAAK,MAAAmB,OAAKqJ,EAAUjF,KAAKvF,GAAQ,IACpE,IAGA0K,IACAG,GAAU,aAGVL,EAAUpE,UACVyE,GAAU,uBAGdA,GAAM,QAAA1J,OAAYsJ,EAAa,MAEjB1E,MAClB,EE7Ba2F,EAAkB,SAAlBA,EAAoBC,EAAaC,EAAWtN,GAErD,IAAIuN,EAAiB,GACjBC,EAAe,GAqFnB,OAnFApJ,EAAUiJ,GAAc5L,SAAQ,SAAC+F,EAAQiG,GAErC,IAAIC,EAIEC,EAA6B,WAAhBnG,EAAOH,KAAoB,SAAWG,EAAOH,KAEhE,GAAmB,WAAfsG,GAA2BH,IAAiBG,EAAhD,CAEAH,EAAeG,EAEXL,EAAUvH,SAAS6H,SACnBpG,EAASrF,EAAa,CAAE,EAAEqF,EAAQ,CAACP,KAAK,CAAC2G,OAAON,EAAUvH,SAAS6H,WAGvE,IAAMzB,EAAgBwB,GAAAA,OAAAA,EAAcL,KAAAA,OAAAA,EAAUO,SAAQ,KAAAhL,OAAIyK,EAAUvH,SAASC,GAAM2H,KAAAA,OAAe,WAAfA,EAA2BF,EAAQ,EAAKjG,EAAOxB,IAC5H8H,EAAa,CACfC,eAAgBT,EAAUvH,SAAS0H,MAAQ,EAC3CO,eAAgBhO,EAAQiG,WAAWM,QAAQoH,IAAe3N,EAAQiG,WAAWM,QAAQJ,MACrF8H,gBAAiBhC,EAAyBzE,EAAQ2E,EAAYmB,EAAUvH,SAASqG,YACjF8B,aAAclO,EAAQiG,WAAW0H,IAAe3N,EAAQiG,WAAWE,MAEnEwH,WAAAA,EACAxB,WAAAA,EACAgC,YAAa,GAEbC,YAAa5G,EAAOnB,OAAS,GAC7BgI,aAAcrO,EAAQiG,WAAWI,OAGjCiI,EAAmB,GACvB,GAAI9G,EAAOM,QAAS,CAChB,IAAMyG,EAAc/G,EAAOM,QAAQT,MAAQ,SACrCmH,EAAkC,WAAhBD,EAClBE,EAAaD,EAAkBrM,EAAa,CAAE,EAAEqF,GAAUA,EAAOM,QAEvE2G,EAAWpH,KAAOmH,EAAkB,SAAWD,EAC/CE,EAAWzI,GAAK,GAChByI,EAAWxH,KAAO9E,EAAa,CAAA,EAAIsM,EAAWxH,KAAM,CAACyH,aAAa,IAAIvC,WAC/DsC,EAAW3G,QAElB,IAAM6G,EAAoB,CACtBV,gBAAiBhC,EAAwBwC,EAAY,IAAI,GACzDd,WAAYY,EACZJ,YAAa,QACbD,aAAcM,EAAkBxO,EAAQiG,WAAW6C,OAAU9I,EAAQiG,WAAWsI,IAAgBvO,EAAQiG,WAAWE,OAIvH,GADAmI,EAAmBtO,EAAQ2I,UAAU4F,IAAgBvO,EAAQ2I,UAAUC,MACnE4F,EAAiB,CACjB,IAAMI,EAAc/C,EAAoBrE,EAAOM,SAC/CwG,EAAmBA,EAAiBnK,QAAQ,kBAAmByK,EACnE,CAEAN,EAAmBzK,EAA0B8K,EAAmBL,EACpE,CAIA,IACM3F,ECvEc,SAAEgF,EAAYhF,GACtC,MAAO,CACHxC,MAAOwC,EAAUgF,IAAehF,EAAUC,MAC1CvC,MAAO,oCAAoCiG,KAAKqB,GAAchF,EAAUtC,MAAQ,GAChFE,QAASoC,EAAUpC,QAAQoH,IAAehF,EAAUpC,QAAQJ,MAEpE,CDiE0B0I,CADYrH,EAAOM,QAAU,UAAaN,EAAOwB,OAAS,SAAW2E,EAChC3N,EAAQ2I,WAE3DmG,EAAmB,GACnBtH,EAAOwB,SACP8F,EAAmB1B,EAAiB5F,EAAOwB,OAAQsE,EAAWtN,IAGlE,IAAI4O,EAAc,GACC,WAAfjB,IACAiB,EAAc/C,EAAoBwB,IAGtCK,EAAa/E,EAAUpC,QACNpC,QAAQ,uBAAwBmK,GAChCnK,QAAQ,oBAAqBwE,EAAUxC,OACvChC,QAAQ,kBAAmByK,GAC3BzK,QAAQ,oBAAqBwE,EAAUtC,OACvClC,QAAQ,uBAAwB2K,GACjDvB,GAAkB1J,EAA0BiK,EAAYJ,EAvEc,CAyE1E,IAEOH,CAEX,EE5FawB,EAAiB,SAAEpJ,EAAWkI,EAAU7N,GAEjD,OAAOoE,EAAUuB,GAAY5B,QAAO,SAACiL,EAAS1E,EAAamD,GACvD,GAAInD,EAAY2E,SAAY,OAAOD,EAEnC,IAAIE,EAAelP,EAAQ2I,UAAUpC,QAAQR,SACvCH,EAAa0E,EAAYtE,GACzB+H,EAAiBN,EAAQ,EACzBH,EAAY,CACdO,SAAAA,EACA9H,SAAU,CACNC,GAAIJ,EACJ6H,MAAAA,EACArB,aAAc9B,EAAYqB,WAI9BrB,EAAYsD,SACZN,EAAUvH,SAAS6H,OAAStD,EAAYsD,QAG5C,IAAMuB,EAAc/B,EAAiB9C,EAAYtD,QAASsG,EAAWtN,GAE/DwI,EAAY8B,EAAYsD,OAASvI,KAAKI,MAAM6E,EAAYsD,QAAU,GAClEwB,EAAY5G,EAAU,IAAM,GAC5B6G,EAAY7G,EAAU,IAAM,GAC5B8G,EAAgB9G,GAAaxI,EAAQuI,SAASC,UAAY,KAAM6G,EAAW,IAAKrP,EAAQuI,SAASC,UAAW,IAAM,GAElH+G,EAAe,CACjB3J,WAAAA,EACAmI,eAAAA,EACAyB,aAAclF,EAAYvE,SAAWuJ,EACrCH,YAAAA,GAIJ,GAFAD,EAAerL,EAA0B0L,EAAcL,GAEnDlP,EAAQ0I,iBAAkB,CAC1B,IAAI6B,EAA6B,KAAd/B,EAAmBxI,EAAQuI,SAASE,iBAAoB6B,EAAYC,cAAgBvK,EAAQuI,SAAStH,MAGpHa,EAAcyI,KACdA,EAAe,IAGnB2E,EAAeA,EAAa/K,QAAS,sBAAuBoG,EAChE,CAEA,OAAOyE,EAAWnL,EAA0B,CAACuL,UAAAA,EAAWC,UAAAA,GAAYH,EACvE,GAAE,GAEP,ECnDaO,EAAc,SAAExI,EAAMJ,EAAO7G,GAEtC,IAAM0P,EAAYX,EAAgB9H,EAAKtB,UAAWsB,EAAKjB,GAAIhG,GAC3D6G,EAAMgB,cAAc,wBAAwB8H,mBAAoB,YAAaD,GAG7E,IAAME,EAAe3I,EAAKtB,UAAUnD,QAAO,SAAAlB,GAAG,OAAIA,EAAI2N,YACtD,GAAIW,EAAahQ,OAAS,EAAG,CACzB,IAAMiQ,EAAiBhJ,EAAMnD,QAAQ,2BACrCkM,EAAanO,SAAQ,SAACsE,EAAU+J,GAE5B,IAAMC,EAAgBF,EAAehI,cAAc,6BAA8BiI,EAAO,GAAI,MAE5FC,EAAcC,aAAa,mBAAoBjK,EAASC,IAExDD,EAASiB,QAAQvF,SAAQ,SAAC+F,EAAQyI,GAC9B,IAAMC,EAAiBH,EAAchJ,iBAAiB,gBAAgBkJ,GAChEE,EAAa,CACXnK,aAAOwB,EAAOH,KAAI,KAAAxE,OAAIoE,EAAKjB,GAAMD,KAAAA,OAAAA,EAASC,GAAE,KAAAnD,OAAI2E,EAAOxB,IACvDqB,KAAMG,EAAOH,KACblC,MAAOqC,EAAOrC,MACdwG,WAAY5F,EAAS4F,UAG7BpK,OAAOmB,KAAKyN,GAAY1O,SAAQ,SAAAC,GAC5BwO,EAAexO,GAAQyO,EAAWzO,EACtC,IAEA,IAAM0O,EAAcF,EAAexM,QAAQ,iBAC3C0M,EAAYvI,cAAc,SAASmI,aAAa,MAAOG,EAAWnK,IAClEoK,EAAYvI,cAAc,gBAAgBkD,UAAYvD,EAAOnB,MAC7D0J,EAAclI,cAAc,mBAAmBkD,UAAYhF,EAASA,QACxE,GAEJ,GACJ,CAEJ,ECvCasK,EAAkB,SAAExJ,EAAOqC,GAEpC,IAAMoH,EAAK5G,eAAenE,UAAW2D,EAAUC,aAC/C,GAAImH,EAAI,CACJ,IAAMC,EAAc1J,EAAMnD,QAAQ,2BAClC4M,EAAG7O,SAAQ,SAAAsI,GACP,IAAMyG,EAAcD,EAAY1I,cAAe,UAAYkC,EAAKrI,KAAO,MACjE+O,EAAoBD,EAAYlJ,QAAQ,qCACxCF,EAAWqJ,EAAoBF,EAAY1I,cAAc,UAAYkC,EAAKrI,KAAO,aAAeqI,EAAK5E,MAAQ,MAAQqL,EAEvHC,EACArJ,EAAOqE,SAAU,EAEjBrE,EAAOjC,MAAQ4E,EAAK5E,KAE5B,GACJ,CAEJ,ECPMuL,EAAMC,EAAA,UAAA,SAAAC,yRAAAC,CAAAH,EAAAE,GAAA,UAAAE,EAAAC,EAAAL,GAER,SAAAA,EAAaM,GAAuB,IAAAC,EAAAC,EAAjBC,EAAaxR,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAA,CAAA,EAC5B,GAD8ByR,EAAAhM,KAAAsL,IACzBS,EAAWzR,KAAiC,iBAAnByR,EAAWzR,IACrC,MAAM,IAAIoB,MAAM,6CAGpBqQ,EAAahP,EAAc,GAAIuO,EAAO1O,UAAUhC,QAASmR,GAEpD1M,IAAaC,cACdyM,EAAWlI,eAAgB,GAK/B,IAAMK,EAAW+H,EADjBH,EAAOF,EAAAA,KAAAA,KAAAA,EAAMG,IAEb7H,EAAKJ,UAAYA,EACjB,IAAMrC,EAAQyC,EAAKzC,MACnBsK,EAAa7H,EAAKtJ,QAClB,IAAMsR,EAAgBhI,EAAKJ,UAE3BrC,EAAM2C,SAAWF,EACjBzC,EAAMgB,cAAc,wBAAwB8H,mBAAoB,cAAewB,EAAWxI,UAAUE,SAGpG,IAAM0I,EAAiB/R,EAAS2R,EAAWzR,IAAKyR,EAAWnJ,iBACtDrH,MAAK,SAAAC,GACF,MAAsC,YAAlCA,EAAS4Q,OAAOtE,cACTuE,QAAQC,OAAO9Q,GAGtBA,EAASqG,KAAKtB,WAAa/E,EAASqG,KAAKtB,UAAU/F,OAAS,GAE5D0R,EAAcnI,YAAcmI,EAAcnI,YAAYhF,QAAS,eAAgBvD,EAASqG,KAAKjB,IAC7FsL,EAAcnI,YAAcmI,EAAcnI,YAAYhF,QAAS,qBAAuB0C,EAAMlD,aAAa,SAAW,IAEpH8L,EAAY7O,EAASqG,KAAMJ,EAAOsK,GAE9BA,EAAWlI,eACXoH,EAAgBxJ,EAAOyK,GAG3B/P,OAAOoQ,eAAerI,EAAM,OAAQ,CAChCnE,MAAO9D,EAAWT,EAASqG,QAG/BJ,EAAM+K,iBAAiB,uBAAwB3H,GAC/CpD,EAAM+K,iBAAiB,kBAAmBxI,GAEtC+H,EAAW3K,YAAYqL,kBACnBvI,EAAKwI,GAAoC,mBAAxBxI,EAAKwI,EAAEC,aACjBzI,EAAKwI,EAAEC,eACLpR,MAAK,WAGF,OAFA2I,EAAK0I,eAAgB,EACrBnL,EAAMnD,QAAQ,2BAA2BuO,UAAUC,IAAI,yBAChDtR,CACX,IAGLuR,GAAAlB,EAAAI,EAAAH,GAAAkB,EAAA1B,EAAA1O,YAAA,uBAAAiP,GAAA/O,KAAA+O,GAA6BtQ,MAAK,WAGrC,OAFA2I,EAAK0I,eAAgB,EACrBnL,EAAMnD,QAAQ,2BAA2BuO,UAAUC,IAAI,yBAChDtR,CACX,KAGJ0I,EAAK0I,eAAgB,EACrBnL,EAAMnD,QAAQ,2BAA2BuO,UAAUC,IAAI,yBAChDtR,IAGJA,KAEH,SAAC,WACL,IAAMyR,EAAcxL,EAAMgB,cAAc,2BACpCwK,GACAA,EAAYC,WAAWC,YAAYF,EAE3C,IAEwE,OAA5EtP,EAAqB8D,EAAOzF,EAAmB,CAAEqI,OAAQ8H,IAAmBL,CAChF,CAUC,SAVAR,IAMA,CAAA,CAAA/N,IAAA,aAAAwC,MAED,SAAmBgM,GACfT,EAAO1O,UAAUhC,QAAUmC,EAAa,CAAA,EAAIuO,EAAO1O,UAAUhC,QAASmR,EAC1E,OAVC,CAAA,CAAAxO,IAAA,UAAAwC,MAED,WC5FmB,IAAA0B,ED6FfsL,EAAAC,EAAA1B,EAAA1O,WAAA,UAAAoD,MAAAlD,KAAAkD,OC7FeyB,ED8FPzB,KAAKyB,OC5FX2L,oBAAoB,uBAAwBvI,GAClDpD,EAAM2L,oBAAoB,kBAAmBpJ,UAEtCvC,EAAM2C,SD0FTzG,EAAqBqC,KAAKyB,MAAOzF,EACrC,oFAICsP,CAAA,CA3FO,CAAS+B,IA+FrB/B,EAAO1O,UAAUgQ,eAAgB,EACjCtB,EAAO1O,UAAUhC,QAAUA,EAC3B0Q,EAAO1O,UAAU0Q"}