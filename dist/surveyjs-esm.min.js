/* surveyJS v3.0.0 | Valerio Di Punzio (@SimplySayHi) | https://www.valeriodipunzio.com/plugins/surveyJS/ | https://github.com/SimplySayHi/surveyJS | MIT license */
import e from"formjs-plugin";const t="sjs:init",s=e=>(Object.getOwnPropertyNames(e).forEach(t=>{const r=e[t];"object"==typeof r&&null!==r&&s(r)}),Object.freeze(e)),r=e=>"[object Object]"===Object.prototype.toString.call(e),a=function(e={}){return Array.from(arguments).slice(1).filter(e=>!!e).forEach(t=>{Object.keys(t).forEach(s=>{Array.isArray(t[s])?e[s]=(e[s]||[]).concat(t[s].slice(0)):r(t[s])?e[s]=a(e[s]||{},t[s]):Array.isArray(e[s])?e[s].push(t[s]):e[s]=t[s]})}),e},o='[data-surveyjs-form] input:not([type="reset"]):not([type="submit"]):not([type="button"]), [data-surveyjs-form] select, [data-surveyjs-form] textarea, [data-name="bind-surveyjs-answer"]',i=e=>r(e)&&0===Object.getOwnPropertyNames(e).length,n=(e,t)=>Object.keys(e).reduce((t,s)=>{const r=new RegExp("{{"+s+"}}","g");return t.replace(r,e[s])},t),l=e=>(e[0].sort&&e.sort((e,t)=>e.sort>t.sort),e),c=()=>{const e=(()=>{const e="check_storage";try{return localStorage.setItem(e,e),localStorage.removeItem(e),!0}catch(e){return!1}})();return e&&(Storage.prototype.setObject=function(e,t){this.setItem(e,JSON.stringify(t))},Storage.prototype.getObject=function(e){const t=this.getItem(e);return t&&JSON.parse(t)}),{isAvailable:e}},d=(e,t)=>{const s=e.questions,r=s.length;let a={};for(let e=0;e<r;e++){const r=s[e];if(r.id==t){a=r;break}}return a},u={formOptions:{beforeSend:function(e){let t=!1;const s=this,r=s.formEl.closest("[data-surveyjs-container]"),i=Array.from(r.querySelectorAll(o));let n="",l="";if(i.forEach(e=>{const r=e.type,a=e.name;if(a===n&&r===l)return;e.matches("[data-required-from]")||(n=a,l=r);const o=e.closest("[data-question-id]"),i=o?o.getAttribute("data-question-id"):"",c=d(s.data,i);if(""!==i&&c&&c.required){const s=e.matches("[data-required-from]"),r=document.querySelector(e.getAttribute("data-required-from"));(!s||s&&r.checked)&&(e.required||(t=!0),e.required=!0)}}),t){const t=a({},s.options.fieldOptions,{focusOnRelated:!1});return s.validateForm(t).then(t=>(e.stopExecution=!0,e))}return e},getFormData:function(){const e=this.formEl,t=e.formjs,s=Array.from(e.closest("[data-surveyjs-container]").querySelectorAll(o)),r={answers:[],id:t.data.id};let a="",n="";return s.forEach(s=>{const o=s.type,l=s.name;if(l===a&&o===n)return;s.matches("[data-required-from]")||(a=l,n=o);const c=s.closest("[data-question-id]"),u=c?c.getAttribute("data-question-id"):"",p={question:u,answer:{value:s.value||""}};if(!s.matches("[data-required-from]")&&""!==u&&!i(d(t.data,u))){if("radio"===o){const r=(s.closest("form")?e:s.closest(t.options.fieldOptions.questionContainer)).querySelector('[name="'+l+'"]:checked');p.answer.value=r&&r.value||"",r&&r.matches("[data-require-more]")&&(p.answer.related=e.querySelector('[data-required-from="#'+r.id+'"]').value)}"checkbox"===o&&s.matches("[data-checks]")&&(p.answer.value=[],Array.from(e.querySelectorAll('[name="'+l+'"]:checked')).forEach(e=>{p.answer.value.push(e.value)})),r.answers.push(p)}}),r}}},p={cssClasses:{checkbox:"form-check-input",default:"form-control",file:"form-control-file",label:"form-check-label",radio:"form-check-input",wrapper:{checkbox:"form-check",default:"",radio:"form-check"}},fieldErrorFeedback:!0,formOptions:{beforeSend:[u.formOptions.beforeSend],getFormData:u.formOptions.getFormData},initAjaxOptions:{cache:"no-store",credentials:"same-origin",headers:{"Content-Type":"application/json",Accept:"application/json"},method:"GET",mode:"same-origin",redirect:"follow",timeout:0},messages:{maxChoice:"ANSWERS MAX",errorMessage:"Answer is necessary.",errorMessageMultiChoice:"You must choose from {{checksMin}} to {{checksMax}} answers."},templates:{error:'<div class="surveyjs-field-error-message">{{errorMessage}}</div>',input:'<input {{fieldAttributes}} name="surveyjs-answer-{{questionNumber}}{{addMoreName}}" class="surveyjs-input surveyjs-{{answerType}} {{fieldClasses}}" />',label:'<label for="{{answerCode}}" class="surveyjs-label {{labelClasses}}">{{labelString}}</label>',loading:'<div class="surveyjs-loading" data-surveyjs-loading>Loading...</div>',question:'<div data-question-id="{{questionId}}" data-formjs-question class="surveyjs-question-box"><div class="surveyjs-question-header">Question {{questionNumber}}</div><div class="surveyjs-question-body"><div class="surveyjs-question-text">{{questionText}}</div><div class="surveyjs-answers-box form-group">{{answersHTML}}{{errorsHTML}}</div></div></div>',select:'<select {{fieldAttributes}} name="surveyjs-answer-{{questionNumber}}{{addMoreName}}" class="surveyjs-select {{fieldClasses}}">{{optionsHtml}}</select>',textarea:'<textarea {{fieldAttributes}} name="surveyjs-answer-{{questionNumber}}" class="surveyjs-textarea {{fieldClasses}}"></textarea>',wrapper:{default:'<div class="surveyjs-single-answer surveyjs-field-container surveyjs-answer-{{answerType}} {{wrapperClasses}}">{{fieldTemplate}}{{labelTemplate}}</div>',errors:'<div class="surveyjs-errors-wrapper" data-surveyjs-errors>{{errorTemplates}}</div>',nested:'<div class="surveyjs-nested-parent surveyjs-single-answer surveyjs-field-container surveyjs-answer-{{answerType}}">{{labelTemplate}}<div class="surveyjs-nested-container surveyjs-field-indent">{{nestedFieldsHTML}}</div></div>',related:'<div class="surveyjs-single-answer surveyjs-field-container input-group {{wrapperClasses}}"><div class="input-group-prepend"><div class="input-group-text form-check surveyjs-answer-radio">{{fieldTemplate}}{{labelTemplate}}</div></div>{{relatedFieldHTML}}</div>'}},useWebStorage:!0},m={storageArray:[],storageName:"Survey_"+location.href+"_{{surveyFormName}}_surveyId[{{surveyId}}]"},f=(e,t,s="")=>{const r=sessionStorage.getObject(e.storageName);if(r){const e=r.length;for(let a=0;a<e;a++){const e=r[a];if(e.field===t){if(s&&e.value!==s)continue;return a}}}return-1},y=function(e){const t=e.target.formjs;e.data.then(()=>{t.options.useWebStorage&&sessionStorage.removeItem(t.internals.storageName)})},v=function(e){const t=e.type,s=e.target,r=s.closest("form").formjs,a=r.internals,o=s.closest(r.options.fieldOptions.questionContainer),n=s.value,l=s.matches("[data-checks]"),c=s.matches("[data-require-more]"),u=s.matches("[data-required-from]"),p=u?o.querySelector(s.getAttribute("data-required-from")):null,m=u?p:s,y=m.id?m.id.split("-")[2]:"id-not-found",v=(e=>e.matches('select, [type="radio"], [type="checkbox"], [type="file"]'))(s),h=d(r.data,y);if(i(h))return!0;if(v&&"change"===t||!v&&"change"!==t){if(r.options.useWebStorage&&!s.matches("[data-exclude-storage]")){const e=f(a,s.name,!!l&&n),t=f(a,s.name+"-more");let r=a.storageArray;if(c||u||-1===t||r.splice(t,1),-1!==e)l?s.checked||r[e].value!==n?r.push({field:s.name,value:n}):r.splice(e,1):""!==n?r[e].value=n:r.splice(e,1);else if(""!==n){if(u&&""!==n){const e=f(a,p.name);-1!==e&&r.splice(e,1),r.push({field:p.name,value:p.value})}if(r.push({field:s.name,value:n}),c){const e=s.closest("form").querySelector('[data-required-from="#'+s.id+'"]');r.push({field:e.name,value:e.value})}}sessionStorage.setObject(a.storageName,r)}void 0!==h.required&&(s.required=!0)}},h=function(e){const t=e.data.fieldEl,s=e.data.errors,a=e.target.formjs,o=t.id?t.id.split("-")[2]:"id-not-found",i=d(a.data,o);if(s&&r(i.errorMessage)){const e=t.closest(a.options.fieldOptions.questionContainer).querySelector("[data-surveyjs-errors]"),r=Object.keys(s).reduce((e,t)=>{const s=i.errorMessage[t]||"";return e+(s?a.options.templates.error.replace("{{errorMessage}}",s):"")},"");e.innerHTML=r}},b=(e=[])=>l(e).reduce((e,t)=>e+`<option value="${t.value}">${t.label}</option>`,""),g=(e,t,s)=>{const r=["data","id","label","nested","related","sort"];/^(option|textarea)$/.test(e.type)&&r.push("type","value");let a="";return Object.keys(e).filter(e=>-1===r.indexOf(e)).forEach(t=>{a+=` ${t}="${e[t]}"`}),e.data&&Object.keys(e.data).forEach(t=>{a+=` data-${((e="",t=!1)=>{let s=e.trim().replace(/(([_ ])([a-z]))|(([a-z])?([A-Z]))/g,(e,t,s,r,a,o,i)=>(r?"-"+r:(o||"")+"-"+i).toLowerCase());return t?s.toUpperCase():s})(t)}="${e.data[t]}"`}),s&&(a+=" required"),e.related&&(a+=" data-require-more"),a+=` id="${t}"`,a.trim()},j=(e,t,s)=>{let r="",o="";return l(t).forEach((i,l)=>{let c="";const d="option"===i.type?"select":i.type;if("select"===d&&o===d)return;o=d,s.question.checks&&(i=a({},i,{data:{checks:s.question.checks}}));const u=`${d}-${s.surveyId}-${s.question.id}-${"select"===d?l+1:i.id}`,p={questionNumber:s.question.index+1,wrapperClasses:e.cssClasses.wrapper[d]||e.cssClasses.wrapper.default,fieldAttributes:g(i,u,s.question.isRequired),fieldClasses:e.cssClasses[d]||e.cssClasses.default,answerType:d,answerCode:u,addMoreName:"",labelString:i.label||"",labelClasses:e.cssClasses.label};let m="";if(i.related){const t=i.related.type||"select",s="select"===t,r=s?a({},i):i.related;r.type=s?"option":t,r.id="",r.data=a({},r.data,{requiredFrom:"#"+u}),delete r.related;const o={fieldAttributes:g(r,"",!1),answerType:t,addMoreName:"-more",fieldClasses:s?e.cssClasses.select:e.cssClasses[t]||e.cssClasses.default};if(m=e.templates[t]||e.templates.input,s){const e=b(i.related);m=m.replace("{{optionsHtml}}",e)}m=n(o,m)}const f=i.related?"related":i.nested?"nested":d,y=((e,t)=>({field:e[t]||e.input,label:/^(checkbox|nested|radio|related)$/.test(t)?e.label:"",wrapper:e.wrapper[t]||e.wrapper.default}))(e.templates,f);let v="";i.nested&&(v=j(e,i.nested,s));let h="";"select"===d&&(h=b(t)),c=y.wrapper.replace("{{relatedFieldHTML}}",m).replace("{{fieldTemplate}}",y.field).replace("{{optionsHtml}}",h).replace("{{labelTemplate}}",y.label).replace("{{nestedFieldsHTML}}",v),r+=n(p,c)}),r},q=(e,t,s,a)=>{const o=e.getAttribute("name")||"";s.storageName=s.storageName.replace(/{{surveyId}}/,a.id),s.storageName=s.storageName.replace(/{{surveyFormName}}/,o);const i=((e,t,s)=>{const a=l(s.questions),o=a.length;let i="";for(let l=0;l<o;l++){const o=a[l];let c=t.templates.question;const d=o.id,u=l+1,p={surveyId:s.id,question:{id:d,index:l,isRequired:!!o.required}};o.checks&&(p.question.checks=o.checks);let m=j(t,o.answers,p);if(o.external){const t=e.closest("[data-surveyjs-container]").querySelector("[data-surveyjs-external]");t.setAttribute("data-question-id",d),o.answers.forEach((e,s)=>{const r=t.querySelectorAll("[data-field]")[s],a={id:`${e.type}-${p.surveyId}-${d}-${e.id}`,name:`${r.name}${u}`,type:e.type,value:e.value,required:!!o.required};Object.keys(a).forEach(e=>{r[e]=a[e]});const i=r.closest("[data-answer]");i.querySelector("label").setAttribute("for",a.id),i.querySelector("[data-label]").innerHTML=e.label,t.querySelector("[data-question]").innerHTML=o.question});continue}const f=o.checks?JSON.parse(o.checks):"",y=f[0]||"",v=f[1]||"",h=f&&t.messages.maxChoice?" ("+v+" "+t.messages.maxChoice+")":"",b={questionId:d,questionNumber:u,questionText:o.question+h,answersHTML:m,errorsHTML:t.fieldErrorFeedback?t.templates.wrapper.errors:""};if(c=n(b,c),t.fieldErrorFeedback){let e=""!==f?t.messages.errorMessageMultiChoice:o.errorMessage||t.messages.errorMessage;r(e)&&(e=""),c=c.replace(/{{errorTemplates}}/g,e)}i+=n({checksMin:y,checksMax:v},c)}return i})(e,t,a);e.querySelector("[data-surveyjs-body]").insertAdjacentHTML("beforeend",i),t.useWebStorage&&((e,t)=>{const s=sessionStorage.getObject(t.storageName);if(s){const r=e.closest("[data-surveyjs-container]");t.storageArray=s,s.forEach(e=>{const t=r.querySelector('[name="'+e.field+'"]'),s=t.matches('[type="radio"], [type="checkbox"]'),a=s?r.querySelector('[name="'+e.field+'"][value="'+e.value+'"]'):t;s?a.checked=!0:a.value=e.value})}})(e,s)};class w extends e{constructor(e,r={}){if(!r.url||"string"!=typeof r.url)throw new Error('"options.url" is missing or not a string!');const o=a({},w.prototype.options,r);c().isAvailable||(o.useWebStorage=!1),super(e,o);const i=this;i.internals=m,i.options.fieldOptions.validateOnEvents.split(" ").forEach(e=>{const t="blur"===e;i.formEl.addEventListener(e,v,t)}),i.formEl.querySelector("[data-surveyjs-body]").insertAdjacentHTML("beforebegin",i.options.templates.loading);const n=((e=location.href,t={})=>{let s;if(t.headers=new Headers(t.headers),t.timeout>0){const e=new AbortController,r=e.signal;t.signal=r,s=window.setTimeout(()=>{e.abort()},t.timeout)}return fetch(e,t).then(e=>e.ok?e.json():Promise.reject(e)).catch(e=>Promise.reject(e)).finally(()=>{s&&window.clearTimeout(s)})})(i.options.url,i.options.initAjaxOptions).then(e=>"success"!==e.status.toLowerCase()?Promise.reject(e):new Promise(t=>{i.data=e.data,i.data.questions&&i.data.questions.length>0?(q(i.formEl,i.options,i.internals,i.data),s(i.data),i.formEl.addEventListener("fjs.field:validation",h),i.formEl.addEventListener("fjs.form:submit",y),super.init().then(()=>{i.isInitialized=!0,i.formEl.closest("[data-surveyjs-container]").classList.add("surveyjs-init-success"),t(e)})):t(e)})).finally(()=>{const e=i.formEl.querySelector("[data-surveyjs-loading]");e&&e.parentNode.removeChild(e)});((e,t,s={},r={})=>{r=a({},{bubbles:!0},r);const o=new Event(t,r);o.data=s,e.dispatchEvent(o)})(i.formEl,t,n)}destroy(){var e;(e=this.formEl).formjs.options.fieldOptions.validateOnEvents.split(" ").forEach(t=>{const s="blur"===t;e.removeEventListener(t,v,s)}),e.removeEventListener("fjs.form:submit",y),super.destroy()}static setOptions(e){w.prototype.options=a({},w.prototype.options,e)}}w.prototype.isInitialized=!1,w.prototype.options=p,w.prototype.version="3.0.0";export default w;
//# sourceMappingURL=surveyjs-esm.min.js.map
